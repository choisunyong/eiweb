{"version":3,"sources":["main/MenuCode.js","main/CookieNames.js","comp/common.js","comp/Loading.js","comp/Pagination.js","comp/Msg.js","comp/Confirm.js","comp/DeadServer.js","comp/SystemChecking.js","comp/Popup.js","comp/Modal.js","comp/gridRenderer/NameRenderer.js","comp/Validation.js","comp/Message.js","comp/GridList.js","main/MainTop.js","main/MenuData.js","main/Login.js","comp/http-common.js","main/MainService.js","dashboard/DashboardService.js","dashboard/ScaleInOutGrid.js","dashboard/Dashboard.js","model/ModelManager.js","model/ModelService.js","comp/file/services/upload-files.service.js","model/ModelReg.js","model/ModelDetail.js","model/ModelHistDetail.js","service/ServiceService.js","admin/AdminService.js","main/CommonCode.js","admin/UserReg.js","admin/UserManager.js","admin/ScaleInOutManager.js","admin/HistoryModelReg.js","admin/HistoryScaleInOut.js","admin/HistoryServiceReg.js","admin/HistoryUserLogin.js","admin/HistoryServiceDetail.js","admin/HistoryServiceExec.js","admin/CommonCodeMgr.js","admin/ServiceGroupManager.js","admin/ServiceGroupReg.js","model/ModelPopCont.js","service/ServiceReg.js","service/ServiceDetail.js","service/ServiceManager.js","service/ServiceHistDetail.js","main/MainContent.js","main/MainPath.js","main/SchIdPw.js","main/Logo.js","main/ChangeUserPassword.js","main/Main.js","serviceWorker.js","index.js"],"names":["exports","LOGIN_SCHIDPW","DASHBOARD","MODEL_MANAGER","SERVICE_MANAGER","ADMIN_HIST_SERVICEEXEC","ADMIN_USERMGR","ADMIN_HIST_LOGIN","ADMIN_HIST_MODELREG","ADMIN_HIST_SCALEINOUT","ADMIN_SACLEINOUTMGR","ADMIN_SERVICEGROUP","ADMIN_COMMONCODE","SESSION_ID","LAST_MENU_CODE","main","undefined","setCookie","name","value","day","date","Date","setTime","getTime","document","cookie","toUTCString","getCookie","match","makeParam","target","ret","refs","ref","tagName","type","checked","select","props","err","initForm","getFileSizeByte","sizestr","indexOf","parseInt","replace","getDisplFileSize","size","unit","units","i","length","Number","toFixed","korTypeToEng","src","KOR_KEY","res","ch","charAt","nCode","charCodeAt","nCho","nJung","nJong","arrKeyIndex","Math","floor","j","engTypeToKor","CHO_DATA","JUNG_DATA","JONG_DATA","p","makeHangul","newCho","String","fromCharCode","displNum","x","toString","Loading","className","Component","Pagination","onClickItem","bind","state","firstPage","lastPage","pageCount","page","this","setState","maxPage","totalCount","perPage","movePage","pages","push","index","active","onClick","e","console","log","key","random","appendClass","React","PageItem","option","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","ok","info","warn","error","msg","setUserOption","opts","useropts","useropt","shutMsg","common","substr","Confirm","onClose","onOk","confirmCancelFn","hideConfirm","confirmOkfn","confirmMessage","okLabel","cancelLabel","top","getElementById","clientHeight","style","display","href","marginLeft","DeadServer","SystemChecking","Popup","onStart","activeDrags","onStop","deltaPosition","y","controlledPosition","onClickOk","okFn","title","content","headerVisiable","popupBtnAreaVisible","contentAppendClass","popupSty","closeLabel","width","height","axis","handle","defaultPosition","grid","scale","class","Modal","NameRenderer","el","createElement","columnInfo","renderer","options","listData","onClickGridNameColumn","labelKey","item","rowKey","innerText","addEventListener","numberExp","emailExp","telNoExp","idExp","pwExp","phoneExp","modelNameExp","modelNickExp","serviceNameExp","resourceGroupNameExp","serviceGroupNameExp","serviceDagIdExp","searchExp","commCodeExp","chkPhone","chkEmail","chkId","chkPw","chkNumber","filterSchKeyword","chkVal","result","errMsg","chk","test","Message","message","GridList","columns","gridData","noDataMsg","bodyHeight","col","colsty","headercellsty","itm","rowcols","headers","colGroup","headersty","rowsty","align","verticalAlign","textAlign","padding","header","rowcolsty","rows","colSpan","noneContent","s","overflow","left","NoneRow","colspan","MainTop","subBgHei","isMenuItemActive","onLogout","onLogoutResult","onClickChangePw","menuCode","MainService","logout","login","role","username","sessionId","userInfo","onMenuChange","MenuCode","showPopup","hidePopup","menuItems","menu","currentMenuCode","MODEL","SERVICE","subMenu","MenuData","service","ADMIN","admin","LOGIN","MenuItem","subMenuItems","home","paths","model","map","getPaths","getMenuMap","m","iitm","children","Login","onLoginResult","process","REACT_APP_DEBUG","REACT_APP_DEV_AUTO_LOGIN","uid","pw","focus","userId","data","userPermission","CookieNames","showLogin","REACT_APP_FIRST_MENU_CODE","Msg","REACT_APP_DEV_LOGIN_ID","REACT_APP_DEV_LOGIN_PW","placeholder","autocomplete","onKeyDown","keyCode","defaultValue","axios","create","baseURL","id","resFn","errFn","formData","FormData","append","http","post","then","catch","get","parm","v","groupUseYn","useYn","k","ScaleInOutGrid","cellHeight","cellColsCount","rowHei","rowData","Row","cellCount","cells","cls","Dashboard","serviceExecHistoryColumns","serviceExecSummColumns","serviceExecStatusForToday","serviceTodayExecSummForGroup","serviceTotalExecSummForGroup","serviceExecHistory","serviceExecSummListForGroup","scaleInOutSummary","containerInfo","cpuAvgList","cpuSummListForDay","cpuSummListForMonth","cpuSummListForHour","cpuAvgListForHour","todayCpuAvg","serverNames","cpuSummList","cpuSummType","onResultResourceData","onResultServiceData","onTimerDashboard","onTimerDashboard2","onResultRealData","onResultRealData2","onClickTab","showLoading","DashboardService","dashboardServiceData","clearInterval","timerID","timer2ID","dashboardRealData","dashboardRealData2","hideLoading","parseFloat","cpuAverage","setInterval","paddingRight","sortable","StatusRenderer","serviceGroupName","dashboardResourceData","contains","hasContainer","RealCpuTooltip","payload","label","lblStr","receiveDate","border","background","color","isNaN","CpuUtilizationTooltip","tooltips","fontWeight","dataKey","ServiceExecutionTooltip","pieData","todayCpuAvgSty","right","colors","cpuUtilizationLines","fill","stroke","strokeWidth","dot","r","isAnimationActive","serviceExecutionLines","activeDot","alt","justifyContent","margin","bottom","domain","strokeDasharray","marginTop","cx","cy","innerRadius","outerRadius","paddingAngle","defaultChecked","iconType","total","success","fail","serviceStatus","ModelManager","pagesPage","pagesTotalCount","pagesPerPage","requestData","onResultList","onClickPageItem","onClickDel","onResultDel","onConfirmOkDel","onConfirmCancelDel","onClickReg","onCloseReg","popupModify","onClickSch","onClickTestReq","onResultTestReq","TuiGrid","setLanguage","applyTheme","schKey","schType","schKeyword","Validation","ModelService","list","pagesInfo","minWidth","whiteSpace","LinkRenderer","isPopup","onChangeItem","onSelection","getModelInfo","modelId","modelInfo","selectionRowKey","selectionItem","selectionColumName","columnName","showDetail","onCloseDetail","chkedModels","getInstance","getCheckedRows","delModels","delete","modifyModelInfo","modifyModelFiles","modifyFlag","modelFiles","modelTestReq","float","rowHeaders","columnOptions","resizable","scrollX","scrollY","evaluationStatus","modelName","modelNick","fileCodes","modelIds","version","file","onUploadProgress","ModelReg","nameValid","nickValid","modelFileValid","descLength","currentFile","initModify","inputChange","checkedPriority","validationCheck","onChangeName","onResultRegist","onChangeDesc","selectFile","upload","fileValidationCheck","fileRadioClick","onChangePriority","onClickRadio","modelDesc","event","files","uploadFile","UploadService","round","loaded","response","fileName","fileSize","modelFileCodes","ext","fileCode","lastIndexOf","toUpperCase","baseImage","priority","regist","chkState","priorityValid","valiRes","chkModelName","validName","limitRuntime","defaultState","delFiles","fileDelete","setTimeout","selFileCode","mainYn","currentTarget","modelFileName","radios","prioritys","CommonCode","getCodeList","code","for","codeName","disabled","onChange","maxLength","readonly","paddingLeft","alignItems","min","max","step","cols","maxlength","ModelDetail","onResultInfo","modelFileItems","optsPriority","getCodeSelectList","defaultValuePriority","cpuCores","mem","elapsed","FileRow","fileExt","ModelHistDetail","getModelHistInfo","priorityNm","serviceName","serviceId","serviceIds","resourceIds","url","req_type","serviceGroupoName","serviceGroupNames","groupCode","commonCode","arr","valueKey","selectedValue","allFlag","allLabel","selected","UserReg","onClickSave","onResultSave","param","AdminService","save","validId","userName","validPw","pwchk","userEmail","validEmail","modifyUserInfo","activate","userPermissionOptions","makeOptions","userActiveOptions","UserManager","schInfo","onClickChangeActivate","onResultChangeActivate","userList","ActivateRenderer","formCover","permissionOpts","outline","ScaleInOutManager","scaleOutRuleModifyMode","scaleOutRuleEnable","scaleOutCpuPercent","scaleOutDurationMin","scaleInRuleModifyMode","scaleInRuleEnable","scaleInCpuPercent","scaleInDurationMin","onResultDeviceList","onClickScaleInOut","onResultScaleInOut","onClickScaleOutRuleModify","onClickSaveScaleOutRule","onResultScaleInOutRuleInfo","onResultSaveScaleInOutRule","scaleInOutRuleInfo","deviceList","server","serverName","scaleState","scaleInOut","nodeName","CustomButtonRenderer","scaleInRule","cpuPercent","durationMin","ruleEnable","scaleOutRule","listKeys","saveScaleInOutRule","onClickSaveScaleInRule","onClickScaleInRuleModify","HistoryModelReg","stDt","edDt","formatDate","parseDate","onChangeStDt","onChangeEdDt","action","sub","months","endDate","dateFnsFormat","locale","startDate","regHistory","onClickModify","format","str","dateFnsParse","minDt","maxDt","add","actionOpts","onDayChange","HistoryScaleInOut","scaleInOutType","scaleHistory","serverNameOpts","scaleInOutTypeOpts","HistoryUserLogin","userLoginHistory","HistoryServiceDetail","detailInfo","onResultSvcExecHistInfo","serviceHistory","serviceExecHistoryResult","ReactHtmlParser","html","marginBottom","HistoryServiceExec","serviceGroupData","onResultServiceGroupList","setStateFlag","serviceGroupList","DagIdRenderer","totalStatus","serviceGroupOpts","warning","CommonCodeMgr","groupData","groupColumns","codeData","codeColumns","selectionGroupItem","selectionCodeItem","groupSaveType","codeSaveType","validGrpCd","validGrpCdNm","validCd","validCdNm","reqDeleteCodeAll","reqCommGroupList","reqCommCodeList","onResultCommonGroupList","onResultCommonCodeList","onClickGroupGrid","onClickCodeGrid","groupGridSelectedItem","codeGridSelectedItem","initGroupForm","initCodeForm","disabledGroupForm","disabledCodeForm","onClickBtnGroupSave","onClickBtnGroupDel","onClickBtnCodeSave","onClickBtnCodeDel","onClickGroupAdd","onClickCodeAdd","validationCheckGroup","validationCheckCode","initValids","onResultGroupSave","onResultCodeSave","onResultGroupDel","onResultCodeDel","onConfirmGroupDelOk","onConfirmCodeDelOk","onConfirmCancel","commonGroupList","commonCodeList","groupName","btnGroupSave","btnGroupDel","sort","btnCodeSave","btnCodeDel","selectedItem","chkCommonCode","gridEvt","saveType","saveCodeGroup","showConfirm","deleteCodeAll","deleteCodeGroup","saveCode","deleteCode","paddingTop","ServiceGroupManager","modifyServiceGroupInfo","chkedRsrs","delServiceGroups","deleteServiceGroup","ServiceGroupReg","isNameChk","onResultCreate","createServiceGroup","validCpu","chkServiceGroupName","description","ModelPopCont","onClickSelection","SelectButton","ServiceReg","validModelId","validUseData","selectedFiles","popupSelectedItem","resourceGroupData","selectedResourceGroupId","selectedServiceGroupName","models","modelChoosePopup","modelSelectedItem","onClickModelPop","onClickModelSelection","onChangeDagId","ServiceService","chkServiceName","dagId","chkServiceDagIdExp","validDagId","runCycle","split","addModelData","serviceDesc","modifyServiceInfo","modelNam","borderRadius","rel","ServiceDetail","ServiceManager","onClickSchModelDel","onClickKill","schServiceGroup","getServiceInfo","serviceInfo","kill","onResultKill","schSty","backgroundColor","cursor","borderLeft","running","standby","unscheduled","onResultResourceGroupList","getServiceHistInfo","resourceGroupList","resourceGroupOpts","resourceGroupId","resourceGroupName","modifyButtonVisible","MainPath","pathcomps","PathItem","SchIdPw","tabFocus","tabChange","onClickSchId","onClickSchPw","validationSchId","validationSchPw","onResultSearchId","onResultSearchPw","schIdEmail","searchId","schPwEmail","searchPw","Logo","ChangeUserPassword","onConfirmOk","currpw","fontSize","paddingBottom","changeUserPw","onResultChangePw","Main","loading","popup","modal","allScreen","confirm","confirmTitle","popupIdx","popups","popupTitle","popupContent","popupOpts","popupOkFn","popupCancelFn","messageMsg","onResultCommonCode","getContent","onChkLogin","onFail","hideLogin","defaults","window","onresize","unconditionality","pathData","MainContent","cancelFn","cont","closeFn","popupOpt","nPopups","nPopupIdx","setData","getValue","setSessionId","chkLogin","preMenuCode","popOpts","pops","Boolean","location","hostname","evt","innerHeight","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uFAAAA,EAAQC,cAAgB,YAExBD,EAAQE,UAAY,UAEpBF,EAAQG,cAAgB,YAExBH,EAAQI,gBAAkB,YAC1BJ,EAAQK,uBAAyB,YAEjCL,EAAQM,cAAgB,YACxBN,EAAQO,iBAAmB,cAC3BP,EAAQQ,oBAAsB,cAC9BR,EAAQS,sBAAwB,cAChCT,EAAQU,oBAAsB,YAC9BV,EAAQW,mBAAqB,YAC7BX,EAAQY,iBAAmB,a,kBCf3BZ,EAAQa,WAAW,iBACnBb,EAAQc,eAAe,iB,yHCDvBd,EAAQe,UAAOC,EAOfhB,EAAQiB,UAAY,SAASC,EAAMC,EAAOC,GACtC,IAAIC,EAAO,IAAIC,KACfD,EAAKE,QAAQF,EAAKG,UAAkB,GAANJ,EAAW,GAAK,GAAK,KACnDK,SAASC,OAASR,EAAO,IAAMC,EAAQ,YAAcE,EAAKM,cAAgB,WAO9E3B,EAAQ4B,UAAY,SAASV,GACzB,IAAIC,EAAQM,SAASC,OAAOG,MAAM,UAAYX,EAAO,iBACrD,OAAOC,EAAOA,EAAM,GAAK,IAO7BnB,EAAQ8B,UAAY,SAASC,GACzB,IAAIC,EAAM,GACJC,EAAOF,EAAOE,KACpB,IAAK,IAAIC,KAAOD,EACZ,IAC8B,UAAtBA,EAAKC,GAAKC,SAA6C,WAAtBF,EAAKC,GAAKC,SAA8C,aAAtBF,EAAKC,GAAKC,QACtD,aAAnBF,EAAKC,GAAKE,KACVJ,EAAIE,GAAOD,EAAKC,GAAKG,QAAU,IAAM,IAErCL,EAAIE,GAAOD,EAAKC,GAAKf,MACG,kBAAdc,EAAKC,IAA0C,OAArBD,EAAKC,GAAKI,SAClDN,EAAIE,GAAOD,EAAKC,GAAKI,OAAOC,MAAMpB,MAAMA,OAE9C,MAAOqB,IAEb,OAAOR,GAMXhC,EAAQyC,SAAW,SAASV,GACxB,IAAME,EAAOF,EAAOE,KACpB,IAAK,IAAIC,KAAOD,EACZ,IAC8B,UAAtBA,EAAKC,GAAKC,SAA6C,WAAtBF,EAAKC,GAAKC,SAA8C,aAAtBF,EAAKC,GAAKC,UAC7EF,EAAKC,GAAKf,MAAQ,IACxB,MAAOqB,MAQjBxC,EAAQ0C,gBAAkB,SAASC,GAC/B,IAAIX,EAAM,EAkBV,OAjBIW,EAAQC,QAAQ,OAAS,EACzBZ,EAAwC,KAAlCa,SAASF,EAAQG,QAAQ,OACxBH,EAAQC,QAAQ,OAAS,EAChCZ,EAAwC,KAAlCa,SAASF,EAAQG,QAAQ,OAAgB,KACxCH,EAAQC,QAAQ,OAAS,EAChCZ,EAAwC,KAAlCa,SAASF,EAAQG,QAAQ,OAAgB,KAAO,KAC/CH,EAAQC,QAAQ,OAAS,EAChCZ,EAAwC,KAAlCa,SAASF,EAAQG,QAAQ,OAAgB,KAAO,KAAO,KACtDH,EAAQC,QAAQ,OAAS,EAChCZ,EAAwC,KAAlCa,SAASF,EAAQG,QAAQ,OAAgB,KAAO,KAAO,KAAO,KAC7DH,EAAQC,QAAQ,OAAS,EAChCZ,EAAwC,KAAlCa,SAASF,EAAQG,QAAQ,OAAgB,KAAO,KAAO,KAAO,KAAO,KACpEH,EAAQC,QAAQ,OAAS,EAChCZ,EAAwC,KAAlCa,SAASF,EAAQG,QAAQ,OAAgB,KAAO,KAAO,KAAO,KAAO,KAAO,KAC3EH,EAAQC,QAAQ,OAAS,IAChCZ,EAAwC,KAAlCa,SAASF,EAAQG,QAAQ,OAAgB,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,MAEtFd,GAOXhC,EAAQ+C,iBAAmB,SAASC,GAGhC,IAFA,IAAIC,EAAO,IACLC,EAAQ,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MACzCC,EAAE,EAAGA,EAAED,EAAME,QACdJ,EAAO,KADeG,IAEtBH,EAAOK,OAAOL,EAAO,MAAMM,QAAQ,GACnCL,EAAOC,EAAMC,GAGrB,OAAOH,EAAOC,GAOlBjD,EAAQuD,aAAe,SAASC,GAC/B,IACIC,EAAU,yMAKVC,EAAM,GACV,GAAmB,IAAfF,EAAIJ,OACP,OAAOM,EAGR,IAAK,IAAIP,EAAI,EAAGA,EAAIK,EAAIJ,OAAQD,IAAK,CACpC,IAAIQ,EAAKH,EAAII,OAAOT,GAChBU,EAAQF,EAAGG,WAAW,GACtBC,EAZU,qHAYMnB,QAAQe,GAAKK,EAXlB,iIAWoCpB,QAAQe,GAAKM,EAVjD,qKAUmErB,QAAQe,GACtFO,EAAc,EAAE,GAAI,GAAI,GAAI,GAAI,GAGhC,OAAUL,GAASA,GAAS,OAC/BA,GAAS,MACTK,EAAY,GAAKC,KAAKC,MAAMP,EAAK,KACjCK,EAAY,GAAKC,KAAKC,MAAMP,EAAQ,IAAM,GAC1CK,EAAY,GAAKL,EAAQ,GAAK,IACV,IAAVE,EACVG,EAAY,GAAKH,GACE,IAAXC,EACRE,EAAY,GAAKF,GACE,IAAXC,EACRC,EAAY,GAAKD,EAEjBP,GAAOC,GAIgB,IAApBO,EAAY,KACQ,IAAnBA,EAAY,IACfA,EAAY,GAAK,GACjBA,EAAY,GAAK,IACY,KAAnBA,EAAY,IACtBA,EAAY,GAAK,GACjBA,EAAY,GAAK,IACY,KAAnBA,EAAY,IACtBA,EAAY,GAAK,GACjBA,EAAY,GAAK,IACY,KAAnBA,EAAY,IACtBA,EAAY,GAAK,GACjBA,EAAY,GAAK,IACY,KAAnBA,EAAY,IACtBA,EAAY,GAAK,GACjBA,EAAY,GAAK,IACY,KAAnBA,EAAY,IACtBA,EAAY,GAAK,GACjBA,EAAY,GAAK,IACY,KAAnBA,EAAY,IACtBA,EAAY,GAAK,GACjBA,EAAY,GAAK,KAEjBA,EAAY,GAAKT,EAAQb,QAtDZ,iIAsD8BgB,OAAOM,EAAY,KAC9DA,EAAY,IAAM,KAGI,IAApBA,EAAY,KACQ,IAAnBA,EAAY,IACfA,EAAY,GAAK,EACjBA,EAAY,GAAK,GACY,IAAnBA,EAAY,IACtBA,EAAY,GAAK,EACjBA,EAAY,GAAK,IACY,IAAnBA,EAAY,IACtBA,EAAY,GAAK,EACjBA,EAAY,GAAK,IACY,IAAnBA,EAAY,IACtBA,EAAY,GAAK,EACjBA,EAAY,GAAK,GACY,IAAnBA,EAAY,IACtBA,EAAY,GAAK,EACjBA,EAAY,GAAK,GACY,KAAnBA,EAAY,IACtBA,EAAY,GAAK,EACjBA,EAAY,GAAK,GACY,KAAnBA,EAAY,IACtBA,EAAY,GAAK,EACjBA,EAAY,GAAK,GACY,KAAnBA,EAAY,IACtBA,EAAY,GAAK,EACjBA,EAAY,GAAK,IACY,KAAnBA,EAAY,IACtBA,EAAY,GAAK,EACjBA,EAAY,GAAK,IACY,KAAnBA,EAAY,IACtBA,EAAY,GAAK,EACjBA,EAAY,GAAK,IACY,KAAnBA,EAAY,IACtBA,EAAY,GAAK,EACjBA,EAAY,GAAK,IAEjBA,EAAY,GAAKT,EAAQb,QA5FZ,qKA4F8BgB,OAAOM,EAAY,KAC9DA,EAAY,IAAM,IAKpB,IAAK,IAAIG,EAAI,EAAGA,EAAI,EAAGA,KACE,IAApBH,EAAYG,KACfX,GAxGW,oCAwGIE,OAAOM,EAAYG,KAKrC,OAAOX,GAOR1D,EAAQsE,aAAe,SAASd,GAC5B,IACCC,EAAU,yMACVc,EAAW,qHACXC,EAAY,iIACTC,EAAY,qKAEff,EAAM,GACV,GAAmB,IAAfF,EAAIJ,OACR,OAAOM,EAMP,IAHA,IAAIK,GAAQ,EAAGC,GAAS,EAAGC,GAAS,EAG3Bd,EAAI,EAAGA,EAAIK,EAAIJ,OAAQD,IAAK,CACpC,IAAIQ,EAAKH,EAAII,OAAOT,GAChBuB,EAhBY,oCAgBA9B,QAAQe,GACxB,IAAW,IAAPe,GAEW,IAAVX,EAEFL,IADc,IAAXM,EACIW,EAAWZ,EAAMC,EAAOC,GAExBM,EAASX,OAAOG,IAET,IAAXC,EACHN,GAAOc,EAAUZ,OAAOI,IACL,IAAXC,IACRP,GAAOe,EAAUb,OAAOK,IAE1BF,GAAQ,EACRC,GAAS,EACTC,GAAS,EACTP,GAAOC,OACD,GAAIe,EAAI,IACC,IAAXV,GACW,IAAVD,GACHL,GAAOc,EAAUZ,OAAOI,GACxBA,GAAS,EACTD,EAAOQ,EAAS3B,QAAQa,EAAQG,OAAOc,MAExB,IAAXT,GAEY,KADfA,EAAQQ,EAAU7B,QAAQa,EAAQG,OAAOc,OAExChB,GAAOiB,EAAWZ,EAAMC,EAAOC,GAC/BF,EAAOQ,EAAS3B,QAAQa,EAAQG,OAAOc,IACvCV,GAAS,GAEU,IAAVC,GAAqB,IAANS,EACzBT,EAAQ,EACY,IAAVA,GAAqB,KAANS,EACzBT,EAAQ,EACY,IAAVA,GAAqB,KAANS,EACzBT,EAAQ,EACY,IAAVA,GAAqB,IAANS,EACzBT,EAAQ,EACY,IAAVA,GAAqB,IAANS,EACzBT,EAAQ,EACY,IAAVA,GAAqB,IAANS,EACzBT,EAAQ,GACY,IAAVA,GAAqB,IAANS,EACzBT,EAAQ,GACY,IAAVA,GAAqB,KAANS,EACzBT,EAAQ,GACY,IAAVA,GAAqB,KAANS,EACzBT,EAAQ,GACY,IAAVA,GAAqB,KAANS,EACzBT,EAAQ,GACY,KAAVA,GAAsB,IAANS,EAC1BT,EAAQ,IAERP,GAAOiB,EAAWZ,EAAMC,EAAOC,GAC/BF,EAAOQ,EAAS3B,QAAQa,EAAQG,OAAOc,IACvCV,GAAS,EACTC,GAAS,IAIG,IAAVF,IACY,IAAXE,IACHP,GAAOe,EAAUb,OAAOK,GACxBA,GAAS,GAEVF,EAAOQ,EAAS3B,QAAQa,EAAQG,OAAOc,KACpB,IAATX,GAAoB,IAANW,GACxBX,GAAQ,EACRE,EAAQ,GACW,IAATF,GAAoB,KAANW,GACxBX,GAAQ,EACRE,EAAQ,GACW,IAATF,GAAoB,KAANW,GACxBX,GAAQ,EACRE,EAAQ,GACW,IAATF,GAAoB,IAANW,GACxBX,GAAQ,EACRE,EAAQ,GACW,IAATF,GAAoB,IAANW,GACxBX,GAAQ,EACRE,EAAQ,GACW,IAATF,GAAoB,IAANW,GACxBX,GAAQ,EACRE,EAAQ,IACW,IAATF,GAAoB,IAANW,GACxBX,GAAQ,EACRE,EAAQ,IACW,IAATF,GAAoB,KAANW,GACxBX,GAAQ,EACRE,EAAQ,IACW,IAATF,GAAoB,KAANW,GACxBX,GAAQ,EACRE,EAAQ,IACW,IAATF,GAAoB,KAANW,GACxBX,GAAQ,EACRE,EAAQ,IACW,IAATF,GAAoB,IAANW,GACxBX,GAAQ,EACRE,EAAQ,KAERP,GAAOa,EAASX,OAAOG,GACvBA,EAAOQ,EAAS3B,QAAQa,EAAQG,OAAOc,SAGnC,CAGL,IAAIE,EAFL,IAAe,IAAXX,EAGW,IAAVA,GACHA,EAAQ,EACRW,EAAS,GACW,IAAVX,GACVA,EAAQ,EACRW,EAAS,IACW,IAAVX,GACVA,EAAQ,EACRW,EAAS,IACW,IAAVX,GACVA,EAAQ,EACRW,EAAS,GACW,IAAVX,GACVA,EAAQ,EACRW,EAAS,GACW,KAAVX,GACVA,EAAQ,EACRW,EAAS,GACW,KAAVX,GACVA,EAAQ,EACRW,EAAS,GACW,KAAVX,GACVA,EAAQ,EACRW,EAAS,IACW,KAAVX,GACVA,EAAQ,EACRW,EAAS,IACW,KAAVX,GACVA,EAAQ,EACRW,EAAS,IACW,KAAVX,GACVA,EAAQ,GACRW,EAAS,IAETA,EAASL,EAAS3B,QAAQ6B,EAAUb,OAAOK,IAC3CA,GAAS,GAGTP,IADa,IAAVK,EACIY,EAAWZ,EAAMC,EAAOC,GAExBQ,EAAUb,OAAOK,GAGzBF,EAAOa,EACPZ,GAAS,EACTC,GAAS,GAEK,IAAXD,EACHA,EAAQQ,EAAU5B,QAAQa,EAAQG,OAAOc,IACrB,IAAVV,GAAqB,KAANU,EACzBV,EAAQ,EACY,IAAVA,GAAqB,KAANU,EACzBV,EAAQ,GACY,IAAVA,GAAqB,KAANU,EACzBV,EAAQ,GACY,KAAVA,GAAsB,KAANU,EAC1BV,EAAQ,GACY,KAAVA,GAAsB,KAANU,EAC1BV,EAAQ,GACY,KAAVA,GAAsB,KAANU,EAC1BV,EAAQ,GACY,KAAVA,GAAsB,KAANU,EAC1BV,EAAQ,KAEM,IAAVD,GACHL,GAAOiB,EAAWZ,EAAMC,EAAOC,GAC/BF,GAAQ,GAERL,GAAOc,EAAUZ,OAAOI,GACzBA,GAAS,EACTN,GAAOD,EAAQG,OAAOc,KAqBzB,SAASC,EAAWZ,EAAMC,EAAOC,GAChC,OAAOY,OAAOC,aAAa,MAAgB,GAAPf,EAAY,GAAa,GAARC,EAAaC,EAAQ,GAG3E,OAlBc,IAAVF,EAEFL,IADc,IAAXM,EACIW,EAAWZ,EAAMC,EAAOC,GAExBM,EAASX,OAAOG,IAET,IAAXC,EACHN,GAAOc,EAAUZ,OAAOI,IAET,IAAXC,IACHP,GAAOe,EAAUb,OAAOK,IAQpBP,GAOR1D,EAAQ+E,SAAW,SAASC,GAExB,YADOhE,IAANgE,IAAiBA,EAAE,GACbA,EAAEC,WAAWnC,QAAQ,wBAAyB,O,wKCzb1CoC,E,uKAHP,OAAO,yBAAKC,UAAW,YAAY,8BAAW,8BAAW,8BAAW,mC,GAFtDC,a,iBC+BhBC,E,kDACF,WAAY9C,GAAQ,IAAD,8BACf,cAAMA,IACD+C,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,MAAQ,CACTC,UAAU,EACVC,SAAS,GACTC,UAAU,IANC,E,wDASPC,GAAO,IAAD,EACgBC,KAAKL,MAA5BC,EADO,EACPA,UAAUE,EADH,EACGA,UACjB,GAAIC,IAASC,KAAKtD,MAAMqD,KACxB,GAAa,OAATA,EACAC,KAAKC,SAAS,CAACL,UAAU,IACzBI,KAAKtD,MAAM+C,YAAY,QACpB,GAAa,OAATM,EAAe,CACtB,IAAMG,EAAUlD,SAASgD,KAAKtD,MAAMyD,WAAaH,KAAKtD,MAAM0D,SACtDC,EAAYP,EAAY9C,SAASkD,EAAUJ,GAAY,EAC7DE,KAAKC,SAAS,CAACL,UAAUS,IACzBL,KAAKtD,MAAM+C,YAAYS,OACP,MAATH,GACPC,KAAKC,SAAS,CAACL,UAAUA,EAAYE,IACrCE,KAAKtD,MAAM+C,YAAYG,EAAYE,IACnB,MAATC,GACPC,KAAKC,SAAS,CAACL,UAAUA,EAAYE,IACrCE,KAAKtD,MAAM+C,YAAYG,EAAYE,IAEnCE,KAAKtD,MAAM+C,YAAYM,K,+BAGrB,IAAD,EACyBC,KAAKL,MAA5BC,EADF,EACEA,UAAUE,EADZ,EACYA,UACbE,KAAKtD,MAAMoD,WAAaE,KAAKL,MAAMG,YAAcE,KAAKtD,MAAMoD,WAC5DE,KAAKC,SAAU,CAACH,UAAUE,KAAKtD,MAAMoD,YACzC,IAAIQ,EAAQ,GACRzB,EAAEe,EACAM,EAAUlD,SAASgD,KAAKtD,MAAMyD,WAAaH,KAAKtD,MAAM0D,SAC5D,GAA8B,IAA1BJ,KAAKtD,MAAMyD,WACXG,EAAMC,KAAK,kBAAC,EAAD,CAAUR,KAAM,EAAGS,MAAO,EAAGC,QAAQ,EAAMC,QAAS,SAACC,GAAD,OAAOC,QAAQC,IAAIF,IAAIG,IAAKxC,KAAKyC,iBAEhG,IAAK,IAAIzD,EAAE,EAAEA,EAAE0C,KAAKtD,MAAMyD,WAAY7C,GAAG0C,KAAKtD,MAAM0D,QAC5CvB,EAAIiB,GAAajB,IAAMe,IACnBf,EAAe,EAAViB,GACLQ,EAAMC,KAAK,kBAAC,EAAD,CAAUS,YAAY,QAAQjB,KAAM,KAAMS,MAAOlD,EAAGoD,QAASV,KAAKP,YAAaqB,IAAKxC,KAAKyC,YACxGT,EAAMC,KAAK,kBAAC,EAAD,CAAUS,YAAY,MAAMjB,KAAM,IAAKS,MAAOlD,EAAGoD,QAASV,KAAKP,YAAaqB,IAAKxC,KAAKyC,aAEjGb,EAAUrB,IACVA,GAAKe,EAAYE,EACbjB,IAAMe,EAAYE,IAClBQ,EAAMC,KAAK,kBAAC,EAAD,CAAUS,YAAY,OAAOjB,KAAM,IAAKS,MAAOlD,EAAGoD,QAASV,KAAKP,YAAaqB,IAAKxC,KAAKyC,YAC9Fb,EAAQN,EAAuB,EAAVE,GACrBQ,EAAMC,KAAK,kBAAC,EAAD,CAAWS,YAAY,OAAOjB,KAAM,KAAMS,MAAOlD,EAAGoD,QAASV,KAAKP,YAAaqB,IAAKxC,KAAKyC,YACxGlC,MAIRyB,EAAMC,KAAK,kBAAC,EAAD,CAAUR,KAAMlB,EAAG2B,MAAOlD,EAAGmD,OAAQT,KAAKtD,MAAMqD,OAASlB,EAAG6B,QAASV,KAAKP,YAAaqB,IAAKxC,KAAKyC,YAC5GlC,MAMR,OAFIyB,EAAM/C,OAAS,GAAG+C,EAAMC,KAAK,kBAAC,EAAD,CAAUR,KAAM,EAAGS,MAAO,EAAGC,QAAQ,EAAMC,QAAS,SAACC,GAAD,OAAOC,QAAQC,IAAIF,IAAIG,IAAKxC,KAAKyC,YAE/G,yBAAKzB,UAAW,SAClBgB,O,GAjEYW,IAAM1B,WAsEzB2B,E,uKACQ,IACDF,EAAehB,KAAKtD,MAApBsE,YADA,EAE2BhB,KAAKtD,MAA9B+D,EAFF,EAEEA,OAAQC,EAFV,EAEUA,QAASX,EAFnB,EAEmBA,KAGxB,YAFoB5E,IAAhB6F,IACAA,EAAc,IACX,yBAAK1B,UAAW,YAAcmB,EAAS,UAAY,IAAM,IAAMO,EAAaN,QAAS,SAACC,GAAD,OAAOD,EAAQX,KAAQA,O,GANpGkB,IAAM1B,WAUdC,ICEA,M,kDA/GX,WAAY9C,GAAQ,IAAD,8BACf,cAAMA,IACDiD,MAAQ,CACTwB,OAAO,CACHC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUvG,IAGlB,EAAKwG,GAAK,EAAKA,GAAGjC,KAAR,gBACV,EAAKkC,KAAO,EAAKA,KAAKlC,KAAV,gBACZ,EAAKmC,KAAO,EAAKA,KAAKnC,KAAV,gBACZ,EAAKoC,MAAQ,EAAKA,MAAMpC,KAAX,gBACb,EAAKqC,IAAM,EAAKA,IAAIrC,KAAT,gBACX,EAAKsC,cAAgB,EAAKA,cAActC,KAAnB,gBAlBN,E,0DAoBLuC,EAAKC,GACf,OAAKA,GAEDA,EAASd,WACTa,EAAKb,SAAWc,EAASd,UACzBc,EAASb,YACTY,EAAKZ,UAAYa,EAASb,WAC1Ba,EAASZ,kBACTW,EAAKX,gBAAkBY,EAASZ,iBAChCY,EAASX,eACTU,EAAKV,aAAeW,EAASX,cAC7BW,EAASV,eACTS,EAAKT,aAAeU,EAASV,cAC7BU,EAAST,YACTQ,EAAKR,UAAYS,EAAST,WAC1BS,EAASR,WACTO,EAAKP,SAAWQ,EAASR,UACtBO,GAhBeA,I,yBAkBvBF,EAAII,GAMHJ,EAAM/B,KAAKoC,QAAQL,GACnBM,IAAOnH,KAAK6G,IAAIA,K,2BAMfA,EAAII,GAMLJ,EAAM/B,KAAKoC,QAAQL,GACnBM,IAAOnH,KAAK6G,IAAIA,K,2BAMfA,EAAII,GAMLJ,EAAM/B,KAAKoC,QAAQL,GACnBM,IAAOnH,KAAK6G,IAAIA,K,4BAMdA,EAAII,GAMNJ,EAAM/B,KAAKoC,QAAQL,GACnBM,IAAOnH,KAAK6G,IAAIA,K,0BAMhBA,EAAII,GAMJJ,EAAM/B,KAAKoC,QAAQL,GACnBM,IAAOnH,KAAK6G,IAAIA,K,8BAMZA,GAIJ,OAFIA,EAAIxE,OADO,KAEXwE,EAAMA,EAAIO,OAAO,EAFN,IAEkB,OAC1BP,M,GA7GGd,IAAM1B,YCiDTgD,E,kDA9CX,WAAY7F,GAAQ,IAAD,8BACjB,cAAMA,IACD8F,QAAU,EAAKA,QAAQ9C,KAAb,gBACf,EAAK+C,KAAO,EAAKA,KAAK/C,KAAV,gBAHK,E,sDASjB,IACMM,KAAKtD,MAAMgG,iBAAiB1C,KAAKtD,MAAMgG,kBAC3C,MAAO/F,GAAMiE,QAAQC,IAAIlE,GAC3BqD,KAAKtD,MAAMxB,KAAKyH,gB,6BAMhB,IACM3C,KAAKtD,MAAMkG,aAAa5C,KAAKtD,MAAMkG,cACvC,MAAOjG,GAAMiE,QAAQC,IAAIlE,GAC3BqD,KAAKtD,MAAMxB,KAAKyH,gB,+BAER,IAAD,SAGH3C,KAAKtD,MADPmG,EAFK,EAELA,eAAeC,EAFV,EAEUA,QAAQC,EAFlB,EAEkBA,iBAEZ5H,IAAZ2H,IAAuBA,EAAU,qBACjB3H,IAAhB4H,IAA2BA,EAAc,gBAC7C,IAAIC,GAAQpH,SAASqH,eAAe,QAAQC,aAAgB,KAAQ,EAC/D,OAAO,yBAAK5D,UAAU,iBACtB,yBAAKA,UAAU,6BAA6B6D,MAAO,CAACH,IAAIA,IACtD,yBAAK1D,UAAU,cACf,yBAAKA,UAAU,OACb,uBAAGA,UAAU,UAAUuD,KAGzB,yBAAKvD,UAAU,eAAe6D,MAAO,CAACC,QAAQ,SAC9C,uBAAGC,KAAM,kBAAMzC,QAAQC,IAAI,WAAWvB,UAAU,gBAAgBoB,QAAS,kBAAM,EAAK8B,YAAYO,GAChG,uBAAGM,KAAM,kBAAMzC,QAAQC,IAAI,OAAOvB,UAAU,gBAAgBoB,QAAS,kBAAM,EAAK+B,QAAQU,MAAO,CAACG,WAAW,IAAKR,U,GAxCpGvD,aCQPgE,E,uKANP,OAAO,yBAAKjE,UAAU,0BAClB,6BAAK,uBAAGA,UAAU,iCAAlB,qF,GAHaC,aCgBViE,E,uKAhBP,OAAO,yBAAKlE,UAAU,gBAClB,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,SACX,wBAAIA,UAAU,QAAO,2BAAG,0BAAMA,UAAU,QAAhB,+BAG5B,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,iBACX,wBAAIA,UAAU,OAAd,mGACA,uBAAGA,UAAU,OAAb,qFAAoC,6BAApC,4JAA2E,6BAA3E,iF,GAZSC,a,kBCgGdkE,E,kDA/FX,WAAY/G,GAAQ,IAAD,8BACf,cAAMA,IAiBVgH,QAAU,WACN,EAAKzD,SAAS,CAAC0D,cAAe,EAAKhE,MAAMgE,eAnB1B,EAwBnBC,OAAS,WACL,EAAK3D,SAAS,CAAC0D,cAAe,EAAKhE,MAAMgE,eAvBzC,EAAKhE,MAAQ,CACTgE,YAAa,EACbE,cAAe,CACX1E,EAAG,EAAG2E,EAAG,GAEbC,mBAAoB,CAChB5E,GAAI,IAAK2E,EAAG,MAGpB,EAAKJ,QAAU,EAAKA,QAAQhE,KAAb,gBACf,EAAKkE,OAAS,EAAKA,OAAOlE,KAAZ,gBACd,EAAKsE,UAAY,EAAKA,UAAUtE,KAAf,gBAbF,E,wDA+BXM,KAAKtD,MAAMuH,MACXjE,KAAKtD,MAAMuH,OACfjE,KAAKtD,MAAM8F,Y,+BAEL,IAAD,SACoBxC,KAAKtD,MAAvBwH,EADF,EACEA,MAAO1B,EADT,EACSA,QADT,EAEgBxC,KAAKtD,MAArBuF,EAFA,EAEAA,KAAKkC,EAFL,EAEKA,aACGhJ,IAAT8G,IAAoBA,EAAO,CAACmC,gBAAe,EAAKC,qBAAoB,IAHnE,MAI0DpC,EAA1DmC,EAJA,EAIAA,eAAeC,EAJf,EAIeA,oBAAqBC,EAJpC,EAIoCA,wBAClBnJ,IAAnBiJ,IAA8BA,GAAiB,QACvBjJ,IAAxBkJ,IAAmCA,GAAsB,QAClClJ,IAAvBmJ,IAAkCA,EAAqB,iBAC3D,IAAIC,EAAW,GACXzB,EAAU,eACV0B,EAAa,eACjB,GAAIvC,EAAM,CAGN,GAFIA,EAAKwC,QACLF,EAASE,MAAQzH,SAASgC,OAAOiD,EAAKwC,OAAOxH,QAAQ,OAAO,MAC5DgF,EAAKyC,OAAQ,CACbH,EAASG,OAAS1H,SAASgC,OAAOiD,EAAKyC,QAAQzH,QAAQ,OAAO,KAE9D,IACIsH,EAASvB,KAAQpH,SAASqH,eAAe,QAAQC,cAAgBqB,EAASG,OAAO,MAAQ,EAC3F,MAAO/H,GACLiE,QAAQC,IAAIlE,IAGhBsF,EAAKa,UACLA,EAAUb,EAAKa,SACfb,EAAKuC,aACLA,EAAavC,EAAKuC,YAQ1B,OAJIL,EADqB,kBAAbA,EACE,yBAAK7E,UAAW,oBAAsB+E,EAAsB,GAAK,gBAAgB,yBAAK/E,UAAU,WAAU,6BAAM6E,KAEhH,yBAAK7E,UAAW,gBAAkB+E,EAAsB,GAAK,gBAAgB,yBAAK/E,UAAU,WAAW6E,IAE9G,yBAAK7E,UAAU,iBAClB,kBAAC,IAAD,CACIqF,KAAK,OACLC,OAAO,gBACPC,gBAAiB,CAAC1F,EAAG,EAAG2E,EAAG,GAC3B1C,SAAU,KACV0D,KAAM,CAAC,EAAG,GACVC,MAAO,EACPrB,QAAS1D,KAAK0D,QAEdE,OAAQ5D,KAAK4D,QACjB,yBAAKtE,UAAW,uBAAyBgF,EAAoBnB,MAAOoB,GAChE,yBAAKjF,UAAU,iBACd8E,EAAiB,wBAAIY,MAAM,aAAad,GAAc,KACtDC,EACAE,EACK,yBAAK/E,UAAW,yBAAyB,uBAAG0F,MAAM,QAChD,4BAAQ1F,UAAU,gBAAgBoB,QAAS8B,GAAUgC,GACrD,4BAAQlF,UAAU,gBAAgBoB,QAAS,kBAAM,EAAKsD,cAAclB,KAC3D,KACjB,uBAAGxD,UAAU,gBAAgBoB,QAAS8B,GAAS,0BAAMlD,UAAU,QAAhB,wB,GA1F3CC,aCIL0F,E,uKAHP,OAAO,yBAAK3F,UAAU,kB,GAFVC,aC+CL2F,E,WApBX,WAAYxI,GAAQ,oBAChB,IAAMyI,EAAKvJ,SAASwJ,cAAc,KADnB,EAIsC1I,EAAM2I,WAAWC,SAASC,QAAvEC,EAJO,EAIPA,SAAUC,EAJH,EAIGA,sBAAsBC,EAJzB,EAIyBA,SACpCC,OAAOxK,EACPqK,GAAYA,EAASjI,OAAS,IAClCoI,EAAOH,EAAS9I,EAAMkJ,cACTzK,IAATwK,IAAoBA,EAAO,IAC/BR,EAAG7F,UAAU,gBACb6F,EAAGjB,MAAMyB,EAAKD,GACdP,EAAGU,UAAYF,EAAKD,GACpBP,EAAG9B,KAAK,IACR8B,EAAGW,iBAAiB,SAAQ,SAACnF,GAAD,OAAO8E,EAAsBE,EAAKhF,EAAEjE,MAChEsD,KAAKmF,GAAKA,E,yDAGV,OAAOnF,KAAKmF,O,KCqIL,M,kDAlLX,WAAYzI,GAAQ,IAAD,8BACf,cAAMA,IAWVqJ,UAAY,WAZO,EAgBnBC,SAAW,sFAhBQ,EAmBnBC,SAAW,0BAnBQ,EAuBnBC,MAAQ,oBAvBW,EA2BnBC,MAAQ,iDA3BW,EAiCnBC,SAAW,gDAjCQ,EAsCnBC,aAAa,sCAtCM,EA0CnBC,aAAa,iBA1CM,EA8CnBC,eAAe,sCA9CI,EAiDnBC,qBAAqB,sCAjDF,EAoDnBC,oBAAoB,sCApDD,EAuDnBC,gBAAgB,uBAvDG,EA2DnBC,UAAY,mDA3DO,EA+DnBC,YAAc,uBA7DV,EAAKC,SAAW,EAAKA,SAASnH,KAAd,gBAChB,EAAKoH,SAAW,EAAKA,SAASpH,KAAd,gBAChB,EAAKqH,MAAQ,EAAKA,MAAMrH,KAAX,gBACb,EAAKsH,MAAQ,EAAKA,MAAMtH,KAAX,gBACb,EAAKuH,UAAY,EAAKA,UAAUvH,KAAf,gBACjB,EAAKwH,iBAAmB,EAAKA,iBAAiBxH,KAAtB,gBAPT,E,qDAmEVyH,GACL,IAAIhL,EAAM,CAACiL,QAAO,EAAMC,OAAO,IAC3BC,EAAMtH,KAAKiG,SAASsB,KAAKJ,GAG7B,OAFAhL,EAAIiL,OAASE,EACRA,IAAKnL,EAAIkL,OAAS,qFAChBlL,I,+BAGFgL,GACL,IAAIhL,EAAM,CAACiL,QAAO,EAAMC,OAAO,IAC3BC,EAAMtH,KAAKoG,SAASmB,KAAKJ,GAG7B,OAFAhL,EAAIiL,OAASE,EACRA,IAAKnL,EAAIkL,OAAS,qFAChBlL,I,+BAGFgL,GACL,IAAIhL,EAAM,CAACiL,QAAO,EAAMC,OAAO,IAC3BC,EAAMtH,KAAKgG,SAASuB,KAAKJ,GAG7B,OAFAhL,EAAIiL,OAASE,EACRA,IAAKnL,EAAIkL,OAAS,+EAChBlL,I,4BAGLgL,GACF,IAAIhL,EAAM,CAACiL,QAAO,EAAMC,OAAO,IAC3BC,EAAMtH,KAAKkG,MAAMqB,KAAKJ,GAG1B,OAFAhL,EAAIiL,OAASE,EACRA,IAAKnL,EAAIkL,OAAS,+EAChBlL,I,4BAGLgL,GACF,IAAIhL,EAAM,CAACiL,QAAO,EAAMC,OAAO,IAC3BC,EAAMtH,KAAKmG,MAAMoB,KAAKJ,GAG1B,OAFAhL,EAAIiL,OAASE,EACRA,IAAKnL,EAAIkL,OAAS,qFAChBlL,I,gCAGDgL,GACN,IAAIhL,EAAM,CAACiL,QAAO,EAAMC,OAAO,IAC3BC,EAAMtH,KAAK+F,UAAUwB,KAAKJ,GAG9B,OAFAhL,EAAIiL,OAASE,EACRA,IAAKnL,EAAIkL,OAAS,gDAChBlL,I,mCAGEgL,GACT,IAAIhL,EAAM,CAACiL,QAAO,EAAMC,OAAO,IAC3BC,EAAMtH,KAAKqG,aAAakB,KAAKJ,GAGjC,OAFAhL,EAAIiL,OAASE,EACRA,IAAKnL,EAAIkL,OAAS,+EAChBlL,I,mCAEEgL,GACT,IAAIhL,EAAM,CAACiL,QAAO,EAAMC,OAAO,IAC3BC,EAAMtH,KAAKsG,aAAaiB,KAAKJ,GAGjC,OAFAhL,EAAIiL,OAASE,EACRA,IAAKnL,EAAIkL,OAAS,4FAChBlL,I,qCAGIgL,GACX,IAAIhL,EAAM,CAACiL,QAAO,EAAMC,OAAO,IAC3BC,EAAMtH,KAAKuG,eAAegB,KAAKJ,GAGnC,OAFAhL,EAAIiL,OAASE,EACRA,IAAKnL,EAAIkL,OAAS,0EAChBlL,I,2CAGUgL,GACjB,IAAIhL,EAAM,CAACiL,QAAO,EAAMC,OAAO,IAC3BC,EAAMtH,KAAKwG,qBAAqBe,KAAKJ,GAGzC,OAFAhL,EAAIiL,OAASE,EACRA,IAAKnL,EAAIkL,OAAS,4FAChBlL,I,oCAGGgL,GACV,IAAIhL,EAAM,CAACiL,QAAO,EAAMC,OAAO,IAC3BC,EAAMtH,KAAK4G,YAAYW,KAAKJ,GAGhC,OAFAhL,EAAIiL,OAASE,EACRA,IAAKnL,EAAIkL,OAAS,qFAChBlL,I,uCAGMgL,GACb,OAAKnH,KAAK2G,UAAUY,KAAKJ,GAElBA,EAAOlK,QAAQ+C,KAAK2G,UAAU,IAD1BQ,I,0CAIKA,GAChB,IAAIhL,EAAM,CAACiL,QAAO,EAAMC,OAAO,IAC3BC,EAAMtH,KAAKyG,oBAAoBc,KAAKJ,GAGxC,OAFAhL,EAAIiL,OAASE,EACRA,IAAKnL,EAAIkL,OAAS,kGAChBlL,I,yCAGQgL,GACf,IAAIhL,EAAM,CAACiL,QAAO,EAAMC,OAAO,IAC3BC,EAAMtH,KAAK0G,gBAAgBa,KAAKJ,GAGpC,OAFAhL,EAAIiL,OAASE,EACRA,IAAKnL,EAAIkL,OAAS,mEAChBlL,M,GA9KU8E,IAAM1B,YCsBhBiI,E,uKAlBD,IAAD,EACgBxH,KAAKtD,MAA3BoG,EADM,EACNA,QAASkB,EADH,EACGA,eACE7I,IAAZ2H,IAAuBA,EAAU,gBACrC,IAAIE,GAAQpH,SAASqH,eAAe,QAAQC,aAAgB,KAAQ,EACpE,OAAO,yBAAK5D,UAAU,iBACrB,yBAAKA,UAAU,6BAA6B6D,MAAO,CAACH,IAAIA,IACvD,yBAAK1D,UAAU,cACf,yBAAKA,UAAU,OACd,uBAAGA,UAAU,UAAUU,KAAKtD,MAAM+K,WAGnC,yBAAKnI,UAAU,gBACf,uBAAGA,UAAU,gBAAgBoB,QAASsD,GAAYlB,U,GAbhCvD,aCGhBmI,E,uKACQ,IAAD,EAC8B1H,KAAKtD,MAAnCiL,EADA,EACAA,QAAQC,EADR,EACQA,SAASC,EADjB,EACiBA,eACJ1M,IAAd0M,IAAyBA,EAAY,sDACzC,IAAIC,EAAa,SACa3M,IAA1B6E,KAAKtD,MAAMoL,aAA0BA,EAAa9H,KAAKtD,MAAMoL,YACjE,IAEIxK,EACAyK,EACAC,EACAC,EAGAC,EAqBAC,EA7BAC,EAAU,GACVC,EAAW,GAKTC,EAAY,CAAC5D,OAAO,IACpB6D,EAAS,CAAC7D,OAAO,IAEvB,IAAKpH,EAAE,EAAGA,EAAEqK,EAAQpK,OAAQD,IAExB0K,EAAS,QACS7M,KAFlB4M,EAAMJ,EAAQrK,IAENmH,QACJuD,EAAOvD,MAAQsD,EAAItD,YACLtJ,IAAd4M,EAAIS,QACJR,EAAOQ,MAAQT,EAAIS,OACvBH,EAAS9H,KAAK,yBAAK4C,MAAO6E,EAAQlH,IAAKxC,KAAKyC,YAE5CkH,EAAgB,CAACQ,cAAc,eACbtN,IAAd4M,EAAIS,QACJP,EAAcS,UAAYX,EAAIS,MACZ,SAAdT,EAAIS,QACJP,EAAcU,QAAU,aAEhCP,EAAQ7H,KAAK,wBAAIjB,UAAU,wDAAwD6D,MAAO8E,EAAenH,IAAKxC,KAAKyC,UAAWgH,EAAIa,SAMtI,IACIC,EADAC,EAAO,GAEX,GAAIlB,EAASrK,OAAS,EAClBuL,EAAKvI,KAAK,kBAAC,EAAD,CAASwI,QAASpB,EAAQpK,OAAQyL,YAAanB,EAAW/G,IAAKxC,KAAKyC,iBAE9E,IAAK,IAAIvC,EAAE,EAAGA,EAAEoJ,EAASrK,OAAQiB,IAAK,CAGlC,IAFA0J,EAAMN,EAASpJ,GACf2J,EAAU,GACL7K,EAAE,EAAGA,EAAEqK,EAAQpK,OAAQD,IAAK,CAI7B,IAAK,IAAI2L,KAFTJ,EAAY,GACZA,EAAY,CAACJ,cAAc,UAF3BV,EAAMJ,EAAQrK,IAIA,UAAN2L,GAAiBA,EAAElM,QAAQ,YAAc,GAAKkM,EAAElM,QAAQ,WAAa,GAAKkM,EAAElM,QAAQ,UAAY,GAAKkM,EAAElM,QAAQ,WAAa,KAClH,UAANkM,GACAJ,EAAS,UAAgBd,EAAIkB,GACd,SAAXlB,EAAIkB,KACJJ,EAAS,QAAc,YAG3BA,EAAUI,GAAKlB,EAAIkB,IAG/Bd,EAAQ5H,KACJ,wBAAIjB,UAAU,wCAAwC6D,MAAO0F,EAAW/H,IAAKxC,KAAKyC,eAC5D5F,IAAjB4M,EAAIzC,SACC,kBAACyC,EAAIzC,SAAS/I,KAAd,CAAmBgJ,QAASwC,EAAIzC,SAASC,QAASI,KAAMuC,EAAKpH,IAAKxC,KAAKyC,WACvE,yBAAKzB,UAAU,wBAAwBwB,IAAKxC,KAAKyC,UAAWmH,EAAKH,EAAI1M,SAIvFyN,EAAKvI,KAAM,wBAAIjB,UAAU,mBAAmB6D,MAAOoF,GAASJ,IAKpE,OAAO,yBAAK7I,UAAU,YAClB,yBAAKA,UAAU,uBAAuB6D,MAAOmF,GACzC,2BAAOhJ,UAAU,kBACb,kCACK+I,GAEL,+BACI,wBAAIlF,MAAOmF,GAAYF,MAInC,yBAAK9I,UAAU,sBACX,yBAAKA,UAAU,0BAA0B6D,MAAO,CAACuB,OAAQoD,EAAWrD,MAAO,OAAOyE,SAAU,SACxF,yBAAK5J,UAAU,2BAA2B6D,MAAO,CAACH,IAAK,EAAEmG,KAAM,EAAED,SAAU,SACvE,2BAAO5J,UAAU,kBACb,kCAAW+I,GACX,+BAAQS,Y,GAxFbvJ,aAgGjB6J,E,uKACQ,IACCC,EAAWrJ,KAAKtD,MAAhB2M,QACFL,EAAehJ,KAAKtD,MAApBsM,YAEL,OADKA,IAAaA,EAAc,sDACzB,wBAAI1J,UAAU,oBACjB,wBAAIA,UAAU,wCAAwC6D,MAAO,CAACuB,OAAO,GAAGgE,UAAW,UAAWK,QAASM,GACnG,yBAAK/J,UAAU,yBAAyB0J,S,GAPlCzJ,aAYPmI,IC5GT4B,E,kDACF,WAAY5M,GAAQ,IAAD,8BACpB,cAAMA,IACDiD,MAAQ,CACd4J,SAAS,KAEL,EAAKC,iBAAmB,EAAKA,iBAAiB9J,KAAtB,gBACxB,EAAK+J,SAAW,EAAKA,SAAS/J,KAAd,gBACnB,EAAKgK,eAAiB,EAAKA,eAAehK,KAApB,gBACtB,EAAKiK,gBAAkB,EAAKA,gBAAgBjK,KAArB,gBARH,E,6DAkBFkK,GACf,OAAO5J,KAAKtD,MAAMxB,KAAKyE,MAAMiK,SAAStH,OAAO,EAAE,KAAOsH,I,iCAMtDC,EAAYC,OAAO9J,KAAK0J,eAAe1J,KAAK0J,kB,qCAUlC7L,GACdmC,KAAKtD,MAAMxB,KAAK+E,SAAS,CAAC8J,OAAM,EAAMC,KAAK,GAAGC,SAAS,GAAGC,UAAU,GAAGC,SAAS,KAChFnK,KAAKtD,MAAMxB,KAAKkP,aAAaC,IAAShQ,a,wCAKpB,IAAD,OAEX2F,KAAKtD,MAAMxB,KAAKoP,UADL,uBAGP,kBAAC,GAAD,CAAoBpP,KAAM8E,KAAKtD,MAAMxB,KAAMsH,QAAS,SAAC7B,GAAD,OAAO,EAAKjE,MAAMxB,KAAKqP,UAHpE,2BAIP,CAAC9F,MAAM,IAAKC,OAAO,IAAKL,qBAAoB,GAAO,KAAK,Q,+BAGtD,IAAD,SACkBrE,KAAKtD,MAA3BsN,EADI,EACJA,KAAMI,EADF,EACEA,aACTI,EAAY,GAcV,MAXO,UAATR,GACHQ,EAAUjK,KAAM,kBAAC,EAAD,CAAUkK,KAAK,YAAYb,SAAUS,IAAShQ,UAAWqQ,gBAAiB1K,KAAKtD,MAAMxB,KAAKyE,MAAMiK,SAAUQ,aAAcA,EAActJ,IAAKxC,KAAKyC,SAAUN,OAAQT,KAAKwJ,iBAAiBa,IAAShQ,cACxMmQ,EAAUjK,KAAM,kBAAC,EAAD,CAAUkK,KAAK,QAAQb,SAAUS,IAAS/P,cAAeoQ,gBAAiB1K,KAAKtD,MAAMxB,KAAKyE,MAAMiK,SAAUQ,aAAcA,EAActJ,IAAKxC,KAAKyC,SAAUN,OAAQT,KAAKwJ,iBAAiBa,IAASM,UACjNH,EAAUjK,KAAM,kBAAC,EAAD,CAAUkK,KAAK,UAAUb,SAAUS,IAASO,QAASF,gBAAiB1K,KAAKtD,MAAMxB,KAAKyE,MAAMiK,SAAUiB,QAASC,EAASC,QAASX,aAAcA,EAActJ,IAAKxC,KAAKyC,SAAUN,OAAQT,KAAKwJ,iBAAiBa,IAASO,YACjPJ,EAAUjK,KAAM,kBAAC,EAAD,CAAUkK,KAAK,QAAQb,SAAUS,IAASW,MAAON,gBAAiB1K,KAAKtD,MAAMxB,KAAKyE,MAAMiK,SAAUiB,QAASC,EAASG,MAAOb,aAAcA,EAActJ,IAAKxC,KAAKyC,SAAUN,OAAQT,KAAKwJ,iBAAiBa,IAASW,WAG3M,YAAThB,IACLQ,EAAUjK,KAAM,kBAAC,EAAD,CAAUkK,KAAK,QAAQb,SAAUS,IAAS/P,cAAeoQ,gBAAiB1K,KAAKtD,MAAMxB,KAAKyE,MAAMiK,SAAUQ,aAAcA,EAActJ,IAAKxC,KAAKyC,SAAUN,OAAQT,KAAKwJ,iBAAiBa,IAASM,UAC1NH,EAAUjK,KAAM,kBAAC,EAAD,CAAUkK,KAAK,UAAUb,SAAUS,IAASO,QAASF,gBAAiB1K,KAAKtD,MAAMxB,KAAKyE,MAAMiK,SAAUiB,QAASC,EAASC,QAASX,aAAcA,EAActJ,IAAKxC,KAAKyC,SAAUN,OAAQT,KAAKwJ,iBAAiBa,IAASO,aAE5N,yBAAKtL,UAAU,eAC3B,yBAAKA,UAAU,cACd,kBAAC,GAAD,CAAM8K,aAAcA,IAEpB,yBAAK9K,UAAU,OACd,4BAAKkL,IAGN,wBAAIlL,UAAU,aACZU,KAAKtD,MAAMxB,KAAKyE,MAAMoK,MACpB,4BAAI,2BAAI/J,KAAKtD,MAAMuN,UACpB,wBAAI3K,UAAU,aACb,4BAAI,uBAAGoB,QAAS,kBAAM,EAAKiJ,oBAAvB,oBACJ,4BAAI,uBAAGjJ,QAAS,kBAAM,EAAK+I,aAAvB,aAGL,4BAAI,uBAAG/I,QAAS,kBAAM0J,EAAaC,IAASa,SAAxC,iB,GAnFW3L,aAyFhB4L,E,uKACM,IAAD,EACgEnL,KAAKtD,MAAvE+N,EADE,EACFA,KAAMb,EADJ,EACIA,SAAUiB,EADd,EACcA,QAASpK,EADvB,EACuBA,OAAQ2J,EAD/B,EAC+BA,aAAcM,EAD7C,EAC6CA,gBACnDU,EAAe,GACdP,IAASA,EAAU,IACrB,IAJO,eAIEvN,GACP8N,EAAa7K,KAAK,wBAAIjB,UAAWuL,EAAQvN,GAAGsM,WAAac,EAAkB,SAAW,GAAI5J,IAAKxC,KAAKyC,UAAU,uBAAGL,QAAS,kBAAM0J,EAAaS,EAAQvN,GAAGsM,YAAYiB,EAAQvN,GAAGmN,SADxKnN,EAAE,EAAGA,EAAEuN,EAAQtN,OAAQD,IAAM,EAA7BA,GAGT,OAAO,wBAAIgC,UAAWmB,EAAS,SAAW,IAC3CoK,EAAQtN,OAAS,EACf,uBAAGmD,QAAS,kBAAME,QAAQC,IAAI4J,KAAQA,GACtC,uBAAG/J,QAAS,kBAAM0J,EAAaR,KAAYa,GAE7CI,EAAQtN,OAAS,EAAI,4BAAK6N,GAAqB,U,GAb3B7L,aAiBR+J,I,kBCbA,M,kDAlGX,WAAY5M,GAAQ,IAAD,8BACf,cAAMA,IAKV2O,KAAO,CACH,CAACzB,SAASS,IAAShQ,UAAWoQ,KAAK,YAAaa,MAAM,CAAC,YAAYjB,IAAShQ,aAP7D,EAUnBkR,MAAQ,GAVW,EAYnBR,QAAU,CACN,CAACnB,SAASS,IAAS9P,gBAAiBkQ,KAAK,qBAAsBa,MAAM,CAAC,UAAUjB,IAAS9P,kBACxF,CAACqP,SAASS,IAAS7P,uBAAwBiQ,KAAK,kBAAmBa,MAAM,CAAC,UAAUjB,IAAS7P,0BAd/E,EAiBnByQ,MAAQ,CACJ,CAACrB,SAASS,IAAS5P,cAAegQ,KAAK,mBAAoBa,MAAM,CAAC,QAAQjB,IAAS5P,gBAClF,CAACmP,SAASS,IAAS3P,iBAAkB+P,KAAK,gBAAiBa,MAAM,CAAC,QAAQjB,IAAS3P,mBACnF,CAACkP,SAASS,IAAS1P,oBAAqB8P,KAAK,gBAAiBa,MAAM,CAAC,QAAQjB,IAAS1P,sBACtF,CAACiP,SAASS,IAASzP,sBAAuB6P,KAAK,mBAAoBa,MAAM,CAAC,QAAQjB,IAASzP,wBAC3F,CAACgP,SAASS,IAASxP,oBAAqB4P,KAAK,0BAA2Ba,MAAM,CAAC,QAAQjB,IAASxP,sBAChG,CAAC+O,SAASS,IAASvP,mBAAoB2P,KAAK,2BAA4Ba,MAAM,CAAC,QAAQjB,IAASvP,qBAChG,CAAC8O,SAASS,IAAStP,iBAAkB0P,KAAK,cAAea,MAAM,CAAC,QAAQjB,IAAStP,oBAxBnE,EA4BnByQ,IAAM,KA1BF,EAAKC,SAAW,EAAKA,SAAS/L,KAAd,gBAChB,EAAKgM,WAAa,EAAKA,WAAWhM,KAAhB,gBAHH,E,qDAmCVkK,GACL,IACI0B,EADAK,EAAI3L,KAAK0L,aAETvP,EAAM,GAKV,GAJIyN,IAAaS,IAAShQ,UACtB8B,EAAIoE,KAAM,CAAClF,KAAK,YAAauO,SAASA,IACjCA,IAAaS,IAAS/P,eAC3B6B,EAAIoE,KAAM,CAAClF,KAAK,QAASuO,SAASA,IAClB,OAAhB+B,EAAE/B,SAAsCzO,IAAhBwQ,EAAE/B,GAAyB,CACnD0B,EAAQK,EAAE/B,GAAF,MACR,IAAK,IAAItM,EAAE,EAAGA,EAAEgO,EAAM/N,OAAQD,IAC1B,IACQgO,EAAMhO,GAAGP,QAAQ,SAAW,EAC5BZ,EAAIoE,KAAM,CAAClF,KAAKsQ,EAAEL,EAAMhO,IAAImN,KAAMb,SAAS0B,EAAMhO,KAEjDnB,EAAIoE,KAAM,CAAClF,KAAKiQ,EAAMhO,KAE5B,MAAOX,KAGjB,OAAOR,I,mCAQP,GAAiB,OAAb6D,KAAKwL,IAAc,OAAOxL,KAAKwL,IACnC,IACIlO,EACA4K,EACA0D,EAHAJ,EAAM,GAIV,IAAKlO,EAAE,EAAGA,EAAE0C,KAAKuL,MAAMhO,OAAQD,IAED,OAAtBkO,GADJtD,EAAMlI,KAAKuL,MAAMjO,IACLsM,gBAA4CzO,IAAtBqQ,EAAItD,EAAI0B,YACtC4B,EAAItD,EAAI0B,UAAY1B,GAG5B,IAAK5K,EAAE,EAAGA,EAAE0C,KAAK+K,QAAQxN,OAAQD,IAEH,OAAtBkO,GADJtD,EAAMlI,KAAK+K,QAAQzN,IACPsM,gBAA4CzO,IAAtBqQ,EAAItD,EAAI0B,YACtC4B,EAAItD,EAAI0B,UAAY1B,GAG5B,IAAK5K,EAAE,EAAGA,EAAE0C,KAAKiL,MAAM1N,OAAQD,IAK3B,GAH0B,OAAtBkO,GADJtD,EAAMlI,KAAKiL,MAAM3N,IACLsM,gBAA4CzO,IAAtBqQ,EAAItD,EAAI0B,YACtC4B,EAAItD,EAAI0B,UAAY1B,GAEpBA,EAAI2D,UAAY3D,EAAI2D,SAAStO,OAAS,EACtC,IAAKD,EAAE,EAAGA,EAAE4K,EAAI2D,SAAStO,OAAQD,IAEF,OAAvBkO,GADJI,EAAO1D,EAAI2D,SAASvO,IACPsM,gBAA6CzO,IAAvBqQ,EAAII,EAAKhC,YACxC4B,EAAII,EAAKhC,UAAYgC,GAMrC,OADA5L,KAAKwL,IAAMA,EACJA,M,GAhGQjM,cC0FRuM,E,kDAlFX,WAAYpP,GAAQ,IAAD,8BACf,cAAMA,IACDqP,cAAgB,EAAKA,cAAcrM,KAAnB,gBAFN,E,gEAIE,IAAD,EAGZsM,wIADAC,EAFY,EAEZA,gBAAgBC,EAFJ,EAEIA,yBAEhBD,GAAgD,SAA7BC,EACnBrC,EAAYE,MAAM/J,KAAK5D,KAAK+P,IAAI7Q,MAAM0E,KAAK5D,KAAKgQ,GAAG9Q,MAAM0E,KAAK+L,eAAc,SAACpP,GAAD,OAASiE,QAAQC,IAAIlE,MAErGqD,KAAK5D,KAAK+P,IAAIE,U,oCAUJxO,GACV,GAAmB,OAAfA,EAAIuJ,OAAiB,CACrB,IAAI4C,EAAO,GACPsC,EAAS,GACTnC,EAAW,GACXtM,EAAI0O,MAAQ1O,EAAI0O,KAAKpC,WACrBA,EAAWtM,EAAI0O,KAAKpC,SACpBH,EAAOnM,EAAI0O,KAAKpC,SAASqC,eACzBF,EAASzO,EAAI0O,KAAKpC,SAASmC,QAE/BjK,IAAOjH,UAAUqR,IAAYzR,WAAW6C,EAAI0O,KAAKrC,WACjDlK,KAAKtD,MAAMxB,KAAK+E,SAAS,CAAC8J,OAAM,EAAKG,UAAUrM,EAAI0O,KAAKrC,UAAUF,KAAKA,EAAKC,SAASqC,EAAOI,WAAU,EAAMvC,SAASA,IACjH6B,wIAAYC,iBAAmBD,wIAAYW,0BAC3C3M,KAAKtD,MAAMxB,KAAKkP,aAAa4B,wIAAYW,2BAA0B,GAEnE3M,KAAKtD,MAAMxB,KAAKkP,aAAaC,IAAShQ,WAAU,OAC9B,SAAfwD,EAAIuJ,QACXwF,EAAI9K,MAAMjE,EAAI4J,W,+BAGZ,IAAD,OACEjF,EAAWxC,KAAKtD,MAAhB8F,QADF,EAIDwJ,wIADAC,EAHC,EAGDA,gBAAgBY,EAHf,EAGeA,uBAAuBC,EAHtC,EAGsCA,uBAE3C,OAAO,yBAAKxN,UAAU,iBACtB,yBAAKA,UAAU,6BAEb,wBAAIA,UAAU,QAAO,0BAAMA,UAAU,QAAhB,4BACrB,2BAAOjD,IAAI,MAAME,KAAK,OAAO+C,UAAU,YAAYyN,YAAY,gEAAcC,aAAa,MACxFC,UAAW,SAACtM,GACU,KAAdA,EAAEuM,SACF,EAAK9Q,KAAKgQ,GAAGC,SAGrBc,aAAclB,EAAkBY,EAAyB,OAE3D,2BAAOxQ,IAAI,KAAKE,KAAK,WAAW+C,UAAU,YAAYyN,YAAY,2BAAOC,aAAa,MACpFC,UAAW,SAACtM,GACU,KAAdA,EAAEuM,SACFrD,EAAYE,MAAM,EAAK3N,KAAK+P,IAAI7Q,MAAM,EAAKc,KAAKgQ,GAAG9Q,MAAM,EAAKyQ,eAAc,SAACpP,GAAD,OAASiE,QAAQC,IAAIlE,OAGzGwQ,aAAclB,EAAkBa,EAAyB,OAE3D,uBAAGxN,UAAU,OACX,0BAAMA,UAAU,QAAQ6D,MAAO,CAACC,QAAQ,SAAxC,qKAAiF,6BAAjF,oIAEF,uBAAGC,KAAM,SAAC1C,GAAD,OAAOC,QAAQC,IAAI,UAAUvB,UAAU,yBAAyBoB,QAAS,SAACC,GAC7EkJ,EAAYE,MAAM,EAAK3N,KAAK+P,IAAI7Q,MAAM,EAAKc,KAAKgQ,GAAG9Q,MAAM,EAAKyQ,eAAc,SAACpP,GAAD,OAASiE,QAAQC,IAAIlE,QADvG,sBAGA,wBAAI2C,UAAU,gBACZ,4BAAI,uBAAG+D,KAAM,SAAC1C,GAAD,OAAOC,QAAQC,IAAI,eAAeH,QAAS,kBAAMkM,EAAI/K,KAAK,oEAAnE,gEAGN,uBAAGwB,KAAM,WAAOb,KAAY9B,QAAS,WAAO8B,KAAYlD,UAAU,iBAAgB,0BAAMA,UAAU,QAAhB,uB,GA7ExEC,a,SCLL6N,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAStB,GACT5D,QAAS,CACP,eAAgB,sBC0JL,M,8FAlJLmF,EAAGnB,EAAGoB,EAAMC,GACd,IAAIC,EAAW,IAAIC,SAGnB,OAFAD,EAASE,OAAO,WAAWL,GAC3BG,EAASE,OAAO,WAAWxB,GACpByB,EAAKC,KAAK,SAASJ,GACrBK,MAAK,SAAUlQ,GACR2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,6BASf6Q,EAAOC,GACV,OAAOI,EAAKI,IAAI,WAAWF,MAAK,SAASlQ,GACjC2P,GACAA,EAAM3P,EAAI0O,SAEfyB,OAAM,SAASrR,GACV8Q,GACAA,EAAM9Q,Q,+BAUTuN,EAAWsD,EAAOC,GACvB,IAAIC,EAAW,IAAIC,SAEnB,OADAD,EAASE,OAAO,YAAY1D,GACrB2D,EAAKC,KAAK,YAAYJ,GACxBK,MAAK,SAASlQ,GACP2P,GACAA,EAAM3P,EAAI0O,SAEfyB,OAAM,SAASrR,GACV8Q,GACAA,EAAM9Q,Q,6BAUfuR,EAAMV,EAAOC,GAChB,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIQ,KAAKD,EACVR,EAASE,OAAOO,EAAED,EAAKC,IAE3B,OAAON,EAAKC,KAAK,UAAUJ,GACtBK,MAAK,SAAUlQ,GACR2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,4BAUhBuR,EAAMV,EAAOC,GACf,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIQ,KAAKD,EACVR,EAASE,OAAOO,EAAED,EAAKC,IAE3B,OAAON,EAAKC,KAAK,SAASJ,GACrBK,MAAK,SAAUlQ,GACR2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,qCASP6Q,EAAOC,GAClB,IAAIS,EAAO,CAACE,WAAW,IAAIC,MAAM,KAC7BX,EAAW,IAAIC,SACnB,IAAK,IAAIQ,KAAKD,EACVR,EAASE,OAAOO,EAAED,EAAKC,IAE3B,OAAON,EAAKC,KAAK,aAAaJ,GACzBK,MAAK,SAAUlQ,GACR2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,mCAUTuR,EAAKV,EAAMC,GACpB,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIQ,KAAKD,EACVR,EAASE,OAAOO,EAAED,EAAKC,IAE3B,OAAON,EAAKC,KAAK,gBAAgBJ,GAC5BK,MAAK,SAAUlQ,GACR2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,U,wBC1DX,M,8GAvFWuR,EAAKV,EAAMC,GAC7B,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIW,KAAKJ,EACVR,EAASE,OAAOU,EAAEJ,EAAKI,IAE3B,OAAOT,EAAKC,KAAK,mCAAmCJ,GAC/CK,MAAK,SAAUlQ,GACR2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,2CAUDuR,EAAKV,EAAMC,GAC5B,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIW,KAAKJ,EACVR,EAASE,OAAOU,EAAEJ,EAAKI,IAE3B,OAAOT,EAAKC,KAAK,kCAAkCJ,GAC9CK,MAAK,SAAUlQ,GACR2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,wCAUJuR,EAAKV,EAAMC,GACzB,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIW,KAAKJ,EACVR,EAASE,OAAOU,EAAEJ,EAAKI,IAE3B,OAAOT,EAAKC,KAAK,+BAA+BJ,GAC3CK,MAAK,SAAUlQ,GACR2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,yCAUHuR,EAAKV,EAAMC,GAC1B,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIW,KAAKJ,EACVR,EAASE,OAAOU,EAAEJ,EAAKI,IAE3B,OAAOT,EAAKC,KAAK,gCAAgCJ,GAC5CK,MAAK,SAAUlQ,GACR2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,U,cCxFpB4R,E,kDACF,WAAY7R,GAAQ,IAAD,8BACf,cAAMA,IACDiD,MAAQ,CACT6O,WAAW,GACXC,cAAc,GAJH,E,qDAOT,IAIFvG,EAJC,EACmBlI,KAAKtD,MAAxBkL,EADA,EACAA,SAASlD,EADT,EACSA,YACHvJ,IAAbyM,IAAwBA,EAAW,SACxBzM,IAAXuJ,IAAsBA,EAAO,KAI3B,IAFA,IAAIoE,EAAO,GACX4F,GAAWhK,EAAO,IAAI,GAAGkD,EAASrK,OAAO,IAAIqK,EAASrK,OAAU,KACvDD,EAAE,EAAGA,EAAEsK,EAASrK,OAAQD,IAC7B4K,EAAMN,EAAStK,GACfwL,EAAKvI,KAAK,kBAAC,EAAD,CAAKoO,QAASzG,EAAKwG,OAAQA,KAEzC,OAAO,2BAAOpP,UAAU,eAAe,+BAClCwJ,EACV,wBAAIxJ,UAAU,WACb,6BACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,wC,GA7ByBC,aAmCvBqP,E,uKACQ,IAAD,EACqC5O,KAAKtD,MAA1CiS,EADA,EACAA,QAAQjJ,EADR,EACQA,SAASmJ,EADjB,EACiBA,UAAUH,EAD3B,EAC2BA,YACfvT,IAAbuK,IAAwBA,EAAW,mBACrBvK,IAAd0T,IAAyBA,EAAY,QAC1B1T,IAAXuT,IAAsBA,EAAS,IAInC,IAHA,IAAII,EAAQ,GACRC,EAAM,GACNjO,EAAM,GACDxD,EAAE,EAAGA,GAAGuR,EAAWvR,IACxByR,EAAM,OAEM,MAAjBJ,EADK7N,EAAM,IAAMxD,GAEpByR,GAAO,WACkB,MAAjBJ,EAAQ7N,KAChBiO,GAAO,aACRD,EAAMvO,KAAK,wBAAIjB,UAAWyP,EAAK5L,MAAO,CAACuB,OAAOgK,MAE/C,OAAO,4BACN,4BAAiB,UAAZC,EAAsB,OAASA,EAAQjJ,IAC3CoJ,O,GApBcvP,aAwBHgP,ICnDTS,E,kDAGF,WAAYtS,GAAQ,IAAD,8BACrB,cAAMA,IACDiD,MAAQ,CACHsP,0BAA0B,GAC1BC,uBAAuB,CACnB,CAAC7T,KAAK,mBAAmBuN,OAAO,gBAAgBnE,MAAM,KACtD,CAACpJ,KAAK,eAAeuN,OAAO,UAAUnE,MAAM,IAC5C,CAACpJ,KAAK,YAAYuN,OAAO,YAAYnE,MAAM,IAC3C,CAACpJ,KAAK,UAAUuN,OAAO,UAAUnE,MAAM,IACvC,CAACpJ,KAAK,OAAOuN,OAAO,OAAOnE,MAAM,KAErC0K,0BAA0B,GAC1BC,6BAA6B,GAC7BC,6BAA6B,GAC7BC,mBAAmB,GACnBC,4BAA4B,GAC5BC,kBAAkB,GAClBC,cAAc,GACdC,WAAW,GACXC,kBAAkB,GAClBC,oBAAoB,GACpBC,mBAAmB,GACnBC,kBAAkB,GAClBC,YAAY,EACZC,YAAY,GACrBC,iBAAY9U,EACZ+U,iBAAY/U,GAEP,EAAKgV,qBAAuB,EAAKA,qBAAqBzQ,KAA1B,gBAC5B,EAAK0Q,oBAAsB,EAAKA,oBAAoB1Q,KAAzB,gBACjC,EAAK2Q,iBAAmB,EAAKA,iBAAiB3Q,KAAtB,gBACxB,EAAK4Q,kBAAoB,EAAKA,kBAAkB5Q,KAAvB,gBACzB,EAAK6Q,iBAAmB,EAAKA,iBAAiB7Q,KAAtB,gBACxB,EAAK8Q,kBAAoB,EAAKA,kBAAkB9Q,KAAvB,gBACnB,EAAK+Q,WAAa,EAAKA,WAAW/Q,KAAhB,gBAlCH,E,gEAqCfM,KAAKtD,MAAMxB,KAAKwV,cAChBC,EAAiBC,qBAAqB,GAAG5Q,KAAKoQ,qBAAoB,SAACzT,GAAD,OAASiQ,EAAI9K,MAAMnF,EAAI8K,c,6CAG/FoJ,cAAc7Q,KAAK8Q,SACnBD,cAAc7Q,KAAK+Q,Y,yCASbJ,EAAiBK,kBAAkB,GAAGhR,KAAKuQ,kBAAiB,SAAC5T,GAAD,OAASiQ,EAAI9K,MAAMnF,EAAI8K,c,0CAMnFkJ,EAAiBM,mBAAmB,GAAGjR,KAAKwQ,mBAAkB,SAAC7T,GAAD,OAASiQ,EAAI9K,MAAMnF,EAAI8K,c,2CAmBpE5J,GAAM,IAAD,OAEtB,GADAmC,KAAKtD,MAAMxB,KAAKgW,cACG,OAAfrT,EAAIuJ,OAAiB,CAAC,IAYlB9J,EACA4K,EAbiB,EAWjBrK,EAAI0O,KATJiD,EAFiB,EAEjBA,kBACAC,EAHiB,EAGjBA,cACAC,EAJiB,EAIjBA,WACAC,EALiB,EAKjBA,kBACAC,EANiB,EAMjBA,oBACAE,EAPiB,EAOjBA,kBACAD,EARiB,EAQjBA,mBACAE,EATiB,EASjBA,YACAC,EAViB,EAUjBA,YAIJ,IAAK1S,EAAE,EAAGA,EAAEuS,EAAmBtS,OAAOD,IAAK,CACvC4K,EAAM2H,EAAmBvS,GACzB,IAAK,IAAIkB,EAAE,EAAGA,EAAEwR,EAAYzS,OAAOiB,IAC/B0J,EAAI8H,EAAYxR,IAAM2S,WAAYjJ,EAAI8H,EAAYxR,KAG1DwB,KAAKC,SAAS,CACVuP,kBAAkBA,EAClBC,cAAcA,EACdC,WAAWA,EACXC,kBAAkBA,EAClBC,oBAAoBA,EACpBC,mBAAmBA,EACnBC,kBAAkBA,EAClBC,iBAA4B5U,IAAhB4U,QAA8C5U,IAAhB4U,QAAwD5U,IAA3B4U,EAAYqB,WAA6B,EAAIrB,EAAYqB,WAChIpB,YAAYA,QAEM,SAAfnS,EAAIuJ,QACXwF,EAAI9K,MAAMjE,EAAI4J,SAIxBzH,KAAK8Q,QAAUO,aAAY,kBAAM,EAAKhB,qBAAmB,KACzDrQ,KAAK+Q,SAAWM,aAAY,kBAAM,EAAKf,sBAAoB,O,0CAYrCzS,GAEhB,GADAmC,KAAKtD,MAAMxB,KAAKgW,cACG,OAAfrT,EAAIuJ,OAAiB,KAkB1B9J,EACS4K,EAnBiB,EAQ1BrK,EAAI0O,KALK4C,EAHiB,EAGjBA,0BACAC,EAJiB,EAIjBA,6BACAC,EALiB,EAKjBA,6BACAC,EANiB,EAMjBA,mBACAC,EAPiB,EAOjBA,4BAEPN,EAA4B,CACjC,CAAC5T,KAAK,cAAcuN,OAAO,eAAenE,MAAM,IAAI+D,MAAM,QAC9C,CAACnN,KAAK,mBAAmBuN,OAAO,gBAAgBnE,MAAM,KACtD,CAACpJ,KAAK,YAAYuN,OAAO,QAAQnE,MAAM,KACvC,CAACpJ,KAAK,UAAUuN,OAAO,UAAUnE,MAAM,IACnD,CAACpJ,KAAK,gBAAgBuN,OAAO,SAASnE,MAAM,GAAG+D,MAAM,SAAS8I,aAAa,EAAEC,UAAS,EACtEjM,SAAU,CAAE/I,KAAMiV,EAAgBjM,QAAS,CAAEC,SAAS8J,MAKvE,IAAKhS,EAAE,EAAGA,EAAE6R,EAA0B5R,OAAOD,IAAK,CACjD4K,EAAMiH,EAA0B7R,GACpB,IAAK,IAAIkB,EAAE,EAAGA,EAAE+Q,EAA4BhS,OAAOiB,IAC/C0J,EAAIqH,EAA4B/Q,GAAGiT,kBAAoBzU,SAAUkL,EAAIqH,EAA4B/Q,GAAGiT,mBAG5GzR,KAAKC,SAAS,CACVkP,0BAA0BA,EAC1BC,6BAA6BA,EAC7BC,6BAA6BA,EAC7BC,mBAAmBA,EAC/BL,0BAA0BA,EAC1BM,4BAA4BA,IAEpBvP,KAAKtD,MAAMxB,KAAKwV,cAChBC,EAAiBe,sBAAsB,GAAG1R,KAAKmQ,sBAAqB,SAACxT,GAAD,OAASiQ,EAAI9K,MAAMnF,EAAI8K,gBACrE,SAAf5J,EAAIuJ,QACXwF,EAAI9K,MAAMjE,EAAI4J,W,uCAYL5J,GACb,GAAmB,OAAfA,EAAIuJ,OAAiB,CAAC,IAAD,EAKjBvJ,EAAI0O,KAHJkD,EAFiB,EAEjBA,cACAC,EAHiB,EAGjBA,WACAK,EAJiB,EAIjBA,YAEJ/P,KAAKC,SAAS,CACVwP,cAAcA,EACdC,WAAWA,EACXK,iBAA4B5U,IAAhB4U,QAA8C5U,IAAhB4U,QAAwD5U,IAA3B4U,EAAYqB,WAA6B,EAAIrB,EAAYqB,iBAE9G,SAAfvT,EAAIuJ,QACXwF,EAAI9K,MAAMjE,EAAI4J,W,wCAcP5J,GACX,GAAmB,OAAfA,EAAIuJ,OAAiB,KAY1B9J,EACS4K,EAXN8H,EAAehQ,KAAKL,MAApBqQ,YAFuB,EAW1BnS,EAAI0O,KAPKsD,EAJiB,EAIjBA,mBACZP,EAL6B,EAK7BA,mBACAH,EAN6B,EAM7BA,0BACAC,EAP6B,EAO7BA,6BACAC,EAR6B,EAQ7BA,6BACAE,EAT6B,EAS7BA,4BACAiB,EAV6B,EAU7BA,kBAIQ,IAAKlT,EAAE,EAAGA,EAAEuS,EAAmBtS,OAAOD,IAAK,CACvC4K,EAAM2H,EAAmBvS,GACzB,IAAK,IAAIkB,EAAE,EAAGA,EAAEwR,EAAYzS,OAAOiB,IAC/B0J,EAAI8H,EAAYxR,IAAM2S,WAAYjJ,EAAI8H,EAAYxR,KAGnE,IAAKlB,EAAE,EAAGA,EAAE6R,EAA0B5R,OAAOD,IAAK,CACjD4K,EAAMiH,EAA0B7R,GACpB,IAAK,IAAIkB,EAAE,EAAGA,EAAE+Q,EAA4BhS,OAAOiB,IAC/C0J,EAAIqH,EAA4B/Q,GAAGiT,kBAAoBzU,SAAUkL,EAAIqH,EAA4B/Q,GAAGiT,mBAG5GzR,KAAKC,SAAS,CACtBuQ,kBAAkBA,EACNX,mBAAmBA,EAC/BP,mBAAmBA,EACnBH,0BAA0BA,EAC1BC,6BAA6BA,EAC7BC,6BAA6BA,EAC7BE,4BAA4BA,QAEE,SAAf1R,EAAIuJ,QACXwF,EAAI9K,MAAMjE,EAAI4J,W,iCAOXlL,GAAO,IAAD,EACwDyD,KAAKL,MAAnEkQ,EADM,EACNA,mBAAoBF,EADd,EACcA,kBAAmBC,EADjC,EACiCA,oBAC1CK,EAAc,GACL,SAAT1T,EACA0T,EAAcJ,EACA,QAATtT,EACL0T,EAAcN,EACA,UAATpT,IACL0T,EAAcL,GAClB5P,KAAKC,SAAS,CAACgQ,YAAYA,EAAYC,YAAY3T,M,+BAE7C,IASRe,EATO,SAKP0C,KAAKL,MAHCwP,EAFC,EAEDA,0BAA0BC,EAFzB,EAEyBA,6BAA6BC,EAFtD,EAEsDA,6BAA6BC,EAFnF,EAEmFA,mBAAmBC,EAFtG,EAEsGA,4BACvGC,EAHC,EAGDA,kBAAkBE,EAHjB,EAGiBA,WAAWG,EAH5B,EAG4BA,mBAAmBG,EAH/C,EAG+CA,YAAYD,EAH3D,EAG2DA,YAAYN,EAHvE,EAGuEA,cACxER,EAJC,EAIDA,0BAA0BC,EAJzB,EAIyBA,uBAAuBe,EAJhD,EAIgDA,YAAYC,EAJ5D,EAI4DA,iBAEnD/U,IAAhB8U,IAA2BA,EAAcJ,QACzB1U,IAAhB+U,IAA2BA,EAAc,aACvB/U,IAAlBsU,IAA6BA,EAAgB,IAEjD,IAAIkC,EAAW,GACf,IAAKrU,EAAEmS,EAAclS,OAAO,EAAGD,GAAG,EAAGA,IACpCqU,EAASpR,KAAK,4BAAI,4BAAKkP,EAAcnS,GAAG0M,MAAU,4BAAKyF,EAAcnS,GAAGsU,gBAIzE,IAAMC,EAAiB,SAAC,GAAgC,IAA9BpR,EAA6B,EAA7BA,OAAQqR,EAAqB,EAArBA,QAAqB,EAAZC,MAC1C,IACC,GAAItR,EAAQ,CACX,IAAIuR,EAASF,EAAQ,GAAGA,QAAQG,YACjC,OACC,yBAAK3S,UAAU,iBAAiB6D,MAAO,CAAC+O,OAAO,qBAAqBC,WAAW,OAAOxJ,QAAQ,OAAOyJ,MAAMN,EAAQ,GAAGM,QACpHJ,EAAS,OAASK,MAAMP,EAAQ,GAAGxW,OAAS,EAAIwW,EAAQ,GAAGxW,OAAS,MAItE,MAAOqB,IAET,OAAO,MAGF2V,EAAwB,SAAC,GAAgC,IAA9B7R,EAA6B,EAA7BA,OAAQqR,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MACjD,IACC,GAAItR,EAAQ,CAEX,IADA,IAAI8R,EAAW,CAAC,yBAAKpP,MAAO,CAACiP,MAAM,OAAOI,WAAW,SAAUT,GAAyB,SAAhB7B,EAAyB,SAAM,MAC9F5S,EAAE,EAAGA,EAAEwU,EAAQvU,OAAQD,IAC/BiV,EAAShS,KAAK,yBAAK4C,MAAO,CAACiP,MAAMN,EAAQxU,GAAG8U,QAASN,EAAQxU,GAAGjC,KAAO,OAASgX,MAAMP,EAAQxU,GAAGwU,QAAQA,EAAQxU,GAAGmV,UAAY,EAAIX,EAAQxU,GAAGwU,QAAQA,EAAQxU,GAAGmV,UAAY,MAEhL,OACC,yBAAKnT,UAAU,iBAAiB6D,MAAO,CAAC+O,OAAO,qBAAqBC,WAAW,OAAOxJ,QAAQ,OAAOyJ,MAAMN,EAAQ,GAAGM,QACpHG,IAIF,MAAO5V,IAET,OAAO,MAEF+V,EAA0B,SAAC,GAAgC,IAA9BjS,EAA6B,EAA7BA,OAAQqR,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MACnD,IACC,GAAItR,EAAQ,CAEX,IADA,IAAI8R,EAAW,CAAC,yBAAKpP,MAAO,CAACiP,MAAM,OAAOI,WAAW,SAAUT,EAAQ,uCAC9DzU,EAAE,EAAGA,EAAEwU,EAAQvU,OAAQD,IAC/BiV,EAAShS,KAAK,yBAAK4C,MAAO,CAACiP,MAAMN,EAAQxU,GAAG8U,QAASN,EAAQxU,GAAGjC,KAAO,OAASgX,MAAMP,EAAQxU,GAAGwU,QAAQA,EAAQxU,GAAGmV,UAAY,EAAIX,EAAQxU,GAAGwU,QAAQA,EAAQxU,GAAGmV,UAAY,KAAOX,EAAQxU,GAAGwU,QAAQA,EAAQxU,GAAGmV,QAAQ,YAAc,IAAMX,EAAQxU,GAAGwU,QAAQA,EAAQxU,GAAGmV,QAAQ,SAAW,MAElS,OACC,yBAAKnT,UAAU,iBAAiB6D,MAAO,CAAC+O,OAAO,qBAAqBC,WAAW,OAAOxJ,QAAQ,OAAOyJ,MAAMN,EAAQ,GAAGM,QAEpHG,IAIF,MAAO5V,IAET,OAAO,MAGFgW,EAAU,CAAC,CAACtX,KAAM,WAAYC,MAAOyU,GAAc,CAAC1U,KAAM,QAASC,MAAO,IAAIyU,IAChF6C,EAAiB,CAACC,MAAM,IAiBD,IAAvB9C,EAAYxS,OAAcqV,EAAeC,MAAQ,IACrB,IAAvB9C,EAAYxS,OAAcqV,EAAeC,MAAQ,GAC1B,IAAvB9C,EAAYxS,SAAcqV,EAAeC,MAAQ,IAE1D,IACI3K,EADE4K,EAAS,CAAC,UAAU,UAAU,UAAU,UAAU,WAEpDC,EAAsB,GACpB,IAAKzV,EAAE,EAAGA,EAAE0S,EAAYzS,OAAQD,IAEhB,WADZ4K,EAAM8H,EAAY1S,IAE1ByV,EAAoBxS,KAAK,kBAAC,IAAD,CAAMhE,KAAK,SAASkW,QAASvK,EAAK8K,KAAK,UAAUC,OAAQ,UAAWC,YAAa,EAAGC,IAAK,CAACC,EAAE,GAAIC,mBAAmB,KAE5IN,EAAoBxS,KAAK,kBAAC,IAAD,CAAMhE,KAAK,SAASkW,QAASvK,EAAK+K,OAAQH,EAAOxV,GAAI0V,KAAMF,EAAOxV,GAAI6V,IAAK,CAACC,EAAE,GAAIC,mBAAmB,KAKhI,IAAIC,EAAwB,GACtB,IAAKhW,EAAE,EAAGA,EAAEiS,EAA4BhS,OAAQD,IAC5C4K,EAAMqH,EAA4BjS,GAClCgW,EAAsB/S,KAAK,kBAAC,IAAD,CAAMhE,KAAK,SAASkW,QAASvK,EAAIuJ,iBAAkBwB,OAAQH,EAAOxV,GAAI0V,KAAMF,EAAOxV,GAAIiW,UAAW,CAACH,EAAE,GAAIC,mBAAmB,KAG3J,OAAO,yBAAK/T,UAAU,uBAClB,yBAAKA,UAAU,YACX,wCACCU,KAAKtD,MAAMxB,KAAKyE,MAAMoK,MAAQ,yBAAKzK,UAAU,SAC9C,uBAAG+D,KAAK,4BAA4BnH,OAAO,SAASoD,UAAU,WAAWkU,IAAI,eAC7E,uBAAGnQ,KAAK,4BAA4BnH,OAAO,SAASoD,UAAU,WAAWkU,IAAI,cACrE,MAEZ,wBAAIlU,UAAU,4BAEtB,4BACC,wBAAIA,UAAU,gBACb,4BAAI,4BACH,sCACA,4BACC,2BAAImQ,EAAclS,QAClB,uCAGF,4BAAI,4BACH,yCACA,4BACC,+BACC,kCACC,yBAAK4F,MAAO,CAACsB,MAAM,OACnB,yBAAKtB,MAAO,CAACsB,MAAM,OAEnBkN,QAQA,4BACG,wBAAIrS,UAAU,gBACtB,4BACC,4BACC,mCACA,wBAAI6D,MAAO,CAACC,QAAQ,OAAOqQ,eAAe,SAASnQ,WAAW,KAC9D,kBAAC,IAAD,CAAWmB,MAAO,IAAKC,OAAQ,IAAK6H,KAAMmD,EACzCgE,OAAQ,CAAC1Q,IAAK,EAAG6P,MAAO,GAAI1J,KAAM,GAAIwK,OAAQ,IAC9C,kBAAC,IAAD,CAAOpX,KAAK,SAASqX,OAAQ,CAAC,EAAG,KAAMnP,MAAO,KAC9C,kBAAC,IAAD,CAAOgO,QAAQ,gBACf,kBAAC,IAAD,CAAeoB,gBAAgB,QAC/B,kBAAC,IAAD,CAAS1P,QAAS,kBAAC0N,EAAD,QAClB,kBAAC,IAAD,CAAMtV,KAAK,WAAWkW,QAAQ,aAAaQ,OAAO,UAAUI,mBAAmB,EAAOF,KAAK,EAAOI,UAAW,CAACH,EAAG,SAKpH,4BACA,yBAAK9T,UAAU,aAAa6D,MAAO,CAAC2Q,WAAY,GAAGpP,OAAO,MACzD,4BAAI,+CACJ,kBAAC,IAAD,CAAUD,MAAO,IAAKC,OAAQ,KAC7B,kBAAC,IAAD,CAAK+N,QAAS,QACblG,KAAMoG,EACNoB,GAAI,GACJC,GAAI,GACJC,YAAa,GACbC,YAAa,GACbC,aAAc,GAEd,kBAAC,IAAD,CAAMnB,KAAK,YACX,kBAAC,IAAD,CAAMA,KAAK,eAId,0BAAM1T,UAAU,gBAAgB6D,MAAOyP,GAAiB7C,EAAY,sCAKrE,4BACC,4BACC,8CACA,4BAAI,kBAAC,EAAD,CAAgBnI,SAAU4H,OAIhC,4BACC,4BACC,+CACA,4BAEC,yBAAKlQ,UAAU,iBACd,2BAAOA,UAAU,cACjB,2BAAO/C,KAAK,QAAQlB,KAAK,UAAUC,MAAM,eAAK8Y,eAAgC,SAAhBlE,EAAwBxP,QAAS,kBAAM,EAAK+P,WAAW,WACrH,+CAEA,2BAAOnR,UAAU,cACjB,2BAAO/C,KAAK,QAAQlB,KAAK,UAAUC,MAAM,SAAI8Y,eAAgC,QAAhBlE,EAAuBxP,QAAS,kBAAM,EAAK+P,WAAW,UACnH,yCAEA,2BAAOnR,UAAU,cACjB,2BAAO/C,KAAK,QAAQlB,KAAK,UAAUC,MAAM,SAAI8Y,eAAgC,UAAhBlE,EAAyBxP,QAAS,kBAAM,EAAK+P,WAAW,YACrH,0CAGD,yBAAKnR,UAAU,cACd,kBAAC,IAAD,CAAWmF,MAAO,IAAKC,OAAQ,IAAK6H,KAAM0D,GACzC,kBAAC,IAAD,CAAOwC,QAAQ,gBACf,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAeoB,gBAAgB,QAC/B,kBAAC,IAAD,CAAS1P,QAAS,kBAACmO,EAAD,QAClB,kBAAC,IAAD,CAAQ7J,cAAc,SAAS4L,SAAS,WACvCtB,OAON,4BACC,4BACC,iDACA,4BACC,yBAAKzT,UAAU,aAAa6D,MAAO,CAAC2Q,UAAU,KAC7C,kBAAC,IAAD,CAAWrP,MAAO,IAAKC,OAAQ,IAAK6H,KAAM4C,GACzC,kBAAC,IAAD,CAAOsD,QAAQ,OAAOhO,MAAO,KAC7B,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAeoP,gBAAgB,QAC/B,kBAAC,IAAD,CAAS1P,QAAS,kBAACuO,EAAD,QAClB,kBAAC,IAAD,CAAQjK,cAAc,SAAS4L,SAAS,WACvCf,QASP,yBAAKhU,UAAU,YACd,wCAGD,wBAAIA,UAAU,4BAEb,4BACC,4BACC,+CACA,4BACA,2BAAOA,UAAU,mBAAkB,+BAClC,4BACA,wBAAIyJ,QAAQ,KACX,4BAAK1G,IAAOnD,SAASkQ,EAA6BkF,UAGnD,4BACA,4BACC,0BAAMhV,UAAU,QAAQ+C,IAAOnD,SAASkQ,EAA6BmF,UACrE,uCAED,4BACC,0BAAMjV,UAAU,UAAU+C,IAAOnD,SAASkQ,EAA6BoF,OACvE,0CAQJ,4BACC,4BACC,8CACA,4BACA,wBAAIlV,UAAU,gBACb,4BACA,2BAAOA,UAAU,mBAChB,+BACA,4BACA,wBAAIyJ,QAAQ,KACX,4BAAK1G,IAAOnD,SAASmQ,EAA6BiF,UAGnD,4BACA,4BACC,8BAAOjS,IAAOnD,SAASmQ,EAA6BkF,UACpD,uCAED,4BACC,8BAAOlS,IAAOnD,SAASmQ,EAA6BmF,OACpD,wCAMF,wBAAIlV,UAAU,aAAa6D,MAAO,CAACG,WAAW,KAC9C,yBAAKhE,UAAU,2BACd,kBAAC,EAAD,CAAUqI,QAASuH,EAAwBtH,SAAU2H,EAA6BzH,WAAY,IAAKhH,IAAKxC,KAAKyC,iBAQjH,4BACA,yBAAKzB,UAAU,cACd,yBAAKA,UAAU,eACd,kBAAC,EAAD,CAAUqI,QAASsH,EAA2BrH,SAAU0H,EAAoBxH,WAAY,IAAKhH,IAAKxC,KAAKyC,oB,GA/jBrFxB,aA0kBlBiS,E,uKACQ,IACL7L,EAAQ3F,KAAKtD,MAAbiJ,KACHoJ,EAA6B,YAAvBpJ,EAAK8O,cAA8B,yBAA2B,sBAClE,OAAO,0BAAMnV,UAAWyP,EAAK7K,MAAOyB,EAAK8O,oB,GAJpBlV,aAOdyP,I,qCChlBT0F,G,kDACF,WAAYhY,GAAQ,IAAD,8BACf,cAAMA,IACDiD,MAAQ,CACTiI,SAAS,GACTD,QAAQ,GACRG,WAAW,IACX6M,UAAU,EACVC,gBAAgB,EAChBC,aAAa,GAEjB,EAAKC,YAAc,EAAKA,YAAYpV,KAAjB,gBACnB,EAAKqV,aAAe,EAAKA,aAAarV,KAAlB,gBACpB,EAAKsV,gBAAkB,EAAKA,gBAAgBtV,KAArB,gBACvB,EAAKuV,WAAa,EAAKA,WAAWvV,KAAhB,gBAClB,EAAKwV,YAAc,EAAKA,YAAYxV,KAAjB,gBACnB,EAAKyV,eAAiB,EAAKA,eAAezV,KAApB,gBACtB,EAAK0V,mBAAqB,EAAKA,mBAAmB1V,KAAxB,gBAC1B,EAAK2V,WAAa,EAAKA,WAAW3V,KAAhB,gBAClB,EAAK4V,WAAa,EAAKA,WAAW5V,KAAhB,gBAClB,EAAK6V,YAAc,EAAKA,YAAY7V,KAAjB,gBACnB,EAAK8V,WAAa,EAAKA,WAAW9V,KAAhB,gBAClB,EAAK+F,sBAAwB,EAAKA,sBAAsB/F,KAA3B,gBAC7B,EAAK+V,eAAiB,EAAKA,eAAe/V,KAApB,gBACtB,EAAKgW,gBAAkB,EAAKA,gBAAgBhW,KAArB,gBAvBR,E,gEA0BfiW,KAAQC,YAAY,MACpBD,KAAQE,WAAW,SACnB7V,KAAK8U,YAAY,K,sCAML/U,GAAO,IAAD,EACQC,KAAK5D,KAAxB0Z,EADW,EACXA,OAAQC,EADG,EACHA,QACXD,EAAOxa,MAAMiC,OAAS,GAAKwY,EAAQza,MAAMiC,OAAS,EAClDyC,KAAK8U,YAAY/U,EAAKgW,EAAQza,MAAMwa,EAAOxa,OAE3C0E,KAAK8U,YAAY/U,K,kCASbA,EAAKgW,EAAQC,QACR7a,IAAT4E,IAAoBA,EAAOC,KAAKL,MAAMgV,WAC1C3U,KAAKtD,MAAMxB,KAAKwV,cAChB,IAAMxC,EAAO,CACTnO,KAAKA,QAEO5E,IAAZ4a,QAAwC5a,IAAf6a,IAEzBA,EAAaC,EAAW/O,iBAAiB8O,GAEzC9H,EAAK4H,OAASE,EACd9H,EAAK6H,QAAUA,GAEnBG,GAAaC,KAAKjI,EAAKlO,KAAK+U,cAAa,SAACpY,GAAD,OAASiQ,EAAI9K,MAAMnF,EAAI8K,c,mCAMvD5J,GAET,GADAmC,KAAKtD,MAAMxB,KAAKgW,cACC,OAAbrT,EAAIuJ,OAAe,CACnB,IAAMgP,EAAYvY,EAAI0O,KAChB5E,EAAU,CACZ,CAACtM,KAAK,YAAYuN,OAAO,aAAayN,SAAS,IAAI9E,UAAS,EACxDjM,SAAU,CAAE/I,KAAM2I,EAAcK,QAAS,CACrCC,SAAS3H,EAAIsY,KAAKzQ,SAAS,YAC3BD,sBAAsBzF,KAAKyF,yBAGlC,CAACpK,KAAK,aAAauN,OAAO,WAAYnE,MAAM,IAAI+D,MAAM,SAAS+I,UAAS,EAAK+E,WAAW,UACxF,CAACjb,KAAK,eAAeuN,OAAO,eAAgBnE,MAAM,IAAI+D,MAAM,SAAS+I,UAAS,EAAK+E,WAAW,UAC9F,CAACjb,KAAK,UAAUuN,OAAO,cAAcnE,MAAM,IAAI+D,MAAM,SAAS+I,UAAS,EAAK+E,WAAW,UACvF,CAACjb,KAAK,SAASuN,OAAO,OAAOnE,MAAM,IAAI+D,MAAM,SAAS+I,UAAS,EAAK+E,WAAW,UAC/E,CAACjb,KAAK,aAAauN,OAAO,6BAA6BnE,MAAM,IAAI+D,MAAM,UACvE,CAACnN,KAAK,eAAeuN,OAAO,gBAAgBnE,MAAM,IAAI+D,MAAM,SACzDlD,SAAU,CAAE/I,KAAMga,GAAchR,QAAS,CAAEC,SAAS3H,EAAIsY,KAAKV,eAAezV,KAAKyV,mBAGzFzV,KAAKC,SAAS,CAAC2H,SAAS/J,EAAIsY,KAAKxB,UAAUyB,EAAUrW,KAAK6U,gBAAgBwB,EAAUjW,WAAW0U,aAAauB,EAAUtW,UAAU6H,QAAQA,QAClH,SAAf9J,EAAIuJ,QACXwF,EAAI9K,MAAMjE,EAAI4J,W,4CASA9B,EAAKhF,EAAEjE,GAAQ,IAAD,OAIhC,GAHIsD,KAAKtD,MAAM8Z,SAAWxW,KAAKtD,MAAM+Z,cACjCzW,KAAKtD,MAAM+Z,aAAa9Q,GAExB3F,KAAKtD,MAAM8Z,QACXxW,KAAKtD,MAAMga,cACX1W,KAAKtD,MAAM8F,eAEX,IAAK,IACI2H,EAAYnK,KAAKtD,MAAMxB,KAAKyE,MAA5BwK,SAGL,GAAgC,UAA5BA,EAASqC,gBAA+B7G,EAAK2G,SAAWnC,EAASmC,OACjE4J,GAAaS,aAAchR,EAAKiR,SAAQ,SAAC/Y,GAClB,OAAfA,EAAIuJ,OACJ,EAAKmO,YAAY1X,EAAI0O,KAAKsK,UAAWhZ,EAAIsY,MAEnB,SAAftY,EAAIuJ,QACTwF,EAAI9K,MAAMjE,EAAI4J,YAEtB,SAAC9G,GAAD,OAAOC,QAAQC,IAAIF,UAClB,CACHX,KAAKC,SAAU,CAAC6W,gBAAgBnW,EAAEiF,OAAOmR,cAAcpR,EAAKqR,mBAAmBrW,EAAEsW,WAAWC,YAAW,IAEvGlX,KAAKtD,MAAMxB,KAAKoP,UADC,cAGb,kBAAC,GAAD,CAAapG,MAHA,cAGiBhJ,KAAM8E,KAAKtD,MAAMxB,KAAM6b,cAAepR,EAAMnD,QAAS,SAAC7B,GAAD,OAAO,EAAKwW,cAHlF,kBAIb,CAAC1S,MAAM,IAAKC,OAAO,IAAKF,WAAW,eAAK1B,QAAQ,eAAMwB,mBAAmB,iBAAiB,KAAK,OAGzG,MAAO3H,GACLiE,QAAQC,IAAIlE,M,mCASpBqD,KAAK8U,YAAY,EAAG9U,KAAK5D,KAAK2Z,QAAQza,MAAO0E,KAAK5D,KAAK0Z,OAAOxa,S,mCAKpD,IAAD,OAET0E,KAAKtD,MAAMxB,KAAKoP,UADC,4BAGb,iEACA,CAAC7F,MAAM,IAAKC,OAAO,IAAKN,gBAAe,IAAO,kBAAM,EAAK+Q,mBAAiB,Q,uCAU9E,IAFA,IAAMiC,EAAcpX,KAAK5D,KAAK0I,KAAKuS,cAAcC,iBAC7CC,EAAY,GACPja,EAAE,EAAGA,EAAE8Z,EAAY7Z,OAAQD,IAChCia,EAAUhX,KAAM6W,EAAY9Z,GAAGsZ,SAEnCV,GAAasB,OAAOD,EAAUvX,KAAKkV,aAAY,SAACvU,GAAD,OAAOC,QAAQC,IAAIF,Q,gFAY1D9C,GACRmC,KAAK8U,cACc,OAAfjX,EAAIuJ,OACJwF,EAAIjL,GAAG,6DAEa,SAAf9D,EAAIuJ,QACTwF,EAAI9K,MAAMjE,EAAI4J,W,mCAMR,IAAD,SAGLzH,KAAKL,MADL8X,EAFK,EAELA,gBAAiBC,EAFZ,EAEYA,iBAIrB1X,KAAKtD,MAAMxB,KAAKoP,UADC,eAGb,kBAAC,GAAD,CAAUpG,MAHG,eAGchJ,KAAM8E,KAAKtD,MAAMxB,KAAMyc,gBAAgCxc,IAApBsc,EAA+BA,gBAAiBA,EAAiBC,iBAAkBA,EAAkBlV,QAAS,SAAC7B,GAAD,OAAO,EAAK2U,WAH3K,mBAIb,CAAC7Q,MAAM,IAAKC,OAAO,IAAK5B,QAAQ,eAAMuB,qBAAoB,EAAOC,mBAAmB,iBAAiB,KAAK,Q,kCAQtGuS,EAAWe,GAAa,IAAD,OAG/B5X,KAAKtD,MAAMxB,KAAKoP,UADC,eAGb,kBAAC,GAAD,CAAUpP,KAAM8E,KAAKtD,MAAMxB,KAAMyc,gBAA0Bxc,IAAd0b,EAAyBY,gBAAiBZ,EAAWa,iBAAkBE,EAAYpV,QAAS,SAAC7B,GAAD,OAAO,EAAK2U,WAHxI,mBAIb,CAAC7Q,MAAM,IAAKC,OAAO,IAAK5B,QAAQ,eAAMuB,qBAAoB,EAAOC,mBAAmB,iBAAiB,KAAK,Q,iCAOvGJ,GACPlE,KAAK8U,YAAY9U,KAAKL,MAAMgV,WAC5B3U,KAAKC,SAAS,CAACwX,qBAAgBtc,EAAWuc,sBAAiBvc,IAC3D6E,KAAKtD,MAAMxB,KAAKqP,UAAUrG,K,qCAQfyB,EAAKhF,EAAEjE,GAKlBwZ,GAAa2B,aAAalS,EAAKiR,QAAQ5W,KAAK0V,iBAAgB,SAAC/Y,GAAD,OAASiQ,EAAI9K,MAAMnF,EAAI8K,c,sCAMvE5J,GACO,OAAfA,EAAIuJ,OACJwF,EAAIjL,GAAG9D,EAAI4J,SAES,SAAf5J,EAAIuJ,QACTwF,EAAI9K,MAAMjE,EAAI4J,W,+BAIZ,IAAD,SAIDzH,KAAKL,MAFLiI,EAFC,EAEDA,SAAsBD,GAFrB,EAESG,WAFT,EAEqBH,SACtBgN,EAHC,EAGDA,UAAWC,EAHV,EAGUA,gBAAiBC,EAH3B,EAG2BA,aAGhC,OAAO,yBAAKvV,UAAU,eAE3B,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,2CAEd,yBAAKA,UAAU,iBACf,wBAAIA,UAAU,OAAd,qBAGA,yBAAKA,UAAU,uCACd,yBAAKA,UAAU,0BAAyB,yBAAKA,UAAU,gBACtD,4BAAQjD,IAAI,UAAUiD,UAAU,WAAW6D,MAAO,CAAC2U,MAAM,OAAOxU,WAAW,KAC1E,4BAAQhI,MAAM,aAAd,cACA,4BAAQA,MAAM,QAAd,SAED,2BAAOe,IAAI,SAASE,KAAK,OAAO+C,UAAU,gBAAgByN,YAAY,kEAAgB5J,MAAO,CAACsB,MAAM,OACpG,uBAAGuF,KAAK,SAAS1K,UAAU,gBAAgBoB,QAAS,kBAAM,EAAK8U,eAA/D,kBAGD,uBAAGxL,KAAK,SAAS1K,UAAU,uBAAuBoB,QAASV,KAAKqV,cAGjE,yBAAK/V,UAAU,kBACd,yCAAe+C,IAAOnD,SAAS0V,KAEhC,kBAAC,IAAD,CAAMvY,IAAI,OAAO0b,WA1BJ,GA0BoBnP,OAAQ,CAAClE,OAAO,GAAG4R,WAAW,UAC9D/J,KAAM3E,EAAUoQ,cAAe,CAACC,WAAW,GAC5BtQ,QAASA,EACTuQ,SAAS,EAAOC,SAAS,IAEzC,yBAAK7Y,UAAU,4BACd,kBAAC,EAAD,CAAYjD,IAAK,OACb0D,KAAM4U,EACNxU,WAAYyU,EACZxU,QAASyU,EACTpV,YAAaO,KAAKgV,0B,GAhSAzV,aA2SrBgX,G,WACF,WAAY7Z,GAAQ,0BACqBA,EAAM2I,WAAWC,SAASC,QAAvDkQ,EADO,EACPA,eAAgBjQ,EADT,EACSA,SACpBG,OAAOxK,EACPqK,GAAYA,EAASjI,OAAS,IAClCoI,EAAOH,EAAS9I,EAAMkJ,cACTzK,IAATwK,IAAoBA,EAAO,IAC/B,IAAIR,EAAKvJ,SAASwJ,cAAc,KAGF,WAA1BO,EAAKyS,kBAA2D,SAA1BzS,EAAKyS,mBAC3CjT,EAAKvJ,SAASwJ,cAAc,MACzB9F,UAAY,kDACf6F,EAAGU,UAAY,OACfV,EAAGjB,MAAM,OACTiB,EAAGW,iBAAiB,SAAQ,SAACnF,GAAD,OAAO8U,EAAe9P,EAAKhF,EAAEjE,QAEzDyI,EAAG7F,UAAU,YACb6F,EAAGU,UAAY,aAEnB7F,KAAKmF,GAAKA,E,yDAGV,OAAOnF,KAAKmF,O,KAGLuP,MCrHA,O,6FA5MNxG,EAAKV,EAAMC,GACZ,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIW,KAAKJ,EACVR,EAASE,OAAOU,EAAEJ,EAAKI,IAE3B,OAAOT,EAAKC,KAAK,cAAcJ,GAAUK,MAAK,SAAUlQ,GAChD2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,6BAUXuR,EAAKV,EAAMC,GACd,IAAIC,EAAW,IAAIC,SAGnB,IAAK,IAAIW,KAAKJ,EACVR,EAASE,OAAOU,EAAEJ,EAAKI,IAE3B,OAAOT,EAAKC,KAAK,gBAAgBJ,GAAUK,MAAK,SAAUlQ,GAClD2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,mCAUL0b,EAAU7K,EAAMC,GACzB,IAAIC,EAAW,IAAIC,SAEnB,OADAD,EAASE,OAAO,YAAYyK,GACrBxK,EAAKC,KAAK,sBAAsBJ,GAAUK,MAAK,SAAUlQ,GACxD2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,mCAUL2b,EAAU9K,EAAMC,GACzB,IAAIC,EAAW,IAAIC,SAEnB,OADAD,EAASE,OAAO,YAAY0K,GACrBzK,EAAKC,KAAK,sBAAsBJ,GAAUK,MAAK,SAAUlQ,GACxD2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,iCAUP4b,EAAU/K,EAAMC,GACvB,IAAIC,EAAW,IAAIC,SAEnB,OADAD,EAASE,OAAO,YAAY2K,GACrB1K,EAAKC,KAAK,eAAeJ,GAAUK,MAAK,SAAUlQ,GACjD2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,6BAUX6b,EAAShL,EAAMC,GAClB,IAAIC,EAAW,IAAIC,SAEnB,OADAD,EAASE,OAAO,WAAW4K,GACpB3K,EAAKC,KAAK,gBAAgBJ,GAAUK,MAAK,SAAUlQ,GAClD2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,mCAULia,EAAQpJ,EAAMC,GACvB,IAAIC,EAAW,IAAIC,SAEnB,OADAD,EAASE,OAAO,UAAUgJ,GACnB/I,EAAKC,KAAK,mBAAmBJ,GAAUK,MAAK,SAAUlQ,GACrD2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,uCAUDuR,EAAKV,EAAMC,GACxB,IAAIC,EAAW,IAAIC,SAGnB,OAFAD,EAASE,OAAO,UAAUM,EAAK0I,SAC/BlJ,EAASE,OAAO,eAAeM,EAAKuK,SAC7B5K,EAAKC,KAAK,uBAAuBJ,GAAUK,MAAK,SAAUlQ,GACzD2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,iCAUPuR,EAAKV,EAAMC,GAClB,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIW,KAAKJ,EACVR,EAASE,OAAOU,EAAEJ,EAAKI,IAE3B,OAAOT,EAAKC,KAAK,oBAAoBJ,GAAUK,MAAK,SAAUlQ,GACtD2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,mCAULia,EAAQpJ,EAAMC,GACvB,IAAIC,EAAW,IAAIC,SAEnB,OADAD,EAASE,OAAO,UAAUgJ,GACnB/I,EAAKC,KAAK,sBAAsBJ,GAAUK,MAAK,SAAUlQ,GACxD2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,U,MCnMP,O,+FAlBN+b,EAAMC,GACX,IAAIjL,EAAW,IAAIC,SAInB,OAFAD,EAASE,OAAO,OAAQ8K,GAEjB7K,EAAKC,KAAsC,eAAgBJ,EAAU,CAC1EtF,QAAS,CACP,eAAgB,uBAElBuQ,uB,iCAKF,OAAO9K,EAAKI,IAAI,mB,MCyVL2K,G,kDA5VX,WAAYlc,GAAQ,IAAD,8BACjB,cAAMA,IACDiD,MAAQ,CACPkZ,UAAU,KACVC,UAAU,KACVC,eAAe,KACfC,WAAW,EACXtX,SAAS,EACTuX,iBAAY9d,EACZyc,WAAW,GACXsB,YAAW,EACpBC,aAAY,EACZC,qBAAgBje,GAEjB,EAAKka,WAAa,EAAKA,WAAW3V,KAAhB,gBACZ,EAAK2Z,gBAAkB,EAAKA,gBAAgB3Z,KAArB,gBAC7B,EAAK4Z,aAAe,EAAKA,aAAa5Z,KAAlB,gBACd,EAAK6Z,eAAiB,EAAKA,eAAe7Z,KAApB,gBACtB,EAAK8Z,aAAe,EAAKA,aAAa9Z,KAAlB,gBACpB,EAAK+Z,WAAa,EAAKA,WAAW/Z,KAAhB,gBAClB,EAAKga,OAAS,EAAKA,OAAOha,KAAZ,gBACd,EAAKia,oBAAsB,EAAKA,oBAAoBja,KAAzB,gBACjC,EAAK8C,QAAU,EAAKA,QAAQ9C,KAAb,gBACT,EAAKka,eAAiB,EAAKA,eAAela,KAApB,gBAC5B,EAAKma,iBAAmB,EAAKA,iBAAiBna,KAAtB,gBACxB,EAAKoa,aAAe,EAAKA,aAAapa,KAAlB,gBAzBC,E,gEA4BfM,KAAK5D,KAAKic,UAAUhM,U,2CAEF,IACV6M,EAAelZ,KAAKL,MAApBuZ,WACFvB,EAAe3X,KAAKtD,MAApBib,WACFA,IAAeuB,GACflZ,KAAKC,SAAS,CAACiZ,YAAW,EACpBvB,WAAWA,M,qCAOrB3X,KAAKC,SAAS,CAACkZ,aAAY,M,qCAOvBnZ,KAAK5D,KAAK2d,UAAUze,MAAMiC,OADf,MAEXyC,KAAK5D,KAAK2d,UAAUze,MAAQ0E,KAAK5D,KAAK2d,UAAUze,MAAMgH,OAAO,EAFlD,MAIftC,KAAKC,SAAS,CAAC+Y,WAAWhZ,KAAK5D,KAAK2d,UAAUze,MAAMiC,OAAO4b,aAAY,M,iCAMnEa,GACJ,KAAIA,EAAM9d,OAAO+d,MAAM1c,OAAS,GAAhC,CACA,IAAMmb,EAAOsB,EAAM9d,OAAO+d,MAAM,GAC3Bja,KAAK2Z,oBAAoBjB,IAC9B1Y,KAAK0Z,OAAQhB,M,6BAMVwB,GAAa,IAAD,OACfla,KAAKC,SAAS,CAACyB,SAAS,EAAGuX,YAAaiB,IACpCA,EAAW/c,KAAOkF,IAAOxF,gBAAgB,QACzC+P,EAAI9K,MAAM,gFAGd9B,KAAKtD,MAAMxB,KAAKwV,cAChByJ,GAAcT,OAAOQ,GAAY,SAACF,GAC9B,EAAK/Z,SAAS,CAACyB,SAAUpD,KAAK8b,MAAO,IAAMJ,EAAMK,OAAUL,EAAM1F,YAEpEvG,MAAK,SAACuM,GACH,EAAK5d,MAAMxB,KAAKgW,cAChB,IAAMrT,EAAMyc,EAAS/N,KACrB,GAAmB,OAAf1O,EAAIuJ,OAAiB,CACrB,IAAI6S,EAAQ,GACZA,EAAM1Z,KAAM1C,EAAI0O,KAAKmM,MACrB,EAAKzY,SAAS,CAAC2X,WAAWqC,EAAMd,aAAY,QACtB,SAAftb,EAAIuJ,QACXwF,EAAI9K,MAAMjE,EAAI4J,YAGrBuG,OAAM,WACH,EAAKtR,MAAMxB,KAAKgW,cAChBtE,EAAI9K,MAAM,kEACV,EAAK7B,SAAS,CACVyB,SAAU,EACV+F,QAAS,6BACTwR,iBAAa9d,U,0CAQRud,GAEb,IADA,IAAMuB,EAAQja,KAAKL,MAAMiY,WAChBta,EAAE,EAAGA,EAAE2c,EAAM1c,OAAQD,IAC1B,GAAI2c,EAAM3c,GAAGid,WAAa7B,EAAKrd,MAAQmC,OAAOyc,EAAM3c,GAAGkd,YAAc9B,EAAKvb,KAEtE,OADAyP,EAAI/K,KAAK,0GACF,EAGf,OAAO,I,mCAMP,GAAK7B,KAAKqZ,kBAAV,CAMA,IAPM,IAKFX,EAHGU,EAAmBpZ,KAAKL,MAAxByZ,gBACHlL,EAAOjS,oBAAU+D,MACjBya,EAAiB,GAEjBC,EAAM,GACDpd,EAAE,EAAGA,EAAE0C,KAAKL,MAAMiY,WAAWra,OAAOD,IACzCob,EAAO1Y,KAAKL,MAAMiY,WAAWta,GAC7Bmd,EAAela,KAAMmY,EAAKiC,UAElCD,EADGhC,EAAK6B,SAASxd,QAAQ,MAAQ,EAC3B2b,EAAK6B,SAASjY,OAAOoW,EAAK6B,SAASK,YAAY,KAAK,EAAElC,EAAK6B,SAAShd,QAAQsd,cAE5E,GAEF3M,EAAK0J,WAAa6C,EAClBvM,EAAK4M,UAAYJ,EACjBxM,EAAK6M,SAAW3B,EAChBlD,GAAa8E,OAAO9M,EAAKlO,KAAKuZ,gBAAe,SAAC5Y,GAAD,OAAOC,QAAQC,IAAIF,S,wCAMjD,IAAD,EAGIX,KAAKL,MAFhBwZ,EADO,EACPA,YAAaC,EADN,EACMA,gBAEhBxB,EAHU,EAGVA,WACAqD,EAAW,GACf,IAAK9B,EAED,OADAvM,EAAI/K,KAAK,oEACF,EAGX7B,KAAKC,SAAS,CAAC4Y,UAAU,KAAKC,UAAU,KAAKC,eAAe,KAAKmC,cAAc,OAE/E,IAAI/T,EAASnH,KAAK5D,KAAKic,UAAU/c,MAC7B6f,EAAUlF,EAAWmF,aAAajU,GAEtC,OADA8T,EAASI,WAAY,EAChBF,EAAQ/T,QAOnB6T,EAASC,eAAgB,EAEK,OAApB9B,GACAxM,EAAI9K,MAAM,yEACVmZ,EAASC,eAAgB,EACzBlb,KAAKC,SAASgb,IACP,IAIX9T,EAASnH,KAAK5D,KAAKkf,aAAahgB,OACrBiC,OAAS,GAChBqP,EAAI9K,MAAM,gDACV9B,KAAKC,SAASgb,IACP,GACN5I,MAAMlL,IAChByF,EAAI9K,MAAM,4DACD9B,KAAKC,SAASgb,IACP,IAGXA,EAASlC,gBAAiB,EACtBnB,EAAWra,OAAS,GACpBqP,EAAI9K,MAAM,mEACVmZ,EAASlC,gBAAiB,EAC1B/Y,KAAKC,SAASgb,IACP,IAGXjb,KAAKC,SAASgb,IACP,MApCHrO,EAAI9K,MAAMqZ,EAAQ9T,QAClB4T,EAASI,WAAY,EACrBrb,KAAKC,SAASgb,IACP,K,qCAuCHpd,GACRmC,KAAKC,SAASD,KAAKub,cACA,OAAf1d,EAAIuJ,QACJwF,EAAIjL,GAAG,4DACP3B,KAAKtD,MAAM8F,WACW,SAAf3E,EAAIuJ,QACXwF,EAAI9K,MAAMjE,EAAI4J,W,gCAMd,IAAD,OACH,IACA,IAAKzH,KAAKL,MAAMgY,WAAY,CAGxB,IAFA,IACIe,EADA8C,EAAW,GAENle,EAAE,EAAGA,EAAE0C,KAAKL,MAAMiY,WAAWra,OAAQD,IAC1Cob,EAAO1Y,KAAKL,MAAMiY,WAAWta,GAC7Bke,EAASjb,KAAKmY,EAAKiC,UAEvBzE,GAAauF,WAAWD,IAE1B,MAAO7e,IACT+e,YAAW,SAAC/a,GAAD,OAAO,EAAKjE,MAAM8F,YAAU,O,qCAM5BmZ,GAGX,IAFA,IAAIzT,EACC0P,EAAc5X,KAAKL,MAAnBiY,WACIta,EAAE,EAAGA,EAAEsa,EAAWra,OAAQD,KAC/B4K,EAAM0P,EAAWta,IACbse,OAASD,IAAgBzT,EAAIyS,SAAW,IAAM,IAEtD3a,KAAKC,SAAS,CAAC2X,WAAWA,EAAWuB,aAAY,M,yCAMjD,IAC4BnZ,KAAKtD,MAAxB+a,gBACWsD,SAAW/a,KAAK5D,KAAK2e,SAASzf,MAC9C0E,KAAKC,SAAS,CAACkZ,aAAY,IAC7B,MAAOxc,O,mCAMHgE,GACZX,KAAKC,SAAS,CAACmZ,gBAAgBzY,EAAEkb,cAAcvgB,MAAO6d,aAAY,M,+BAGtD,IAAD,SAIKnZ,KAAKL,MADXiY,EAHC,EAGDA,WAAWsB,EAHV,EAGUA,WAAWE,EAHrB,EAGqBA,gBAC/BJ,EAJU,EAIVA,WAJU,EAK2ChZ,KAAKtD,MAArDib,EALK,EAKLA,WAAWF,EALN,EAKMA,gBAAgBC,EALtB,EAKsBA,sBACTvc,IAApBsc,IAA+BA,EAAkB,KAC1CyB,GAAetB,GAAcF,GAAsBE,EAAWra,SAAWma,EAAiBna,QAC3FyC,KAAKC,SAAS,CAAC2X,WAAWF,IAC/B0B,IAESA,OAD6Bje,IAA7Bsc,EAAgBsD,SACE/b,OAAOyY,EAAgBsD,UAEvB,IAEtB/a,KAAKC,SAAS,CAACmZ,gBAAgBA,KAGnC,IAAI0C,EAAgB,GAChBlE,GAAcA,EAAWra,OAAS,IAClCue,EAAgBlE,EAAW,GAAG2C,SAAW,IAAMlY,IAAOnF,iBAAiBM,OAAOoa,EAAW,GAAG4C,WAAa,KAKnH,IAHA,IAEIO,EAFAgB,EAAS,GACPC,EAAYC,GAAWC,YAAY,kBAEhC5e,EAAE,EAAGA,EAAE0e,EAAUze,OAAQD,IACjCyd,EAAWiB,EAAU1e,GACrBye,EAAOxb,KAAM,2BAAOgN,GAAIwN,EAASoB,KAAM5f,KAAK,QAAQlB,KAAK,WAAWC,MAAOyf,EAASzf,MACnFkB,QAAS4c,IAAoB2B,EAASzf,MAAOoF,QAAS,SAACC,GAAD,OAAO,EAAKmZ,aAAanZ,OAChFob,EAAOxb,KAAM,2BAAO6b,IAAKrB,EAASoB,MAAOpB,EAASsB,WAO7C,OAJmB,IAAfrD,GAAkD,OAA9BvB,EAAgBsC,gBAAoD5e,IAA9Bsc,EAAgBsC,WAA2BtC,EAAgBsC,UAAUxc,OAAS,IACxIyb,EAAavB,EAAgBsC,UAAUxc,QAGpC,yBAAK+B,UAAU,eACrBqY,EACG,2BAAOpb,KAAK,OAAOF,IAAI,UAAU8G,MAAO,CAACC,QAAQ,QAASmK,GAAG,UAAUJ,aAAcsK,EAAgBb,QAAS0F,UAAQ,IACxH,KACF,+BACE,+BACP,4BACC,0CAAe,0BAAMhd,UAAU,aAAhB,MACf,4BACC,yBAAKA,UAAU,aACd,2BAAOjD,IAAI,YAAYE,KAAK,OAAO+C,UAAU,WAAWyN,YAAY,kDAAe5J,MAAO,CAACsB,MAAM,KACjG8X,SAAU,SAAC5b,GAAO,EAAK2Y,gBACvBkD,UAAU,KAAKrP,aAAcsK,EAAgBY,eAIvC,4BACE,yCAAc,0BAAM/Y,UAAU,aAAhB,MAEd,4BACE,yBAAKA,UAAU,aACb,2BAAOA,UAAU,WAAW8c,IAAI,UAAUjZ,MAAO,CAACsB,MAAM,SACtD,2BAAOlI,KAAK,OAAO+C,UAAU,WAAWmd,SAAS,WAAWtZ,MAAO,CAACsB,MAAO,oBAAoBiY,YAAa,IAAK3P,YAAY,4GAC7HI,aAAc2O,EAAe5X,MAAO4X,IACpC,0BAAMxc,UAAU,0BAChB,2BAAO/C,KAAK,OAAOgR,GAAG,UAAUgP,SAAUvc,KAAKyZ,iBAKhE,4BACC,wCAAa,0BAAMna,UAAU,aAAhB,MACb,4BAAI,yBAAKA,UAAU,eAAeyc,KAE1B,4BACE,qCAAU,0BAAMzc,UAAU,aAAhB,MACV,4BAAI,yBAAK6D,MAAO,CAACC,QAAQ,OAAOuZ,WAAW,WACnD,2BAAOtgB,IAAI,eAAeE,KAAK,SAAS+C,UAAU,aAAa6D,MAAO,CAACsB,MAAM,IAAK0I,aAAcsK,EAAgB6D,aAAcsB,IAAK,EAAGC,IAAK,MAAOC,KAAM,EAC5IP,SAAU,SAAC5b,GAAD,OAAO,EAAKV,SAAS,CAACkZ,aAAY,OAF5C,cAE6D,0BAAMnU,MAAM,aAAZ,8DAGnE,4BACE,2CACA,wBAAI7B,MAAO,CAACuF,UAAU,UAC9B,8BAAUrM,IAAI,YAAYyM,KAAK,IAAIiU,KAAK,MAAMC,UAAU,MAAMT,SAAU,SAAC5b,GAAD,OAAO,EAAK6Y,gBAAgBrM,aAAcsK,EAAgBsC,YACtH,0BAAMza,UAAU,YAAY6D,MAAO,CAACmO,aAAa,IAAjD,IAAsD,0BAAMnO,MAAO,CAACiP,MAAM,YAAa4G,GAAvF,eAKV,yBAAK1Z,UAAU,oCAAmC,uBAAGA,UAAU,QAC3D,4BAAQA,UAAU,gBAAgBoB,QAAS,kBAAM,EAAKhE,MAAM8F,YAA5D,gBACA,4BAAQlD,UAAU,gBAAgBoB,QAAS,SAACC,GAAD,OAAO,EAAK0U,eAAvD,uB,GAxVW9V,aCLjB0d,G,kDACF,WAAYvgB,GAAQ,IAAD,8BACf,cAAMA,IACDiD,MAAQ,CACTkX,eAAU1b,EACV8e,MAAM,IAEV,EAAKiD,aAAe,EAAKA,aAAaxd,KAAlB,gBANL,E,gEASfM,KAAKtD,MAAMxB,KAAKwV,cAChBwF,GAAaS,aAAc3W,KAAKtD,MAAMqa,cAAcH,QAAQ5W,KAAKkd,cAAa,SAACvc,GAAD,OAAOC,QAAQC,IAAIF,Q,mCAMxF9C,GACTmC,KAAKtD,MAAMxB,KAAKgW,cACG,OAAfrT,EAAIuJ,OACNpH,KAAKC,SAAS,CAAC4W,UAAUhZ,EAAI0O,KAAKsK,UAAUoD,MAAMpc,EAAIsY,OAEhC,SAAftY,EAAIuJ,QACTwF,EAAI9K,MAAMjE,EAAI4J,W,+BAGZ,IAIFS,EAJC,SACoBlI,KAAKL,MAAzBkX,EADA,EACAA,UAAWoD,EADX,EACWA,MACZkD,EAAiB,QACHhiB,IAAd0b,IAAyBA,EAAY,IAErCoD,EAAM1c,OAAS,GACxB4f,EAAe5c,KAAK,4BAAI,wBAAIwI,QAAS,EAAG5F,MAAO,CAACuF,UAAU,WAAW,0BAAMpJ,UAAU,aAAhB,mDAEhE,IAAK,IAAIhC,EAAE,EAAEA,EAAE2c,EAAM1c,OAAOD,IACxB4K,EAAM+R,EAAM3c,GACZ6f,EAAe5c,KAAM,kBAAC,GAAD,CAASmY,KAAMxQ,KAI9C,IAFM,IAAMkV,EAAenB,GAAWoB,kBAAkB,iBAAiB,SACrEC,OAAuBniB,EAClBmC,EAAE,EAAGA,EAAE8f,EAAa7f,OAAQD,IAC3B,GAAI8f,EAAa9f,GAAGhC,QAAU0D,OAAO6X,EAAUkE,UAAW,CACtDuC,EAAuBF,EAAa9f,GACpC,MAIR,OAAO,yBAAKgC,UAAU,eACtB,+BACE,+BACE,4BACE,kDACA,4BACE,yBAAKA,UAAU,aACX,0BAAMA,UAAU,OAAOuX,EAAUwB,cAIzC,4BACE,yDACA,4BACE,8BAAU9K,GAAG,aACzB,2BAAOjO,UAAU,aAChB,4BACC,kDACA,wBAAI6D,MAAO,CAACsB,MAAM,KAAlB,sBACA,wBAAItB,MAAO,CAACsB,MAAM,KAAlB,iBAEA0Y,MAKM,4BACE,wCACE,4BAAI,0BAAM7d,UAAU,OAAOge,EAAuBA,EAAqBvL,MAAQ,MAGnF,4BACE,qCACA,4BAAI,yBAAK5O,MAAO,CAACC,QAAQ,OAAOuZ,WAAW,WACzC,0BAAMrd,UAAU,OAAOuX,EAAUyE,aAAezE,EAAUyE,aAAe,KACzE,0BAAMhc,UAAU,YAAY6D,MAAO,CAACuZ,YAAY,KAAhD,sDAGJ,4BACE,qEACE,4BAAI,8BAAUrgB,IAAI,YAAYyM,KAAK,IAAIiU,KAAK,MAAMC,UAAU,MAAMV,UAAQ,EAACnP,aAAc0J,EAAUkD,WAAYlD,EAAUkD,aAE7H,4BACE,yCACA,4BACE,yBAAKza,UAAU,aACX,0BAAMA,UAAU,OAAOuX,EAAU0G,aAIzC,4BACE,sCACA,4BACE,yBAAKje,UAAU,aACX,0BAAMA,UAAU,OAAOuX,EAAU2G,QAIzC,4BACE,wDACA,4BACE,yBAAKle,UAAU,aACX,0BAAMA,UAAU,OAAOuX,EAAU4G,cAMnD,yBAAKne,UAAU,oCAAmC,uBAAGA,UAAU,QACrD,4BAAQA,UAAU,gBAAgBoB,QAAS,kBAAM,EAAKhE,MAAMxB,KAAKqP,UAAU,EAAK7N,MAAMwH,SAAtF,uB,GApHc3E,aA6HpBme,G,kDACL,WAAYhhB,GAAQ,IAAD,8BAClB,cAAMA,IACDiD,MAAQ,CACZic,OAAO,KAHU,E,qDAMT,IACFlD,EAAQ1Y,KAAKtD,MAAbgc,KACA6B,EAA+B7B,EAA/B6B,SAAUC,EAAqB9B,EAArB8B,SAAUmD,EAAWjF,EAAXiF,QAC3B,OAAO,4BACN,4BAAKpD,GACL,4BAAKlY,IAAOnF,iBAAiBsd,IAC7B,4BAAKmD,GAAWA,EAAQpgB,OAAS,EAAIogB,EAAQ9C,cAAgB,S,GAb1Ctb,aAiBP0d,MC5ITW,G,kDACF,WAAYlhB,GAAQ,IAAD,8BACf,cAAMA,IACDiD,MAAQ,CACTkX,eAAU1b,EACV8e,MAAM,IAEV,EAAKiD,aAAe,EAAKA,aAAaxd,KAAlB,gBANL,E,gEAQE,IAAD,OAChBM,KAAKtD,MAAMxB,KAAKwV,cAChBwF,GAAa2H,iBAAkB7d,KAAKtD,MAAMqa,cAAc/W,KAAKkd,cAAa,SAACvc,GAAD,OAAO,EAAKjE,MAAMxB,KAAKgW,mB,mCAExFrT,GACTmC,KAAKtD,MAAMxB,KAAKgW,cACG,OAAfrT,EAAIuJ,OACJpH,KAAKC,SAAS,CAAC4W,UAAUhZ,EAAI0O,KAAKsK,UAAUoD,MAAMpc,EAAIsY,OAElC,SAAftY,EAAIuJ,QACTwF,EAAI9K,MAAMjE,EAAI4J,W,+BAGb,IAIDS,EAJA,SACqBlI,KAAKL,MAAzBkX,EADD,EACCA,UAAWoD,EADZ,EACYA,MACZkD,EAAiB,QACHhiB,IAAd0b,IAAyBA,EAAY,IAErCoD,EAAM1c,OAAS,GACxB4f,EAAe5c,KAAK,4BAAI,wBAAIwI,QAAS,EAAG5F,MAAO,CAACuF,UAAU,WAAW,0BAAMpJ,UAAU,aAAhB,mDAEhE,IAAK,IAAIhC,EAAE,EAAEA,EAAE2c,EAAM1c,OAAOD,IACxB4K,EAAM+R,EAAM3c,GACZ6f,EAAe5c,KAAM,kBAAC,GAAD,CAASmY,KAAMxQ,KAExC,OAAO,yBAAK5I,UAAU,eACtB,+BACE,+BACE,4BACE,kDACA,4BACE,yBAAKA,UAAU,aACX,0BAAMA,UAAU,OAAOuX,EAAUwB,cAIzC,4BACE,yDACA,4BACE,8BAAU9K,GAAG,aACzB,2BAAOjO,UAAU,aAChB,4BACC,kDACA,wBAAI6D,MAAO,CAACsB,MAAM,KAAlB,sBACA,wBAAItB,MAAO,CAACsB,MAAM,KAAlB,iBAEA0Y,MAKM,4BACE,wCACE,4BAAI,0BAAM7d,UAAU,OAAOuX,EAAUiH,cAGzC,4BACE,qCACA,4BAAI,yBAAK3a,MAAO,CAACC,QAAQ,OAAOuZ,WAAW,WACzC,0BAAMrd,UAAU,OAAOuX,EAAUyE,aAAezE,EAAUyE,aAAe,KACzE,0BAAMhc,UAAU,YAAY6D,MAAO,CAACuZ,YAAY,KAAhD,sDAGJ,4BACE,4CACE,4BAAI,8BAAUrgB,IAAI,YAAYyM,KAAK,IAAIiU,KAAK,MAAMC,UAAU,MAAMV,UAAQ,EAACnP,aAAc0J,EAAUkD,WAAYlD,EAAUkD,eAIvI,yBAAKza,UAAU,oCAAmC,uBAAGA,UAAU,QACrD,4BAAQA,UAAU,gBAAgBoB,QAAS,kBAAM,EAAKhE,MAAMxB,KAAKqP,UAAU,EAAK7N,MAAMwH,SAAtF,uB,GA/EkB3E,aAoFxBme,G,kDACL,WAAYhhB,GAAQ,IAAD,8BAClB,cAAMA,IACDiD,MAAQ,CACZic,OAAO,KAHU,E,qDAMT,IACFlD,EAAQ1Y,KAAKtD,MAAbgc,KACA6B,EAA+B7B,EAA/B6B,SAAUC,EAAqB9B,EAArB8B,SAAUmD,EAAWjF,EAAXiF,QAC3B,OAAO,4BACN,4BAAKpD,GACL,4BAAKlY,IAAOnF,iBAAiBsd,IAC7B,4BAAKmD,GAAWA,EAAQpgB,OAAS,EAAIogB,EAAQ9C,cAAgB,S,GAb1Ctb,aAiBPqe,MCQA,O,6FA5GN1P,EAAKV,EAAMC,GACZ,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIW,KAAKJ,EACVR,EAASE,OAAOU,EAAEJ,EAAKI,IAE3B,OAAOT,EAAKC,KAAK,gBAAgBJ,GAC5BK,MAAK,SAAUlQ,GACR2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,6BAIfuR,EAAKV,EAAMC,GACd,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIW,KAAKJ,EACVR,EAASE,OAAOU,EAAEJ,EAAKI,IAI3B,OADIZ,EAASE,OAAO,aAAa,QAC1BC,EAAKC,KAAK,kBAAkBJ,GAC9BK,MAAK,SAAUlQ,GACR2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,qCAIPohB,EAAYvQ,EAAMC,GAC7B,IAAIC,EAAW,IAAIC,SAEnB,OADAD,EAASE,OAAO,cAAcmQ,GACvBlQ,EAAKC,KAAK,0BAA0BJ,GAAUK,MAAK,SAAUlQ,GAC5D2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,qCAIHqhB,EAAUxQ,EAAMC,GAC3B,IAAIC,EAAW,IAAIC,SAEnB,OADAD,EAASE,OAAO,YAAYoQ,GACrBnQ,EAAKC,KAAK,uBAAuBJ,GAAUK,MAAK,SAAUlQ,GACzD2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,yCAICuR,EAAKV,EAAMC,GAC1B,IAAIC,EAAW,IAAIC,SAGnB,OAFAD,EAASE,OAAO,YAAYM,EAAK8P,WACjCtQ,EAASE,OAAO,UAAUM,EAAKuK,SACxB5K,EAAKC,KAAK,2BAA2BJ,GAAUK,MAAK,SAAUlQ,GAC7D2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,6BAIXshB,EAAWzQ,EAAMC,GACpB,IAAIC,EAAW,IAAIC,SAEnB,OADAD,EAASE,OAAO,aAAaqQ,GACtBpQ,EAAKC,KAAK,kBAAkBJ,GAAUK,MAAK,SAAUlQ,GACpD2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,2BAIbqhB,EAAUxQ,EAAMC,GACjB,IAAIC,EAAW,IAAIC,SAEnB,OADAD,EAASE,OAAO,YAAYoQ,GACrBnQ,EAAKC,KAAK,gBAAgBJ,GAAUK,MAAK,SAAUlQ,GAClD2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,U,MC0lBP,O,yGAlsBMuR,EAAKV,EAAMC,GACxB,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIW,KAAKJ,EACVR,EAASE,OAAOU,EAAEJ,EAAKI,IAE3B,OAAOT,EAAKC,KAAK,0BAA0BJ,GACtCK,MAAK,SAAUlQ,GACR2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,+BAUbuR,EAAKV,EAAMC,GAChB,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIW,KAAKJ,EACVR,EAASE,OAAOU,EAAEJ,EAAKI,IAE3B,OAAOT,EAAKC,KAAK,kBAAkBJ,GAC9BK,MAAK,SAAUlQ,GACR2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,+BAUbuR,EAAKV,EAAMC,GAChB,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIW,KAAKJ,EACVR,EAASE,OAAOU,EAAEJ,EAAKI,IAE3B,OAAOT,EAAKC,KAAK,kBAAkBJ,GAC9BK,MAAK,SAAUlQ,GACR2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,+BAUbuR,EAAKV,EAAMC,GAChB,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIW,KAAKJ,EACVR,EAASE,OAAOU,EAAEJ,EAAKI,IAE3B,OAAOT,EAAKC,KAAK,kBAAkBJ,GAC9BK,MAAK,SAAUlQ,GACR2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,2BAUjBuR,EAAKV,EAAMC,GACZ,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIW,KAAKJ,EACVR,EAASE,OAAOU,EAAEJ,EAAKI,IAE3B,OAAOT,EAAKC,KAAK,cAAcJ,GAC1BK,MAAK,SAAUlQ,GACR2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,wCAUJuR,EAAKV,EAAMC,GACzB,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIW,KAAKJ,EACVR,EAASE,OAAOU,EAAEJ,EAAKI,IAE3B,OAAOT,EAAKC,KAAK,2BAA2BJ,GACvCK,MAAK,SAAUlQ,GACR2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,yCAUHuR,EAAKV,EAAMC,GAC1B,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIW,KAAKJ,EACVR,EAASE,OAAOU,EAAEJ,EAAKI,IAE3B,OAAOT,EAAKC,KAAK,4BAA4BJ,GACxCK,MAAK,SAAUlQ,GACR2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,sCAUNuR,EAAKV,EAAMC,GACvB,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIW,KAAKJ,EACVR,EAASE,OAAOU,EAAEJ,EAAKI,IAE3B,OAAOT,EAAKC,KAAK,yBAAyBJ,GACrCK,MAAK,SAAUlQ,GACR2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,wCAUJuR,EAAKV,EAAMC,GACzB,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIW,KAAKJ,EACVR,EAASE,OAAOU,EAAEJ,EAAKI,IAE3B,OAAOT,EAAKC,KAAK,2BAA2BJ,GACvCK,MAAK,SAAUlQ,GACR2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,mCAUTuR,EAAKV,EAAMC,GACpB,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIW,KAAKJ,EACVR,EAASE,OAAOU,EAAEJ,EAAKI,IAE3B,OAAOT,EAAKC,KAAK,sBAAsBJ,GAClCK,MAAK,SAAUlQ,GACR2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,0CAUFuR,EAAKV,EAAMC,GAC3B,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIW,KAAKJ,EACVR,EAASE,OAAOU,EAAEJ,EAAKI,IAI3B,OAAOT,EAAKC,KAAK,6BAA6BJ,GACzCK,MAAK,SAAUlQ,GACR2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,wCAUJuR,EAAKV,EAAMC,GACzB,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIW,KAAKJ,EACVR,EAASE,OAAOU,EAAEJ,EAAKI,IAE3B,OAAOT,EAAKC,KAAK,2BAA2BJ,GACvCK,MAAK,SAAUlQ,GACR2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,0CAUFuhB,EAAY1Q,EAAMC,GAClC,IAAIC,EAAW,IAAIC,SAEnB,OADAD,EAASE,OAAO,cAAcsQ,GACvBrQ,EAAKC,KAAK,6BAA6BJ,GAAUK,MAAK,SAAUlQ,GAC/D2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,iCA0BPuR,EAAKV,EAAMC,GAClB,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIW,KAAKJ,EACVR,EAASE,OAAOU,EAAEJ,EAAKI,IAE3B,IAAI6P,EAAM,eAOV,MANsB,eAAlBjQ,EAAKkQ,SACLD,GAAO,MACgB,cAAlBjQ,EAAKkQ,WACVD,GAAO,MAGJtQ,EAAKC,KAAKqQ,EAAIzQ,GAAUK,MAAK,SAAUlQ,GACtC2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,iCAUPuR,EAAKV,EAAMC,GAClB,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIW,KAAKJ,EACNA,EAAKI,IACLZ,EAASE,OAAOU,EAAEJ,EAAKI,IAK/B,OAAOT,EAAKC,KAHF,oBAGWJ,GAAUK,MAAK,SAAUlQ,GACtC2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,sCASF6Q,EAAMC,GAClB,IAAIC,EAAW,IAAIC,SACbO,EAAO,GACb,IAAK,IAAII,KAAKJ,EACNA,EAAKI,IACLZ,EAASE,OAAOU,EAAEJ,EAAKI,IAE/B,OAAOT,EAAKC,KAAK,kBAAkBJ,GAAUK,MAAK,SAAUlQ,GACpD2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,qCAUHuR,EAAKV,EAAMC,GACtB,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIW,KAAKJ,EACNA,EAAKI,IACLZ,EAASE,OAAOU,EAAEJ,EAAKI,IAE/B,OAAOT,EAAKC,KAAK,aAAaJ,GAAUK,MAAK,SAAUlQ,GAC/C2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,oCAUJuR,EAAKV,EAAMC,GACrB,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIW,KAAKJ,EACNA,EAAKI,IACLZ,EAASE,OAAOU,EAAEJ,EAAKI,IAE/B,OAAOT,EAAKC,KAAK,sBAAsBJ,GAAUK,MAAK,SAAUlQ,GACxD2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,+BAUTuR,EAAKV,EAAMC,GAChB,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIW,KAAKJ,EACNA,EAAKI,IACLZ,EAASE,OAAOU,EAAEJ,EAAKI,IAE/B,OAAOT,EAAKC,KAAK,iBAAiBJ,GAAUK,MAAK,SAAUlQ,GACnD2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,sCAUFuR,EAAKV,EAAMC,GACvB,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIW,KAAKJ,EACNA,EAAKI,IACLZ,EAASE,OAAOU,EAAEJ,EAAKI,IAE/B,OAAOT,EAAKC,KAAK,wBAAwBJ,GAAUK,MAAK,SAAUlQ,GAC1D2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,iCAUPuR,EAAKV,EAAMC,GAClB,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIW,KAAKJ,EACNA,EAAKI,IACLZ,EAASE,OAAOU,EAAEJ,EAAKI,IAE/B,OAAOT,EAAKC,KAAK,mBAAmBJ,GAAUK,MAAK,SAAUlQ,GACrD2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,uCAUDuR,EAAKV,EAAMC,GACxB,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIW,KAAKJ,EACVR,EAASE,OAAOU,EAAEJ,EAAKI,IAE3B,OAAOT,EAAKC,KAAK,0BAA0BJ,GACtCK,MAAK,SAAUlQ,GACR2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,uCAULuR,EAAKV,EAAMC,GACxB,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIW,KAAKJ,EACVR,EAASE,OAAOU,EAAEJ,EAAKI,IAE3B,OAAOT,EAAKC,KAAK,0BAA0BJ,GACtCK,MAAK,SAAUlQ,GACR2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,yCAUHuR,EAAKV,EAAMC,GAC1B,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIW,KAAKJ,EACVR,EAASE,OAAOU,EAAEJ,EAAKI,IAI3B,OAAOT,EAAKC,KAAK,4BAA4BJ,GACxCK,MAAK,SAAUlQ,GACR2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,0CAUF0hB,EAAkB7Q,EAAMC,GACxC,IAAIC,EAAW,IAAIC,SAEnB,OADAD,EAASE,OAAO,mBAAmByQ,GAC5BxQ,EAAKC,KAAK,6BAA6BJ,GAAUK,MAAK,SAAUlQ,GAC/D2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,yCAUC2hB,EAAkB9Q,EAAMC,GACvC,IAAIC,EAAW,IAAIC,SAEnB,OADAD,EAASE,OAAO,oBAAoB0Q,GAC7BzQ,EAAKC,KAAK,4BAA4BJ,GAAUK,MAAK,SAAUlQ,GAC9D2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,+CAUOuR,EAAKV,EAAMC,GAChC,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIW,KAAKJ,EACVR,EAASE,OAAOU,EAAEJ,EAAKI,IAE3B,OAAOT,EAAKC,KAAK,kCAAkCJ,GAC9CK,MAAK,SAAUlQ,GACR2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,uCAULuR,EAAKV,EAAMC,GACxB,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIW,KAAKJ,EACVR,EAASE,OAAOU,EAAEJ,EAAKI,IAE3B,OAAOT,EAAKC,KAAK,0BAA0BJ,GACtCK,MAAK,SAAUlQ,GACR2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,yCAUHuR,EAAKV,EAAMC,GAC1B,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIW,KAAKJ,EACVR,EAASE,OAAOU,EAAEJ,EAAKI,IAE3B,OAAOT,EAAKC,KAAK,4BAA4BJ,GACxCK,MAAK,SAAUlQ,GACR2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,Q,yCAUHuR,EAAKV,EAAMC,GAC1B,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAIW,KAAKJ,EACVR,EAASE,OAAOU,EAAEJ,EAAKI,IAE3B,OAAOT,EAAKC,KAAK,4BAA4BJ,GACxCK,MAAK,SAAUlQ,GACR2P,GACAA,EAAM3P,EAAI0O,SAGjByB,OAAM,SAAUrR,GACT8Q,GACAA,EAAM9Q,U,gBCxmBX,O,4MAtFX4P,KAAO,G,EACPf,IAAM,G,sDAMEe,GAEJ,IADA,IAAIrE,EACK5K,EAAE,EAAGA,EAAEiP,EAAKhP,OAAQD,IACzB4K,EAAMqE,EAAKjP,GACN0C,KAAKwL,IAAItD,EAAIqW,aACdve,KAAKwL,IAAItD,EAAIqW,WAAa,IAC9Bve,KAAKwL,IAAItD,EAAIqW,WAAWhe,KAAK2H,K,+BAS5BqW,EAAUC,GACf,IAAIriB,OAAMhB,EACJsjB,EAAMze,KAAKwL,IAAI+S,GACrB,GAAIE,GAAOA,EAAIlhB,OAAS,EAAxB,CACI,IAAK,IAAID,EAAE,EAAEA,EAAEmhB,EAAIlhB,OAAOD,IAClBmhB,EAAInhB,GAAG6e,OAASqC,IAChBriB,EAAMsiB,EAAInhB,GAAGhC,OAKzB,OAAOa,K,kCAYCoiB,EAAWG,EAAUhZ,EAAUiZ,EAAeC,EAASC,GAC1DH,IAAUA,EAAW,QACrBhZ,IAAUA,EAAW,YAC1B,IAAIzD,EAAO,GACP2c,IACKC,IAAUA,EAAW,OAC1B5c,EAAK1B,KAAM,4BAAQjF,MAAM,MAAMwF,IAAKxC,KAAKyC,UAAY8d,KAEzD,IAAMJ,EAAMze,KAAKwL,IAAI+S,GACT,OAARE,QAAwBtjB,IAARsjB,IAAsB,oBAAHA,EAAM,IAC7C,IAAK,IAAInhB,EAAE,EAAGA,EAAEmhB,EAAIlhB,OAAQD,IACxB2E,EAAK1B,KAAM,4BAAQjF,MAAOmjB,EAAInhB,GAAGohB,GAAW5d,IAAKxC,KAAKyC,SAAU+d,SAAUL,EAAInhB,GAAGohB,KAAc1f,OAAO2f,IAAiBF,EAAInhB,GAAGoI,KAElI,OAAOzD,I,wCASOsc,EAAWG,EAAUhZ,GAC9BgZ,IAAUA,EAAW,QACrBhZ,IAAUA,EAAW,YAG1B,IAFA,IAAIvJ,EAAM,GACJsiB,EAAMze,KAAKwL,IAAI+S,GACZjhB,EAAE,EAAGA,EAAEmhB,EAAIlhB,OAAQD,IACxBnB,EAAIoE,KAAM,CAACwR,MAAM0M,EAAInhB,GAAGoI,GAAUpK,MAAMmjB,EAAInhB,GAAGohB,KAEnD,OAAOviB,I,kCAOCoiB,GACR,OAAOve,KAAKwL,IAAI+S,O,GApFChf,cC+MVwf,G,kDA1MX,WAAYriB,GAAQ,IAAD,8BACf,cAAMA,IACDiD,MAAQ,CACTwZ,aAAY,GAEtB,EAAK6F,YAAc,EAAKA,YAAYtf,KAAjB,gBACnB,EAAK2Z,gBAAkB,EAAKA,gBAAgB3Z,KAArB,gBACvB,EAAKuf,aAAe,EAAKA,aAAavf,KAAlB,gBAPC,E,gEAUrBM,KAAK5D,KAAKkQ,OAAOD,U,oCAaH,IACPsL,EAAc3X,KAAKtD,MAAnBib,WACD,GAAK3X,KAAKqZ,kBAAV,CACN,IAAI6F,EAAQ7c,IAAOpG,UAAU+D,MAC7Bkf,EAAMnJ,QAAU4B,EAAa,OAAS,MAChC/W,QAAQC,IAAIqe,GACZC,GAAaC,KAAKF,EAAMlf,KAAKif,cAAa,SAACtiB,GAAD,OAASiQ,EAAI9K,MAAMnF,EAAI8K,e,wCAKrD,IACLkQ,EAAc3X,KAAKtD,MAAnBib,WAGTsD,EAAW,GAGX9T,EAASnH,KAAK5D,KAAKkQ,OAAOhR,MAC1B6f,EAAUlF,EAAWlP,MAAMI,GAE/B,GADA8T,EAASoE,SAAU,GACdlE,EAAQ/T,OAKZ,OAJAwF,EAAI9K,MAAMqZ,EAAQ9T,QAClB4T,EAASoE,SAAU,EACnBrf,KAAKC,SAASgb,GACdjb,KAAK5D,KAAKkQ,OAAOD,SACV,EAMR,IAFAlF,EAASnH,KAAK5D,KAAKkjB,SAAShkB,OAEjBiC,OAAS,IACnB0d,EAASI,WAAY,EACjBlU,EAAO5J,OAAS,GAAK4J,EAAO5J,OAAS,IAKxC,OAJAqP,EAAI9K,MAAM,iGACVmZ,EAASI,WAAY,EACrBrb,KAAKC,SAASgb,GACdjb,KAAK5D,KAAKkjB,SAASjT,SACZ,EAIT,IAAKsL,GAAeA,GAAe3X,KAAK5D,KAAKgQ,GAAG9Q,MAAMiC,OAAS,EAAK,CAK1D,GAHA4J,EAASnH,KAAK5D,KAAKgQ,GAAG9Q,MACtB6f,EAAUlF,EAAWjP,MAAMG,GAC3B8T,EAASsE,SAAU,GACdpE,EAAQ/T,OAIT,OAHAwF,EAAI9K,MAAMqZ,EAAQ9T,QAClB4T,EAASsE,SAAU,EACnBvf,KAAKC,SAASgb,IACP,EAGX,GAAI9T,IADUnH,KAAK5D,KAAKojB,MAAMlkB,MAK1B,OAHAsR,EAAI9K,MAAM,qFACVmZ,EAASsE,SAAU,EACnBvf,KAAKC,SAASgb,IACP,EAQf,OAHA9T,EAASnH,KAAK5D,KAAKqjB,UAAUnkB,MAC7B6f,EAAUlF,EAAWnP,SAASK,GAC9B8T,EAASyE,YAAa,EACjBvE,EAAQ/T,QAObpH,KAAKC,SAASgb,IACP,IAPHrO,EAAI9K,MAAMqZ,EAAQ9T,QAClB4T,EAASyE,YAAa,EACtB1f,KAAKC,SAASgb,IACP,K,mCAULpd,GACa,OAAfA,EAAIuJ,QACJwF,EAAIjL,GAAG9D,EAAI4J,SAIpBzH,KAAKtD,MAAM8F,WAEFoK,EAAI9K,MAAMjE,EAAI4J,W,+BAGZ,IAAD,OACNkY,EAAkB3f,KAAKtD,MAAvBijB,eACAA,IAAgBA,EAAiB,KAClCA,EAAeC,UAAyC,MAA5BD,EAAeC,UAAgD,MAA5BD,EAAeC,WACjFD,EAAeC,SAAuC,MAA5BD,EAAeC,SAAmB,IAAM,KAEnEhf,QAAQC,IAAI,kBACZD,QAAQC,IAAI8e,GACZ,IAAME,EAAwB5D,GAAW6D,YAAY,aAAa,KAAK,KAAKH,EAAenT,gBACrFuT,EAAoB9D,GAAW6D,YAAY,cAAc,KAAK,KAAKH,EAAeC,UAClF,OAAO,yBAAKtgB,UAAU,eAC3B,+BACC,+BACC,4BACC,sCACC,0BAAMA,UAAU,aAAhB,MACD,4BACA,yBAAKA,UAAU,aACd,2BAAOjD,IAAI,SAASE,KAAK,OAAO+C,UAAU,WAAWyN,YAAY,+DAAkBuP,cAAoCnhB,IAA1BwkB,EAAerT,OAC3GkQ,UAAU,KAAKrP,aAAcwS,EAAerT,YAI/C,4BACC,yCAEA,4BACA,yBAAKhN,UAAU,aACd,2BAAOjD,IAAI,WAAWE,KAAK,OAAO+C,UAAU,WAAWyN,YAAY,2CAClEyP,UAAU,KAAKrP,aAAcwS,EAAeL,cAI/C,4BACC,yCACC,0BAAMhgB,UAAU,aAAhB,MAED,4BACA,yBAAKA,UAAU,aACd,4BAAQjD,IAAI,iBAAiBiD,UAAU,YACrCugB,MAKJ,4BACC,uCACC,0BAAMvgB,UAAU,aAAhB,MAED,4BACA,yBAAKA,UAAU,aACd,2BAAO/C,KAAK,WAAW+C,UAAU,WAAWjD,IAAI,KAAK0Q,YAAY,kHACjE,2BAAOxQ,KAAK,WAAW+C,UAAU,WAAWjD,IAAI,QAAQ0Q,YAAY,eAAK5J,MAAO,CAAC2Q,UAAW,QAI9F,4BACC,oCACC,0BAAMxU,UAAU,aAAhB,MAED,4BACA,yBAAKA,UAAU,aACd,2BAAOjD,IAAI,YAAYE,KAAK,OAAO+C,UAAU,WAAWyN,YAAY,GAAGyP,UAAW,IAAKrP,aAAcwS,EAAeF,eAItH,4BACC,uCACC,0BAAMngB,UAAU,aAAhB,MAED,4BACA,yBAAKA,UAAU,aACd,4BAAQjD,IAAI,WAAWiD,UAAU,YAC/BygB,QAON,yBAAKzgB,UAAU,oCAAmC,uBAAGA,UAAU,QAC9D,4BAAQA,UAAU,gBAAgBoB,QAAS,kBAAM,EAAKhE,MAAM8F,YAA5D,gBACA,4BAAQlD,UAAU,gBAAgBoB,QAAS,SAACC,GAAD,OAAO,EAAKqe,gBAAvD,uB,GAtMkBzf,aCGhBygB,G,kDACF,WAAYtjB,GAAQ,IAAD,8BACf,cAAMA,IACDiD,MAAQ,CACTiI,SAAS,GACTD,QAAQ,GACRG,WAAW,IACX6M,UAAU,EACVC,gBAAgB,EACzBC,aAAa,EACboL,QAAQ,IAEH,EAAKnL,YAAc,EAAKA,YAAYpV,KAAjB,gBACnB,EAAKqV,aAAe,EAAKA,aAAarV,KAAlB,gBACpB,EAAKsV,gBAAkB,EAAKA,gBAAgBtV,KAArB,gBACvB,EAAK+F,sBAAwB,EAAKA,sBAAsB/F,KAA3B,gBAC7B,EAAK8V,WAAa,EAAKA,WAAW9V,KAAhB,gBAClB,EAAK2V,WAAa,EAAKA,WAAW3V,KAAhB,gBAClB,EAAKwgB,sBAAwB,EAAKA,sBAAsBxgB,KAA3B,gBAC7B,EAAKygB,uBAAyB,EAAKA,uBAAuBzgB,KAA5B,gBAlBf,E,gEAqBfiW,KAAQC,YAAY,MACpBD,KAAQE,WAAW,SACnB7V,KAAK8U,YAAY,K,kCAQZ/U,EAAKiW,GAAa,IACtBxJ,EAAkBxM,KAAK5D,KAAvBoQ,oBACMrR,IAAT4E,IAAoBA,EAAOC,KAAKL,MAAMgV,WAC1C3U,KAAKtD,MAAMxB,KAAKwV,cAChB,IAAIxC,EAAO,CACVnO,KAAKA,GAEuB,QAAzByM,EAAelR,QACT4S,EAAK1B,eAAiBA,EAAelR,YAE5BH,IAAf6a,IACH9H,EAAK4H,OAASE,GACfhW,KAAKC,SAAS,CAACggB,QAAQ/R,IACvBiR,GAAaiB,SAASlS,EAAKlO,KAAK+U,cAAa,SAACpY,GAAD,OAASiQ,EAAI9K,MAAMnF,EAAI8K,c,4CAK5C9B,EAAKhF,EAAEjE,GACzB,IAAIwR,EAAO,GACXA,EAAK5B,OAAS3G,EAAK2G,OACnB4B,EAAK0R,SAA6B,MAAlBja,EAAKia,SAAmB,IAAM,IAC9C1R,EAAK6H,QAAU,OACfoJ,GAAaC,KAAKlR,EAAKlO,KAAKmgB,wBAAwB,SAACxjB,GAAD,OAASiQ,EAAI9K,MAAMnF,EAAI8K,c,mCAM3EzH,KAAK8U,YAAY9U,KAAKL,MAAMgV,UAAW3U,KAAK5D,KAAK0Z,OAAOxa,S,mCAK9C,IAAD,OAELqkB,EACA3f,KAAKL,MADLggB,eAGJ3f,KAAKtD,MAAMxB,KAAKoP,UADC,cAGb,kBAAC,GAAD,CAASpG,MAHI,cAGahJ,KAAM8E,KAAKtD,MAAMxB,KAAMyc,gBAA+Bxc,IAAnBwkB,EAA8BA,eAAgBA,EAAgBnd,QAAS,SAAC7B,GAAD,OAAO,EAAK2U,WAHnI,kBAIT,CAAC7Q,MAAM,IAAKC,OAAO,IAAKL,qBAAoB,EAAOC,mBAAmB,iBAAiB,KAAK,Q,mCAU3FzG,GAET,GADAmC,KAAKtD,MAAMxB,KAAKgW,cACC,OAAbrT,EAAIuJ,OAAe,CAC5B,IAAMgP,EAAYvY,EAAI0O,KACP5E,EAAU,CACZ,CAACtM,KAAK,SAASuN,OAAO,UAAUyN,SAAS,IAAI9E,UAAS,EAClDjM,SAAU,CAAE/I,KAAM2I,EAAcK,QAAS,CACrCC,SAAS3H,EAAIsY,KAAKzQ,SAAS,SAC3BD,sBAAsBzF,KAAKyF,yBAGlC,CAACpK,KAAK,WAAWuN,OAAO,YAAanE,MAAM,IAAK+D,MAAM,SAAS+I,UAAS,GACxE,CAAClW,KAAK,YAAYuN,OAAO,aAAanE,MAAM,IAAI+D,MAAM,SAAS+I,UAAS,GACpF,CAAClW,KAAK,aAAauN,OAAO,cAAcnE,MAAM,IAAI+D,MAAM,SAAS+I,UAAS,GAC1E,CAAClW,KAAK,YAAYuN,OAAO,eAAenE,MAAM,IAAI+D,MAAM,SAAS+I,UAAS,GAC9D,CAAClW,KAAK,WAAWuN,OAAO,WAAWnE,MAAM,IAAI+D,MAAM,SAAS+I,UAAS,EAClEjM,SAAU,CAAE/I,KAAM8jB,GAAkB9a,QAAS,CAAEC,SAAS3H,EAAIsY,KAAK+J,sBAAsBlgB,KAAKkgB,0BAGpGlgB,KAAKC,SAAS,CAAC2H,SAAS/J,EAAIsY,KAAKxB,UAAUyB,EAAUrW,KAAK6U,gBAAgBwB,EAAUjW,WAAW0U,aAAauB,EAAUtW,UAAUwgB,WAAU,EAAK3Y,QAAQA,QACjI,SAAf9J,EAAIuJ,QACXwF,EAAI9K,MAAMjE,EAAI4J,W,6CAMC5J,GACA,OAAfA,EAAIuJ,QACJwF,EAAIjL,GAAG9D,EAAI4J,SACXzH,KAAK8U,YAAY,IAEG,SAAfjX,EAAIuJ,QACTwF,EAAI9K,MAAMjE,EAAI4J,W,sCAMN1H,GACZC,KAAK8U,YAAY/U,EAAMC,KAAKL,MAAMqW,c,4CAQhBrQ,EAAKhF,EAAEjE,GAAQ,IAAD,OAChC,IAEIsD,KAAKtD,MAAMxB,KAAKoP,UADC,cAGb,kBAAC,GAAD,CAASpG,MAHI,cAGahJ,KAAM8E,KAAKtD,MAAMxB,KAAMyc,gBAAqBxc,IAATwK,EAAoBga,eAAgBha,EAAMnD,QAAS,SAAC7B,GAAD,OAAO,EAAK2U,WAH/G,kBAIT,CAAC7Q,MAAM,IAAKC,OAAO,IAAKL,qBAAoB,EAAOC,mBAAmB,iBAAiB,KAAK,MAEtG,MAAO3H,GACLiE,QAAQC,IAAIlE,M,iCAOTuH,GACPlE,KAAK8U,YAAY,GACjB9U,KAAKC,SAAS,CAACwX,qBAAgBtc,EAAWuc,sBAAiBvc,IAC3D6E,KAAKtD,MAAMxB,KAAKqP,UAAUrG,K,+BAEpB,IAAD,SAIPlE,KAAKL,MAFCiI,EAFC,EAEDA,SAAUD,EAFT,EAESA,QAASsY,EAFlB,EAEkBA,QACnBtL,EAHC,EAGDA,UAAWC,EAHV,EAGUA,gBAAiBC,EAH3B,EAG2BA,aAElC0L,EAAiBtE,GAAW6D,YAAY,aAAa,KAAK,KAAKG,EAAQzT,gBAAe,GACpF,OAAO,yBAAKlN,UAAU,eAAc,yBAAKA,UAAU,mBAC/C,yBAAKA,UAAU,2CAEf,yBAAKA,UAAU,iBACX,wBAAIA,UAAU,OAAd,oBAGJ,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,wCAAuC,yBAAK0F,MAAM,gBAC5E,4BACC,4BACA,0BAAM1F,UAAU,OAAhB,cACA,4BAAQjD,IAAI,iBAAiBiD,UAAU,MAAM6D,MAAO,CAAC2U,MAAM,OAAOrT,MAAO,IAAIC,OAAQ,GAAGpB,WAAY,GAAGkd,QAAQ,OAAOtO,OAAO,sBAC3HqO,IAGF,4BACA,0BAAMjhB,UAAU,OAAhB,kBACA,2BAAOjD,IAAI,SAASE,KAAK,OAAO+C,UAAU,eAAe6D,MAAO,CAACsB,MAAM,KAAM0I,aAAc8S,EAAQnK,WAGrF,uBAAG9L,KAAK,SAAS1K,UAAU,gBAAgBoB,QAAS,kBAAM,EAAK8U,eAA/D,kBAGJ,uBAAGxL,KAAK,SAAS1K,UAAU,uBAAuBoB,QAASV,KAAKqV,cAGpE,yBAAK/V,UAAU,kBACX,yCAAesV,IAEnB,kBAAC,IAAD,CAAMvY,IAAI,OACNkQ,KAAM3E,EAAUoQ,cAAe,CAACC,WAAW,GAC3CtQ,QAASA,EACTuQ,SAAS,EAAOC,SAAS,IAE7B,yBAAK7Y,UAAU,4BACX,8BACA,kBAAC,EAAD,CAAYjD,IAAK,OACD0D,KAAM4U,EACNxU,WAAYyU,EACZxU,QAASyU,EACTpV,YAAaO,KAAKgV,0B,GAxMxBzV,aAmNpB8gB,G,WACF,WAAY3jB,GAAQ,0BAC4BA,EAAM2I,WAAWC,SAASC,QAA9D2a,EADO,EACPA,sBAAuB1a,EADhB,EACgBA,SAC3BG,OAAOxK,EACPqK,GAAYA,EAASjI,OAAS,IAClCoI,EAAOH,EAAS9I,EAAMkJ,cACTzK,IAATwK,IAAoBA,EAAO,IAC/B,IAAIR,EAAKvJ,SAASwJ,cAAc,KACtCD,EAAG7F,UAAY,kDACT6F,EAAGU,UAA8B,MAAlBF,EAAKia,SAAmB,eAAO,2BAC9Cza,EAAGjB,MAA0B,MAAlByB,EAAKia,SAAmB,eAAO,2BAC1Cza,EAAGW,iBAAiB,SAAQ,SAACnF,GAAD,OAAOuf,EAAsBva,EAAKhF,EAAEjE,MAChEsD,KAAKmF,GAAKA,E,yDAGV,OAAOnF,KAAKmF,O,KAGL6a,MCvOTS,G,kDACF,WAAY/jB,GAAQ,IAAD,8BACf,cAAMA,IACDiD,MAAQ,CACTiI,SAAS,GACTD,QAAQ,GACRG,WAAW,IACX6M,UAAU,EACVC,gBAAgB,EAChBC,aAAa,EACbqC,YAAW,EACXH,cAAc,GACdC,mBAAmB,GAC5BF,iBAAiB,EACjB4J,wBAAuB,EACdC,oBAAmB,EAC5BC,wBAAmBzlB,EACnB0lB,yBAAoB1lB,EACpB2lB,uBAAsB,EACtBC,mBAAkB,EAClBC,uBAAkB7lB,EAClB8lB,wBAAmB9lB,GAEd,EAAK2Z,YAAc,EAAKA,YAAYpV,KAAjB,gBACnB,EAAKwhB,mBAAqB,EAAKA,mBAAmBxhB,KAAxB,gBAChC,EAAKyhB,kBAAoB,EAAKA,kBAAkBzhB,KAAvB,gBACzB,EAAK0hB,mBAAqB,EAAKA,mBAAmB1hB,KAAxB,gBAC1B,EAAK2hB,0BAA4B,EAAKA,0BAA0B3hB,KAA/B,gBACjC,EAAK4hB,wBAA0B,EAAKA,wBAAwB5hB,KAA7B,gBAC/B,EAAK6hB,2BAA6B,EAAKA,2BAA2B7hB,KAAhC,gBAClC,EAAK8hB,2BAA6B,EAAKA,2BAA2B9hB,KAAhC,gBA7Bb,E,gEAgCfiW,KAAQC,YAAY,MACpBD,KAAQE,WAAW,SACzBsJ,GAAasC,mBAAmB,GAAGzhB,KAAKuhB,4BAA2B,SAAC5kB,GAAD,OAASiQ,EAAI9K,MAAMnF,EAAI8K,YACpFzH,KAAK8U,gB,oCASL9U,KAAKtD,MAAMxB,KAAKwV,aAAY,GAC5ByO,GAAauC,WAAW,GAAG1hB,KAAKkhB,oBAAmB,SAACvkB,GAAD,OAASiQ,EAAI9K,MAAMnF,EAAI8K,c,wCAQ/D9B,EAAKhF,EAAEjE,GAClB,IAAIwiB,EAAQ,GACZA,EAAMyC,OAAShc,EAAKic,WACpB1C,EAAMd,SAA+B,OAApBzY,EAAKkc,WAAsB,YAAc,aAC1D1C,GAAa2C,WAAW5C,EAAMlf,KAAKohB,oBAAmB,SAACzkB,GAAD,OAASiQ,EAAI9K,MAAMnF,EAAI8K,c,yCAS9D5J,GAEf,GADAmC,KAAKtD,MAAMxB,KAAKgW,cACG,OAAfrT,EAAIuJ,OAAiB,CAE9B,IADA,IAAIzB,EACKrI,EAAE,EAAGA,EAAEO,EAAIsY,KAAK5Y,OAAQD,KAChCqI,EAAO9H,EAAIsY,KAAK7Y,IACXykB,SAA+B,YAApBpc,EAAKic,WAA2B,SAAWjc,EAAKic,WAExD,IAAM7E,EAAO,CACrB,CAAC1hB,KAAK,WAAWuN,OAAO,YAAayN,SAAS,KAC7C,CAAChb,KAAK,OAAOuN,OAAO,YAAanE,MAAM,IAAI+D,MAAM,UACjD,CAACnN,KAAK,SAASuN,OAAO,MAAMnE,MAAM,IAAI+D,MAAM,UAC5C,CAACnN,KAAK,eAAeuN,OAAO,YAAYnE,MAAM,IAAI+D,MAAM,UACxD,CAACnN,KAAK,aAAauN,OAAO,eAAenE,MAAM,IAAI+D,MAAM,SACzDlD,SAAU,CACT/I,KAAMylB,GACLzc,QAAS,CACTC,SAAS3H,EAAIsY,KACbgL,kBAAkBnhB,KAAKmhB,sBAKlBnhB,KAAKC,SAAS,CAAC2H,SAAS/J,EAAIsY,KAAKxO,QAAQoV,QACnB,SAAflf,EAAIuJ,QACXwF,EAAI9K,MAAMjE,EAAI4J,W,iDAOE5J,GAC1B,GAAmB,OAAfA,EAAIuJ,OAAiB,CASf,IART,IAGI+O,EACA3K,EAAM,CAACyW,YAAY,CAACC,WAAW,IAAIC,YAAY,IAAIC,YAAW,GAChEC,aAAa,CAACH,WAAW,IAAIC,YAAY,IAAIC,YAAW,IACpDE,EAAW,CANK,cACC,gBAOL9jB,EAAE,EAAGA,EAAE8jB,EAAS/kB,OAAOiB,IAAK,CAC7C2X,EAAOtY,EAAI0O,KAAK+V,EAAS9jB,IACzB,IAAK,IAAIlB,EAAE,EAAGA,EAAE6Y,EAAK5Y,OAAQD,IACxB,gBAAkB6Y,EAAK7Y,GAAG6e,KAAM3Q,EAAI8W,EAAS9jB,IAAI0jB,WAAa/L,EAAK7Y,GAAGhC,MACjE,iBAAmB6a,EAAK7Y,GAAG6e,KAAM3Q,EAAI8W,EAAS9jB,IAAI2jB,YAAchM,EAAK7Y,GAAGhC,MACxE,gBAAkB6a,EAAK7Y,GAAG6e,OAAM3Q,EAAI8W,EAAS9jB,IAAI4jB,WAA+B,MAAlBjM,EAAK7Y,GAAGhC,OAGjF0E,KAAKC,SAAS,CACb+gB,kBAAkBxV,EAAG,YAAgB0W,WAAWjB,mBAAmBzV,EAAG,YAAgB2W,YAAYpB,kBAAkBvV,EAAG,YAAgB4W,WACtIxB,mBAAmBpV,EAAG,aAAiB0W,WAAWrB,oBAAoBrV,EAAG,aAAiB2W,YAAYxB,mBAAmBnV,EAAG,aAAiB4W,iBAEtH,SAAfvkB,EAAIuJ,QACdwF,EAAI9K,MAAOjE,EAAI4J,W,yCAOK5J,GACI,OAAfA,EAAIuJ,QACJwF,EAAIjL,GAAG,yCACP3B,KAAK8U,YAAY9U,KAAKL,MAAMqW,aACN,SAAfnY,EAAIuJ,QACXwF,EAAI9K,MAAMjE,EAAI4J,W,kDAMI,IACrBiZ,EAA0B1gB,KAAKL,MAA/B+gB,uBACP1gB,KAAKC,SAAS,CAACygB,wBAAwBA,M,gDAMvC,IAAMxS,EAAO7L,IAAOpG,UAAU+D,MACxBnB,EAAI,CAAEtC,KAAK,WAAY2lB,WAAWhU,EAAK0S,mBAAoBuB,YAAYjU,EAAK2S,oBAAqBuB,WAAWlU,EAAKyS,oBACvHxB,GAAaoD,mBAAmB1jB,EAAEmB,KAAKwhB,4BAA2B,SAAC7kB,GAAD,OAASiQ,EAAI9K,MAAMnF,EAAI8K,c,iDAM9D,IACpBqZ,EAAyB9gB,KAAKL,MAA9BmhB,sBACP9gB,KAAKC,SAAS,CAAC6gB,uBAAuBA,M,+CAMtC,IAAM5S,EAAO7L,IAAOpG,UAAU+D,MACxBnB,EAAI,CAAEtC,KAAK,UAAW2lB,WAAWhU,EAAK8S,kBAAmBmB,YAAYjU,EAAK+S,mBAAoBmB,WAAWlU,EAAK6S,mBACpH5B,GAAaoD,mBAAmB1jB,EAAEmB,KAAKwhB,4BAA2B,SAAC7kB,GAAD,OAASiQ,EAAI9K,MAAMnF,EAAI8K,c,iDAM/D5J,GACP,OAAfA,EAAIuJ,QACPwF,EAAIjL,GAAG,+CACP3B,KAAK8U,cACL9U,KAAKC,SAAS,CAACygB,wBAAuB,EAAMI,uBAAsB,KAE3C,SAAfjjB,EAAIuJ,QACZwF,EAAI9K,MAAMjE,EAAI4J,W,+BAGH,IAAD,SAKPzH,KAAKL,MAHRiI,EAFU,EAEVA,SAAUD,EAFA,EAEAA,QAASiN,EAFT,EAESA,gBACnB8L,EAHU,EAGVA,uBAAuBE,EAHb,EAGaA,mBAAmBC,EAHhC,EAGgCA,oBAAoBF,EAHpD,EAGoDA,mBAC9DG,EAJU,EAIVA,sBAAsBE,EAJZ,EAIYA,kBAAkBC,EAJ9B,EAI8BA,mBAAmBF,EAJjD,EAIiDA,kBAEtD,OAAO,yBAAKzhB,UAAU,eAAc,yBAAKA,UAAU,mBACjD,yBAAKA,UAAU,2CAEb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,OAAd,4BAGF,yBAAKA,UAAU,mBAAmB6D,MAAO,CAACuB,OAAO,MACjD,yBAAKpF,UAAU,0DACb,yBAAKA,UAAU,iBACb,4BACE,4BACE,0BAAMA,UAAU,OAAhB,kBACE,2BAAOA,UAAU,eAC/B,2BAAOjD,IAAI,qBAAqBE,KAAK,WAAWC,QAASmkB,EAAoBjgB,QAAS,kBAAM,EAAKT,SAAS,CAAC0gB,oBAAoBA,KAAsBrE,UAAWoE,IAChJ,0BAAMphB,UAAU,aAGtB,4BACE,uBAAGA,UAAU,YAC3B,0BAAMA,UAAU,OAAhB,aADc,IACyB,2BAAOjD,IAAI,qBAAqBE,KAAK,OAAO4Q,aAAcyT,EAAoBthB,UAAU,WAAW6D,MAAO,CAACsB,MAAM,IAAK6X,UAAWoE,IACxK,0BAAMphB,UAAU,OAAhB,8BAAuD,2BAAOjD,IAAI,sBAAsBE,KAAK,OAAO4Q,aAAc0T,EAAqBvhB,UAAU,WAAW6D,MAAO,CAACsB,MAAM,IAAK6X,UAAWoE,IAF5K,IAEuM,0BAAMphB,UAAU,OAAhB,WAK3M,yBAAKA,UAAU,SACzBohB,EAAyB,uBAAG1W,KAAK,SAAShF,MAAM,gBAAgBtE,QAAS,kBAAM,EAAKT,SAAS,CAACygB,wBAAuB,MAA5F,gBAA8G,KACvIA,EACE,uBAAG1W,KAAK,SAAS1K,UAAU,gBAAgBoB,QAAS,kBAAM,EAAK4gB,4BAA/D,gBACA,uBAAGtX,KAAK,SAAS1K,UAAU,gBAAgBoB,QAAS,kBAAM,EAAK2gB,8BAA/D,kBAKM,yBAAK/hB,UAAU,gBAAgB6D,MAAO,CAAC2Q,UAAW,KAChD,4BACE,4BACE,0BAAMxU,UAAU,MAAM6D,MAAO,CAACsB,MAAM,KAApC,iBACE,2BAAOnF,UAAU,eAC/B,2BAAOjD,IAAI,oBAAoBE,KAAK,WAAWC,QAASukB,EAAmBrgB,QAAS,kBAAM,EAAKT,SAAS,CAAC8gB,mBAAmBA,KAAqBzE,UAAWwE,IAC5I,0BAAMxhB,UAAU,aAGtB,4BACE,uBAAGA,UAAU,YAC3B,0BAAMA,UAAU,OAAhB,aADc,IACyB,2BAAOjD,IAAI,oBAAoBE,KAAK,OAAO4Q,aAAc6T,EAAmB1hB,UAAU,WAAW6D,MAAO,CAACsB,MAAM,IAAK6X,UAAWwE,IACtK,0BAAMxhB,UAAU,OAAhB,8BAAuD,2BAAOjD,IAAI,qBAAqBE,KAAK,OAAO4Q,aAAc8T,EAAoB3hB,UAAU,WAAW6D,MAAO,CAACsB,MAAM,IAAK6X,UAAWwE,IAF1K,IAEoM,0BAAMxhB,UAAU,OAAhB,WAKxM,yBAAKA,UAAU,SACzBwhB,EAAwB,uBAAG9W,KAAK,SAAShF,MAAM,gBAAgBtE,QAAS,kBAAM,EAAKT,SAAS,CAAC6gB,uBAAsB,MAA3F,gBAA6G,KACrIA,EACE,uBAAG9W,KAAK,SAAS1K,UAAU,gBAAgBoB,QAAS,kBAAM,EAAK8hB,2BAA/D,gBACA,uBAAGxY,KAAK,SAAS1K,UAAU,gBAAgBoB,QAAS,kBAAM,EAAK+hB,6BAA/D,oBAQI,yBAAKnjB,UAAU,kBACX,yCAAe+C,IAAOnD,SAAS0V,KAEnC,kBAAC,IAAD,CAAMvY,IAAK,OACPkQ,KAAM3E,EAAUoQ,cAAe,CAACC,WAAW,GACvDtQ,QAASA,EACTuQ,SAAS,EAAOC,SAAS,W,GAlQG5Y,aA2Q1ByiB,G,WACF,WAAYtlB,GAAQ,oBACtB,IAAMiJ,EAAOjJ,EAAM2I,WAAWC,SAASC,QAAQC,SAAS9I,EAAMkJ,QACpDT,EAAKvJ,SAASwJ,cAAc,OACtC,GAAkB,WAAdO,EAAKqE,MAAmC,YAAdrE,EAAKqE,MACjB,YAAdrE,EAAKqE,MAAoC,YAAdrE,EAAKqE,MACZ,kBAApBrE,EAAKkc,WAAgC,EACxC1c,EAAKvJ,SAASwJ,cAAc,MACzB4E,KAAO,SACc,OAApBrE,EAAKkc,YACR1c,EAAG7F,UAAY,mCACf6F,EAAGU,UAAY,YAEfV,EAAG7F,UAAY,oCACf6F,EAAGU,UAAY,YARwB,IAUhCsb,EAAsBzkB,EAAM2I,WAAWC,SAASC,QAAhD4b,kBACRhc,EAAGW,iBAAiB,SAAQ,SAACnF,GAAD,OAAOwgB,EAAkBxb,EAAKhF,EAAEjE,UACxB,kBAApBiJ,EAAKkc,aACrB1c,EAAGU,UAAYF,EAAKkc,YAGf7hB,KAAKmF,GAAKA,E,yDAIV,OAAOnF,KAAKmF,O,KAILsb,M,0DClDAiC,G,kDAjPX,WAAYhmB,GAAQ,IAAD,8BACf,cAAMA,IACDiD,MAAQ,CACTiI,SAAS,GACTD,QAAQ,GACRG,WAAW,IACX6M,UAAU,EACVC,gBAAgB,EAChBC,aAAa,EACbqC,YAAW,EACXH,cAAc,GACdC,mBAAmB,GACnBF,iBAAiB,EACjBmJ,aAAQ9kB,EACjBwnB,UAAKxnB,EACIynB,UAAKznB,GAET,EAAK2Z,YAAc,EAAKA,YAAYpV,KAAjB,gBACnB,EAAKqV,aAAe,EAAKA,aAAarV,KAAlB,gBACpB,EAAKsV,gBAAkB,EAAKA,gBAAgBtV,KAArB,gBACvB,EAAK8V,WAAa,EAAKA,WAAW9V,KAAhB,gBAClB,EAAKmjB,WAAa,EAAKA,WAAWnjB,KAAhB,gBACxB,EAAKojB,UAAY,EAAKA,UAAUpjB,KAAf,gBACX,EAAKqjB,aAAe,EAAKA,aAAarjB,KAAlB,gBACpB,EAAKsjB,aAAe,EAAKA,aAAatjB,KAAlB,gBACpB,EAAK+F,sBAAwB,EAAKA,sBAAsB/F,KAA3B,gBAzBd,E,gEA4BfiW,KAAQC,YAAY,MACpBD,KAAQE,WAAW,SACnB7V,KAAK8U,YAAY,K,kCAUZ/U,EAAKiW,GAAa,IACtBiN,EAAUjjB,KAAK5D,KAAf6mB,YACM9nB,IAAT4E,IAAoBA,EAAOC,KAAKL,MAAMgV,WAFd,MAGT3U,KAAKL,MAAnBgjB,EAHuB,EAGvBA,KAAMC,EAHiB,EAGjBA,KACX5iB,KAAKtD,MAAMxB,KAAKwV,cAChB,IAAMxC,EAAO,CACZnO,KAAKA,GAEe,QAAjBkjB,EAAO3nB,QACV4S,EAAK+U,OAASA,EAAO3nB,YAEHH,IAAf6a,IACH9H,EAAK4H,OAASE,QACF7a,IAATynB,IACHA,EAAO,IAAInnB,WAECN,IAATwnB,IACHA,EAAOO,aAAIN,EAAM,CAACO,OAAO,KAI1BjV,EAAKkV,QAAUC,aAAcT,EAFd,WAE4B,CAAEU,YAD9BnoB,IAEf+S,EAAKqV,UAAYF,aAAcV,EAHhB,WAG8B,CAAEW,YAFhCnoB,IAGf6E,KAAKC,SAAS,CAACggB,QAAQ/R,EAAKyU,KAAKA,EAAKC,KAAKA,IAC3C1M,GAAasN,WAAWtV,EAAKlO,KAAK+U,cAAa,SAACpY,GAAD,OAASiQ,EAAI9K,MAAMnF,EAAI8K,c,mCASvD5J,GAET,GADAmC,KAAKtD,MAAMxB,KAAKgW,cACC,OAAbrT,EAAIuJ,OAAe,CACnB,IAAMgP,EAAYvY,EAAI0O,KAChB5E,EAAU,CACZ,CAACtM,KAAK,UAAUuN,OAAO,OAAOnE,MAAM,IAAI+D,MAAM,UAC7C,CAACnN,KAAK,YAAYuN,OAAO,aAAcyN,SAAS,IAC7C/Q,SAAU,CAAE/I,KAAM2I,EAAcK,QAAS,CACrCC,SAAS3H,EAAIsY,KAAKzQ,SAAS,YAC3BD,sBAAsBzF,KAAKyF,yBAGlC,CAACpK,KAAK,UAAUuN,OAAO,WAAYyN,SAAS,IAAI7N,MAAM,UACtD,CAACnN,KAAK,SAASuN,OAAO,SAAUnE,MAAM,IAAI+D,MAAM,UAChD,CAACnN,KAAK,aAAauN,OAAO,WAAWnE,MAAM,IAAI+D,MAAM,UACrD,CAACnN,KAAK,SAASuN,OAAO,UAAUnE,MAAM,IAAI+D,MAAM,WAErDxI,KAAKC,SAAS,CAAC2H,SAAS/J,EAAIsY,KAAKxB,UAAUyB,EAAUrW,KAAK6U,gBAAgBwB,EAAUjW,WAAW0U,aAAauB,EAAUtW,UAAU6H,QAAQA,QAClH,SAAf9J,EAAIuJ,QACXwF,EAAI9K,MAAMjE,EAAI4J,W,4CASA9B,EAAKhF,EAAEjE,GAAQ,IAAD,OAIhC,GAHIsD,KAAKtD,MAAM8Z,SAAWxW,KAAKtD,MAAM+Z,cACjCzW,KAAKtD,MAAM+Z,aAAa9Q,GAExB3F,KAAKtD,MAAM8Z,QACXxW,KAAKtD,MAAMga,cACX1W,KAAKtD,MAAM8F,eAEX,IACIxC,KAAKC,SAAU,CAAC6W,gBAAgBnW,EAAEiF,OAAOmR,cAAcpR,EAAKqR,mBAAmBrW,EAAEsW,WAAWC,YAAW,IAEvGlX,KAAKtD,MAAMxB,KAAKoP,UADC,cAGb,kBAAC,GAAD,CAAiBpG,MAHJ,cAGqBhJ,KAAM8E,KAAKtD,MAAMxB,KAAM6b,cAAepR,EAAMnD,QAAS,SAAC7B,GAAD,OAAO,EAAKwW,cAHtF,gBAG+GsM,cAAezjB,KAAKyjB,gBAChJ,CAAChf,MAAM,IAAKC,OAAO,IAAKL,qBAAoB,GAAO,KAAK,MAE9D,MAAO1H,GACLiE,QAAQC,IAAIlE,M,sCAQRoD,GAAO,IACZ+V,EAAU9V,KAAK5D,KAAf0Z,OACHA,EAAOxa,MAAMiC,OAAS,EACtByC,KAAK8U,YAAY/U,EAAK+V,EAAOxa,OAE7B0E,KAAK8U,YAAY/U,K,mCAOrBC,KAAK8U,YAAY,EAAG9U,KAAK5D,KAAK0Z,OAAOxa,S,iCAGjCE,EAAMkoB,EAAQJ,GACxB,OAAOD,aAAc7nB,EAAMkoB,EAAQ,CAAEJ,a,gCAE5BK,EAAKD,EAAQJ,GAErB,OADcM,aAAaD,EAAKD,EAAQ,IAAIjoB,KAAQ,CAAE6nB,a,mCAO3C/nB,GAAM,IACLqnB,EAAQ5iB,KAAKL,MAAbijB,KACHiB,EAAQX,aAAIN,EAAM,CAACO,OAAO,IAC9B,GAAI5nB,EAAMsoB,EAGN,OAFAjX,EAAI/K,KAAK,uGACT7B,KAAKC,SAAS,CAAC0iB,KAAKkB,IAGxB7jB,KAAKC,SAAS,CAAC0iB,KAAKpnB,M,mCAMXA,GAAM,IACRonB,EAAQ3iB,KAAKL,MAAbgjB,KACHmB,EAAQC,aAAIpB,EAAM,CAACQ,OAAO,IAC9B,GAAI5nB,EAAMuoB,EAGN,OAFAlX,EAAI/K,KAAK,uGACT7B,KAAKC,SAAS,CAAC2iB,KAAKkB,IAGxB9jB,KAAKC,SAAS,CAAC2iB,KAAKrnB,M,+BAEd,IAAD,SAIDyE,KAAKL,MAFLiI,EAFC,EAEDA,SAAsBD,GAFrB,EAESG,WAFT,EAEqBH,SAASsY,EAF9B,EAE8BA,QAAQ0C,EAFtC,EAEsCA,KAAKC,EAF3C,EAE2CA,KAC5CjO,EAHC,EAGDA,UAAWC,EAHV,EAGUA,gBAAiBC,EAH3B,EAG2BA,aAE3BoL,IAASA,EAAU,IACxB,IAAI+D,EAAa/H,GAAW6D,YAAY,oBAAoB,KAAK,KAAKG,EAAQgD,QAAO,GACrF,OAAO,yBAAK3jB,UAAU,eAAc,yBAAKA,UAAU,mBACjD,yBAAKA,UAAU,2CAEb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,OAAd,kBAGF,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,uCAAuC6D,MAAO,CAACsB,MAAM,SAAS,yBAAKnF,UAAU,gBACxF,4BACd,4BACA,0BAAMA,UAAU,OAAhB,mBACA,2BAAOjD,IAAI,SAASE,KAAK,OAAO+C,UAAU,eAAe6D,MAAO,CAACsB,MAAM,KAAM0I,aAAc8S,EAAQnK,UAEjF,4BAClB,0BAAMxW,UAAU,OAAhB,UACA,4BAAQjD,IAAI,SAASiD,UAAU,MAAM6D,MAAO,CAAC2U,MAAM,OAAOrT,MAAO,IAAIC,OAAQ,GAAGpB,WAAY,GAAGkd,QAAQ,OAAOtO,OAAO,sBACnH8R,IAGF,4BACC,yBAAK1kB,UAAU,wDAAwD6D,MAAO,CAACsB,MAAM,MACrF,kBAAC,KAAD,CAAgBif,OAAO,aAAab,WAAY7iB,KAAK6iB,WAAYC,UAAW9iB,KAAK8iB,UAChF/V,YAAY,aAAakX,YAAajkB,KAAK+iB,aAAcznB,MAAOqnB,KAEjE,0BAAMrjB,UAAU,OAAhB,qBACA,yBAAKA,UAAU,wDAAwD6D,MAAO,CAACsB,MAAM,MACrF,kBAAC,KAAD,CAAgBif,OAAO,aAAab,WAAY7iB,KAAK6iB,WAAYC,UAAW9iB,KAAK8iB,UAChF/V,YAAY,aAAakX,YAAajkB,KAAKgjB,aAAc1nB,MAAOsnB,OAIpD,uBAAG5Y,KAAK,SAAS1K,UAAU,gBAAgBoB,QAAS,kBAAM,EAAK8U,eAA/D,mBAKR,yBAAKlW,UAAU,kBACX,yCAAe+C,IAAOnD,SAAS0V,KAEnC,kBAAC,IAAD,CAAMvY,IAAK,OACPkQ,KAAM3E,EAAUoQ,cAAe,CAACC,WAAW,GAC3CtQ,QAASA,EACTuQ,SAAS,EAAOC,SAAS,IAE7B,yBAAK7Y,UAAU,4BACX,kBAAC,EAAD,CAAYjD,IAAK,OACD0D,KAAM4U,EACNxU,WAAYyU,EACZxU,QAASyU,EACTpV,YAAaO,KAAKgV,0B,GA1OpBzV,aCkNf2kB,ICvNiB3kB,Y,kDDQ5B,WAAY7C,GAAQ,IAAD,8BACf,cAAMA,IACDiD,MAAQ,CACTiI,SAAS,GACTD,QAAQ,CACJ,CAACtM,KAAK,cAAcuN,OAAO,OAAQnE,MAAM,IAAK+D,MAAM,UACnD,CAACnN,KAAK,aAAauN,OAAO,YAAayN,SAAS,KAChD,CAAChb,KAAK,SAASuN,OAAO,eAAgBnE,MAAM,IAAI+D,MAAM,UACtD,CAACnN,KAAK,SAASuN,OAAO,UAAUnE,MAAM,IAAI+D,MAAM,WAErDV,WAAW,IACX6M,UAAU,EACVC,gBAAgB,EAChBC,aAAa,EACbqC,YAAW,EACXH,cAAc,GACdC,mBAAmB,GAC5BF,iBAAiB,EACjBmJ,aAAQ9kB,EACRwnB,UAAKxnB,EACIynB,UAAKznB,GAET,EAAK2Z,YAAc,EAAKA,YAAYpV,KAAjB,gBACnB,EAAKqV,aAAe,EAAKA,aAAarV,KAAlB,gBACpB,EAAKsV,gBAAkB,EAAKA,gBAAgBtV,KAArB,gBACvB,EAAK8V,WAAa,EAAKA,WAAW9V,KAAhB,gBACxB,EAAKmjB,WAAa,EAAKA,WAAWnjB,KAAhB,gBAClB,EAAKojB,UAAY,EAAKA,UAAUpjB,KAAf,gBACX,EAAKqjB,aAAe,EAAKA,aAAarjB,KAAlB,gBACpB,EAAKsjB,aAAe,EAAKA,aAAatjB,KAAlB,gBA7BL,E,gEAgCfiW,KAAQC,YAAY,MACpBD,KAAQE,WAAW,SACnB7V,KAAK8U,YAAY,K,kCAST/U,GAAO,IAAD,EACsBC,KAAK5D,KAAlCwlB,EADO,EACPA,WAAWuC,EADJ,EACIA,oBACLhpB,IAAT4E,IAAoBA,EAAOC,KAAKL,MAAMgV,WAF5B,MAGK3U,KAAKL,MAAnBgjB,EAHS,EAGTA,KAAMC,EAHG,EAGHA,KACX5iB,KAAKtD,MAAMxB,KAAKwV,cAChB,IAAIxC,EAAO,CACPnO,KAAKA,QAEF5E,IAATynB,IACHA,EAAO,IAAInnB,WAECN,IAATwnB,IACHA,EAAOO,aAAIN,EAAM,CAACO,OAAO,KAES,QAAzBgB,EAAe7oB,QACf4S,EAAKiW,eAAiBA,EAAe7oB,OAEhB,QAArBsmB,EAAWtmB,QACX4S,EAAK0T,WAAaA,EAAWtmB,OAIvC4S,EAAKkV,QAAUC,aAAcT,EAFR,WAEsB,CAAEU,YADxBnoB,IAErB+S,EAAKqV,UAAYF,aAAcV,EAHV,WAGwB,CAAEW,YAF1BnoB,IAGrB6E,KAAKC,SAAS,CAACggB,QAAQ/R,EAAKyU,KAAKA,EAAKC,KAAKA,IACrCzD,GAAaiF,aAAalW,EAAKlO,KAAK+U,cAAa,SAACpY,GAAD,OAASiQ,EAAI9K,MAAMnF,EAAI8K,c,mCAU/D5J,GAIT,GAHAmC,KAAKtD,MAAMxB,KAAKgW,cAGC,OAAbrT,EAAIuJ,OAAe,CACnB,IAAMgP,EAAYvY,EAAI0O,KACtBvM,KAAKC,SAAS,CAAC2H,SAAS/J,EAAIsY,KAAKxB,UAAUyB,EAAUrW,KAAK6U,gBAAgBwB,EAAUjW,WAAW0U,aAAauB,EAAUtW,gBAChG,SAAfjC,EAAIuJ,QACXwF,EAAI9K,MAAMjE,EAAI4J,W,sCAON1H,GACZC,KAAK8U,YAAY/U,K,mCAMjBC,KAAK8U,YAAY9U,KAAKL,MAAMgV,a,iCAExBnZ,EAAMkoB,EAAQJ,GACxB,OAAOD,aAAc7nB,EAAMkoB,EAAQ,CAAEJ,a,gCAE5BK,EAAKD,EAAQJ,GAEhB,OADSM,aAAaD,EAAKD,EAAQ,IAAIjoB,KAAQ,CAAE6nB,a,mCAO3C/nB,GAAM,IACLqnB,EAAQ5iB,KAAKL,MAAbijB,KACHiB,EAAQX,aAAIN,EAAM,CAACO,OAAO,IAC9B,GAAI5nB,EAAMsoB,EAGN,OAFAjX,EAAI/K,KAAK,uGACT7B,KAAKC,SAAS,CAAC0iB,KAAKkB,IAGxB7jB,KAAKC,SAAS,CAAC0iB,KAAKpnB,M,mCAMXA,GAAM,IACRonB,EAAQ3iB,KAAKL,MAAbgjB,KACHmB,EAAQC,aAAIpB,EAAM,CAACQ,OAAO,IAC9B,GAAI5nB,EAAMuoB,EAGN,OAFAlX,EAAI/K,KAAK,uGACT7B,KAAKC,SAAS,CAAC2iB,KAAKkB,IAGxB9jB,KAAKC,SAAS,CAAC2iB,KAAKrnB,M,+BAEd,IAAD,SAIDyE,KAAKL,MAFLiI,EAFC,EAEDA,SAAUD,EAFT,EAESA,QAASsY,EAFlB,EAEkBA,QAAQ0C,EAF1B,EAE0BA,KAAKC,EAF/B,EAE+BA,KAChCjO,EAHC,EAGDA,UAAWC,EAHV,EAGUA,gBAAiBC,EAH3B,EAG2BA,aAE3BoL,IAASA,EAAU,IACxB,IAAMoE,EAAiBpI,GAAW6D,YAAY,oBAAoB,WAAW,KAAKG,EAAQ2B,YAAW,GACjG0C,EAAqB,CAAC,4BAAQhpB,MAAM,OAAd,QAG1B,OAFAgpB,EAAmB/jB,KAAM,4BAAQjF,MAAM,QAAQwjB,SAAqC,UAA3BmB,EAAQkE,gBAAxC,UACzBG,EAAmB/jB,KAAM,4BAAQjF,MAAM,OAAOwjB,SAAqC,SAA3BmB,EAAQkE,gBAAvC,SAClB,yBAAK7kB,UAAU,eAAc,yBAAKA,UAAU,mBACjD,yBAAKA,UAAU,2CAEb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,OAAd,qBAGF,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,uCAAuC6D,MAAO,CAACsB,MAAM,SAAS,yBAAKnF,UAAU,gBACpG,4BACF,4BACA,0BAAMA,UAAU,OAAhB,aACA,4BAAQjD,IAAI,aAAaiD,UAAU,MAAM6D,MAAO,CAAC2U,MAAM,OAAOrT,MAAO,IAAIC,OAAQ,GAAGpB,WAAY,GAAGkd,QAAQ,OAAOtO,OAAO,sBACvHmS,IAGF,4BACA,0BAAM/kB,UAAU,OAAhB,gBACA,4BAAQjD,IAAI,iBAAiBiD,UAAU,MAAM6D,MAAO,CAAC2U,MAAM,OAAOrT,MAAO,IAAIC,OAAQ,GAAGpB,WAAY,GAAGkd,QAAQ,OAAOtO,OAAO,sBAC3HoS,IAGF,4BACC,yBAAKhlB,UAAU,wDAAwD6D,MAAO,CAACsB,MAAM,MACrF,kBAAC,KAAD,CAAgBif,OAAO,aAAab,WAAY7iB,KAAK6iB,WAAYC,UAAW9iB,KAAK8iB,UAChF/V,YAAY,aAAakX,YAAajkB,KAAK+iB,aAAcznB,MAAOqnB,KAEjE,0BAAMrjB,UAAU,OAAhB,qBACA,yBAAKA,UAAU,wDAAwD6D,MAAO,CAACsB,MAAM,MACrF,kBAAC,KAAD,CAAgBif,OAAO,aAAab,WAAY7iB,KAAK6iB,WAAYC,UAAW9iB,KAAK8iB,UAChF/V,YAAY,aAAakX,YAAajkB,KAAKgjB,aAAc1nB,MAAOsnB,OAIpD,uBAAG5Y,KAAK,SAAS1K,UAAU,gBAAgBoB,QAAS,kBAAM,EAAK8U,eAA/D,mBAKR,yBAAKlW,UAAU,kBACX,yCAAe+C,IAAOnD,SAAS0V,KAEnC,kBAAC,IAAD,CAAMvY,IAAK,OACPkQ,KAAM3E,EAAUoQ,cAAe,CAACC,WAAW,GAC3CtQ,QAASA,EACTuQ,SAAS,EAAOC,SAAS,IAE7B,yBAAK7Y,UAAU,4BACX,kBAAC,EAAD,CAAYjD,IAAK,OACD0D,KAAM4U,EACNxU,WAAYyU,EACZxU,QAASyU,EACTpV,YAAaO,KAAKgV,0B,GAxMlBzV,cE0MjBglB,G,kDA1MX,WAAY7nB,GAAQ,IAAD,8BACf,cAAMA,IACDiD,MAAQ,CACTiI,SAAS,GAETD,QAAQ,CACJ,CAACtM,KAAK,SAASuN,OAAO,UAAWJ,MAAM,UACtC,CAACnN,KAAK,WAAWuN,OAAO,YAAaJ,MAAM,UAC3C,CAACnN,KAAK,YAAYuN,OAAO,aAAaJ,MAAM,UAC5C,CAACnN,KAAK,YAAYuN,OAAO,aAAaJ,MAAM,WAEjDV,WAAW,IACX6M,UAAU,EACVC,gBAAgB,EAChBC,aAAa,EACbqC,YAAW,EACXH,cAAc,GACdC,mBAAmB,GAC5BF,iBAAiB,EACjBmJ,aAAQ9kB,EACRwnB,UAAKxnB,EACIynB,UAAKznB,GAET,EAAK2Z,YAAc,EAAKA,YAAYpV,KAAjB,gBACnB,EAAKqV,aAAe,EAAKA,aAAarV,KAAlB,gBACpB,EAAKsV,gBAAkB,EAAKA,gBAAgBtV,KAArB,gBAC7B,EAAK8V,WAAa,EAAKA,WAAW9V,KAAhB,gBAClB,EAAKmjB,WAAa,EAAKA,WAAWnjB,KAAhB,gBAClB,EAAKojB,UAAY,EAAKA,UAAUpjB,KAAf,gBACX,EAAKqjB,aAAe,EAAKA,aAAarjB,KAAlB,gBACpB,EAAKsjB,aAAe,EAAKA,aAAatjB,KAAlB,gBA9BL,E,gEAiCfiW,KAAQC,YAAY,MACpBD,KAAQE,WAAW,SACnB7V,KAAK8U,YAAY,K,kCAUT/U,EAAKiW,GAAa,IACzBxJ,EAAkBxM,KAAK5D,KAAvBoQ,oBACMrR,IAAT4E,IAAoBA,EAAOC,KAAKL,MAAMgV,WAFX,MAGZ3U,KAAKL,MAAnBgjB,EAH0B,EAG1BA,KAAMC,EAHoB,EAGpBA,KACL5iB,KAAKtD,MAAMxB,KAAKwV,cAChB,IAAIxC,EAAO,CACPnO,KAAKA,GAEc,QAAzByM,EAAelR,QACT4S,EAAK1B,eAAiBA,EAAelR,YAEtBH,IAAf6a,IACT9H,EAAK4H,OAASE,QACF7a,IAATynB,IACHA,EAAO,IAAInnB,WAECN,IAATwnB,IACHA,EAAOO,aAAIN,EAAM,CAACO,OAAO,KAI1BjV,EAAKkV,QAAUC,aAAcT,EAFd,WAE4B,CAAEU,YADxBnoB,IAErB+S,EAAKqV,UAAYF,aAAcV,EAHhB,WAG8B,CAAEW,YAF1BnoB,IAGrB6E,KAAKC,SAAS,CAACggB,QAAQ/R,EAAKyU,KAAKA,EAAKC,KAAKA,IACrCzD,GAAaqF,iBAAiBtW,EAAKlO,KAAK+U,cAAa,SAACpY,GAAD,OAASiQ,EAAI9K,MAAMnF,EAAI8K,c,mCASnE5J,GAET,GADAmC,KAAKtD,MAAMxB,KAAKgW,cACC,OAAbrT,EAAIuJ,OAAe,CACnB,IAAMgP,EAAYvY,EAAI0O,KACtBvM,KAAKC,SAAS,CAAC2H,SAAS/J,EAAIsY,KAAKxB,UAAUyB,EAAUrW,KAAK6U,gBAAgBwB,EAAUjW,WAAW0U,aAAauB,EAAUtW,gBAChG,SAAfjC,EAAIuJ,QACXwF,EAAI9K,MAAMjE,EAAI4J,W,sCAON1H,GACZC,KAAK8U,YAAY/U,EAAMC,KAAKL,MAAMqW,c,mCAMlChW,KAAK8U,YAAY9U,KAAKL,MAAMgV,UAAW3U,KAAK5D,KAAK0Z,OAAOxa,S,iCAGpDE,EAAMkoB,EAAQJ,GACxB,OAAOD,aAAc7nB,EAAMkoB,EAAQ,CAAEJ,a,gCAE5BK,EAAKD,EAAQJ,GAEtB,OADeM,aAAaD,EAAKD,EAAQ,IAAIjoB,KAAQ,CAAE6nB,a,mCAO3C/nB,GAAM,IACLqnB,EAAQ5iB,KAAKL,MAAbijB,KACHiB,EAAQX,aAAIN,EAAM,CAACO,OAAO,IAC9B,GAAI5nB,EAAMsoB,EAGN,OAFAjX,EAAI/K,KAAK,uGACT7B,KAAKC,SAAS,CAAC0iB,KAAKkB,IAGxB7jB,KAAKC,SAAS,CAAC0iB,KAAKpnB,M,mCAMXA,GAAM,IACRonB,EAAQ3iB,KAAKL,MAAbgjB,KACHmB,EAAQC,aAAIpB,EAAM,CAACQ,OAAO,IAC9B,GAAI5nB,EAAMuoB,EAGN,OAFAlX,EAAI/K,KAAK,uGACT7B,KAAKC,SAAS,CAAC2iB,KAAKkB,IAGxB9jB,KAAKC,SAAS,CAAC2iB,KAAKrnB,M,+BAEd,IAAD,SAIPyE,KAAKL,MAFCiI,EAFC,EAEDA,SAAUD,EAFT,EAESA,QAASsY,EAFlB,EAEkBA,QAAQ0C,EAF1B,EAE0BA,KAAKC,EAF/B,EAE+BA,KAChCjO,EAHC,EAGDA,UAAWC,EAHV,EAGUA,gBAAiBC,EAH3B,EAG2BA,aAEjCoL,IAASA,EAAU,IAExB,IAAIM,EAAiBtE,GAAW6D,YAAY,aAAa,KAAK,KAAKG,EAAQzT,gBAAe,GACpF,OAAO,yBAAKlN,UAAU,eAAc,yBAAKA,UAAU,mBACjD,yBAAKA,UAAU,2CAEb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,OAAd,kBAGF,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,0DAAyD,yBAAKA,UAAU,gBACnF,4BACd,4BACA,0BAAMA,UAAU,OAAhB,cACA,4BAAQjD,IAAI,iBAAiBiD,UAAU,MAAM6D,MAAO,CAAC2U,MAAM,OAAOrT,MAAO,IAAIC,OAAQ,GAAGpB,WAAY,GAAGkd,QAAQ,OAAOtO,OAAO,sBAC3HqO,IAGF,4BACA,0BAAMjhB,UAAU,OAAhB,kBACA,2BAAOjD,IAAI,SAASE,KAAK,OAAO+C,UAAU,eAAe6D,MAAO,CAACsB,MAAM,KAAM0I,aAAc8S,EAAQnK,UAEnG,4BACC,yBAAKxW,UAAU,wDAAwD6D,MAAO,CAACsB,MAAM,MACpF,kBAAC,KAAD,CAAgBif,OAAO,aAAab,WAAY7iB,KAAK6iB,WAAYC,UAAW9iB,KAAK8iB,UAChF/V,YAAY,aAAakX,YAAajkB,KAAK+iB,aAAcznB,MAAOqnB,KAElE,0BAAMrjB,UAAU,OAAhB,qBACA,yBAAKA,UAAU,wDAAwD6D,MAAO,CAACsB,MAAM,MACpF,kBAAC,KAAD,CAAgBif,OAAO,aAAab,WAAY7iB,KAAK6iB,WAAYC,UAAW9iB,KAAK8iB,UAChF/V,YAAY,aAAakX,YAAajkB,KAAKgjB,aAAc1nB,MAAOsnB,OAIrD,uBAAG5Y,KAAK,SAAS1K,UAAU,gBAAgBoB,QAAS,kBAAM,EAAK8U,eAA/D,mBAKR,yBAAKlW,UAAU,kBACX,yCAAe+C,IAAOnD,SAAS0V,KAEnC,kBAAC,IAAD,CAAMvY,IAAK,OACPkQ,KAAM3E,EAAUoQ,cAAe,CAACC,WAAW,GAC3CtQ,QAASA,EACTuQ,SAAS,EAAOC,SAAS,IAE7B,yBAAK7Y,UAAU,4BACX,kBAAC,EAAD,CAAYjD,IAAK,OACD0D,KAAM4U,EACNxU,WAAYyU,EACZxU,QAASyU,EACTpV,YAAaO,KAAKgV,0B,GAnMnBzV,a,qBCgEhBklB,G,kDAtEX,WAAY/nB,GAAQ,IAAD,8BACf,cAAMA,IACDiD,MAAQ,CACT+kB,WAAW,IAEf,EAAKC,wBAA0B,EAAKA,wBAAwBjlB,KAA7B,gBALhB,E,gEAOE,IACVklB,EAAkB5kB,KAAKtD,MAAvBkoB,eAEPzF,GAAa0F,yBAAyBD,EAAe5kB,KAAK2kB,yBAAwB,SAAChoB,GAAD,OAASiE,QAAQC,IAAIlE,EAAI8K,c,8CAMvF5J,GACD,OAAfA,EAAIuJ,OACJpH,KAAKC,SAAS,CAACykB,WAAW7mB,EAAI0O,OACR,SAAf1O,EAAIuJ,QAAqBwF,EAAI9K,MAAMjE,EAAI4J,W,+BAE5C,IAAD,OACEid,EAAc1kB,KAAKL,MAAnB+kB,WACAE,EAAkB5kB,KAAKtD,MAAvBkoB,eACP,OAAO,yBAAKtlB,UAAU,2BAEtB,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,OAAd,mBAGF,yBAAKA,UAAU,2BACb,+BACE,kCACE,yBAAK6D,MAAO,CAACsB,MAAM,OACnB,+BAEF,+BACE,4BACE,4CACA,4BACI,uBAAGnF,UAAU,OAAOslB,EAAe7G,kBAO7C,yBAAKze,UAAU,UACb,uBAAGA,UAAU,OAAb,gBACA,yBAAKA,UAAU,YACXwlB,KAAgBJ,EAAWK,QAIjC,yBAAKzlB,UAAU,OACb,0BAAMA,UAAU,OAAhB,cACI,yBAAKA,UAAU,YACbwlB,KAAgBJ,EAAW7jB,OAIrC,yBAAKvB,UAAU,YACb,0BAAMA,UAAU,SACd,uBAAG0K,KAAK,SAAS1K,UAAU,gBAAgBoB,QAAS,kBAAM,EAAKhE,MAAM8F,WAAWW,MAAO,CAAC6hB,aAAa,KAArG,uB,GAhEuBzlB,aCQ7B0lB,G,kDACF,WAAYvoB,GAAQ,IAAD,8BACf,cAAMA,IACDiD,MAAQ,CACTiI,SAAS,GACTD,QAAQ,GACRG,WAAW,IACX6M,UAAU,EACVC,gBAAgB,EAChBC,aAAa,EACbqC,YAAW,EACXH,cAAc,GACdC,mBAAmB,GAC5BF,iBAAiB,EACjBoO,iBAAiB,GACRjF,aAAQ9kB,EACRwnB,UAAKxnB,EACLynB,UAAKznB,GAET,EAAK2Z,YAAc,EAAKA,YAAYpV,KAAjB,gBACnB,EAAKqV,aAAe,EAAKA,aAAarV,KAAlB,gBAC1B,EAAK8V,WAAa,EAAKA,WAAW9V,KAAhB,gBAClB,EAAKylB,yBAA2B,EAAKA,yBAAyBzlB,KAA9B,gBAChC,EAAKmjB,WAAa,EAAKA,WAAWnjB,KAAhB,gBAClB,EAAKojB,UAAY,EAAKA,UAAUpjB,KAAf,gBACX,EAAKqjB,aAAe,EAAKA,aAAarjB,KAAlB,gBACpB,EAAKsjB,aAAe,EAAKA,aAAatjB,KAAlB,gBACpB,EAAK+F,sBAAwB,EAAKA,sBAAsB/F,KAA3B,gBAC7B,EAAKsV,gBAAkB,EAAKA,gBAAgBtV,KAArB,gBA3BR,E,gEA8BfiW,KAAQC,YAAY,MACpBD,KAAQE,WAAW,SAFH,MAIG7V,KAAKL,MAAnBgjB,EAJW,EAIXA,KAAMC,EAJK,EAILA,KACPwC,GAAe,OACNjqB,IAATynB,IACAA,EAAO,IAAInnB,KACX2pB,GAAe,QAENjqB,IAATwnB,IACAA,EAAOO,aAAIN,EAAM,CAACO,OAAO,IACzBiC,GAAe,GAEfA,GACAplB,KAAKC,SAAS,CAAC0iB,KAAKA,EAAMC,KAAKA,IAGnCzD,GAAakG,iBAAiB,GAAGrlB,KAAKmlB,0BAAyB,SAACxoB,GAAD,OAASiQ,EAAI9K,MAAMnF,EAAI8K,c,kCAUjF1H,EAAKiW,QACH7a,IAAT4E,IAAoBA,EAAOC,KAAKL,MAAMgV,WADd,MAET3U,KAAKL,MAAnBgjB,EAFuB,EAEvBA,KAAMC,EAFiB,EAEjBA,KACP1U,EAAO,CACVnO,KAAKA,QAEa5E,IAAf6a,IACH9H,EAAK4H,OAASE,QACF7a,IAATynB,IACHA,EAAO,IAAInnB,WAECN,IAATwnB,IACHA,EAAOO,aAAIN,EAAM,CAACO,OAAO,KAK1BjV,EAAKuD,iBAAmBzR,KAAK5D,KAAKqV,iBAAiBnW,MACnD4S,EAAKuG,cAAgBzU,KAAK5D,KAAKqY,cAAcnZ,MAC7C4S,EAAKqV,UAAYF,aAAcV,EAJlB,WAIgC,CAAEW,YAHlCnoB,IAIP+S,EAAKkV,QAAUC,aAAcT,EALtB,WAKoC,CAAEU,YAJtCnoB,IAMb6E,KAAKC,SAAS,CAACggB,QAAQ/R,EAAKyU,KAAKA,EAAKC,KAAKA,IAC3CzD,GAAa7P,mBAAmBpB,EAAKlO,KAAK+U,cAAa,SAACpY,GAAD,OAASiQ,EAAI9K,MAAMnF,EAAI8K,c,mCAU/D5J,GAET,GADAmC,KAAKtD,MAAMxB,KAAKgW,cACC,OAAbrT,EAAIuJ,OAAe,CACnB,IAAMgP,EAAYvY,EAAI0O,KAChB5E,EAAU,CACZ,CAACtM,KAAK,cAAcuN,OAAO,eAAgByN,SAAS,IAChD/Q,SAAU,CAAE/I,KAAM2I,EAAcK,QAAS,CACrCC,SAAS3H,EAAIsY,KAAKzQ,SAAS,cAC3BD,sBAAsBzF,KAAKyF,yBAGlC,CAACpK,KAAK,mBAAmBuN,OAAO,gBAAgBnE,MAAM,IAAI+D,MAAM,UAChE,CAACnN,KAAK,QAAQuN,OAAO,SAAUyN,SAAS,IACrC/Q,SAAU,CAAE/I,KAAM+oB,GAAc/f,QAAS,CAACC,SAAS3H,EAAIsY,QAE1D,CAAC9a,KAAK,YAAYuN,OAAO,QAAQnE,MAAM,IAAI+D,MAAM,UACjD,CAACnN,KAAK,UAAUuN,OAAO,MAAMnE,MAAM,IAAI+D,MAAM,UAC7C,CAACnN,KAAK,UAAUuN,OAAO,eAAenE,MAAM,IAAI+D,MAAM,UACtD,CAACnN,KAAK,gBAAgBuN,OAAO,SAAUnE,MAAM,GAAG+D,MAAM,SAClElD,SAAU,CAAE/I,KAAMiV,GAAgBjM,QAAS,CAAEC,SAAS3H,EAAIsY,SAGnDnW,KAAKC,SAAS,CAAC2H,SAAS/J,EAAIsY,KAAKxB,UAAUyB,EAAUrW,KAAK6U,gBAAgBwB,EAAUjW,WAAW0U,aAAauB,EAAUtW,UAAU6H,QAAQA,EAAQ4d,YAAYnP,EAAUmP,kBAChJ,SAAf1nB,EAAIuJ,QACXwF,EAAI9K,MAAMjE,EAAI4J,W,+CAOA5J,GACD,OAAbA,EAAIuJ,QACJpH,KAAKC,SAAS,CAACilB,iBAAiBrnB,EAAIsY,OACpCnW,KAAK8U,YAAY,IACK,SAAfjX,EAAIuJ,QACXwF,EAAI9K,MAAMjE,EAAI4J,W,mCAOlBzH,KAAK8U,YAAY,EAAG9U,KAAK5D,KAAK0Z,OAAOxa,S,iCAGjCE,EAAMkoB,EAAQJ,GACxB,OAAOD,aAAc7nB,EAAMkoB,EAAQ,CAAEJ,a,gCAE5BK,EAAKD,EAAQJ,GAEtB,OADeM,aAAaD,EAAKD,EAAQ,IAAIjoB,KAAQ,CAAE6nB,a,mCAO3C/nB,GAAM,IACLqnB,EAAQ5iB,KAAKL,MAAbijB,KACHiB,EAAQX,aAAIN,EAAM,CAACO,OAAO,IAC9B,GAAI5nB,EAAMsoB,EAGN,OAFAjX,EAAI/K,KAAK,uGACT7B,KAAKC,SAAS,CAAC0iB,KAAKkB,IAGxB7jB,KAAKC,SAAS,CAAC0iB,KAAKpnB,M,mCAMXA,GAAM,IACRonB,EAAQ3iB,KAAKL,MAAbgjB,KACHmB,EAAQC,aAAIpB,EAAM,CAACQ,OAAO,IAC9B,GAAI5nB,EAAMuoB,EAGN,OAFAlX,EAAI/K,KAAK,uGACT7B,KAAKC,SAAS,CAAC2iB,KAAKkB,IAGxB9jB,KAAKC,SAAS,CAAC2iB,KAAKrnB,M,4CAQFoK,EAAKhF,EAAEjE,GACzBsD,KAAKC,SAAU,CAAC6W,gBAAgBnW,EAAEiF,OAAOmR,cAAcpR,EAAKqR,mBAAmBrW,EAAEsW,WAAWC,YAAW,M,sCAM3FnX,GACZC,KAAK8U,YAAY/U,EAAMC,KAAKL,MAAMqW,c,+BAWxC,IARY,IAAD,SAMPhW,KAAKL,MAJCiI,EAFC,EAEDA,SAAUD,EAFT,EAESA,QACnBgN,EAHU,EAGVA,UAAWC,EAHD,EAGCA,gBAAiBC,EAHlB,EAGkBA,aACnBqQ,EAJC,EAIDA,iBAAiBjF,EAJhB,EAIgBA,QAAQlJ,EAJxB,EAIwBA,cACzB4L,EALC,EAKDA,KAAKC,EALJ,EAKIA,KAAK2C,EALT,EAKSA,YAAYrO,EALrB,EAKqBA,WAEtBsO,EAAmB,CAAC,4BAAQlqB,MAAM,OAAd,QACrBgC,EAAE,EAAGA,EAAE4nB,EAAiB3nB,OAAQD,IAC3B2iB,GACAuF,EAAiBjlB,KACb,4BAAQjF,MAAO4pB,EAAiB5nB,GAAGmU,iBAAkBqN,SAAUmB,EAAQxO,mBAAqByT,EAAiB5nB,GAAGmU,iBAAkB3Q,IAAKxC,KAAKyC,UAAWmkB,EAAiB5nB,GAAGmU,mBAMvL,YAFoBtW,IAAhBoqB,IAA2BA,EAAc,IAEtC,yBAAKjmB,UAAU,eAAc,yBAAKA,UAAU,mBAC9C4X,EAAa,kBAAC,GAAD,CAAsB0N,eAAgB7N,EAAevU,QAAS,kBAAM,EAAKvC,SAAU,CAACiX,YAAW,OAC3G,yBAAK5X,UAAU,2CAEzB,yBAAKA,UAAU,iBACf,wBAAIA,UAAU,OAAd,oBAGA,yBAAKA,UAAU,oBACd,yBAAKA,UAAU,4CAA2C,yBAAK0F,MAAM,gBACrE,4BACC,4BACA,0BAAM1F,UAAU,OAAhB,iBACC,4BAAQjD,IAAI,mBAAmBiD,UAAU,MAAM6D,MAAO,CAAC2U,MAAM,OAAOrT,MAAO,IAAIC,OAAQ,GAAGpB,WAAY,GAAGkd,QAAQ,OAAOtO,OAAO,sBAC7HsT,IAGH,4BACA,0BAAMlmB,UAAU,OAAhB,qBACA,2BAAOjD,IAAI,SAASE,KAAK,OAAO+C,UAAU,eAAeyN,YAAY,GAAG5J,MAAO,CAACsB,MAAM,QAEtF,4BACA,0BAAMnF,UAAU,OAAhB,UACA,4BAAQjD,IAAI,gBAAgBiD,UAAU,MAAM6D,MAAO,CAAC2U,MAAM,OAAOrT,MAAO,IAAIC,OAAQ,GAAGpB,WAAY,GAAGkd,QAAQ,OAAOtO,OAAO,sBAC1H,4BAAQ5W,MAAM,OAAd,OACA,4BAAQA,MAAM,WAAd,cACA,4BAAQA,MAAM,WAAd,aAGF,4BACA,yBAAKgE,UAAU,wDAAwD6D,MAAO,CAACsB,MAAM,MACpF,kBAAC,KAAD,CAAgBif,OAAO,aAAab,WAAY7iB,KAAK6iB,WAAYC,UAAW9iB,KAAK8iB,UAChF/V,YAAY,aAAakX,YAAajkB,KAAK+iB,aAAcznB,MAAOqnB,KAElE,0BAAMrjB,UAAU,OAAhB,qBACA,yBAAKA,UAAU,wDAAwD6D,MAAO,CAACsB,MAAM,MACpF,kBAAC,KAAD,CAAgBif,OAAO,aAAab,WAAY7iB,KAAK6iB,WAAYC,UAAW9iB,KAAK8iB,UAChF/V,YAAY,aAAakX,YAAajkB,KAAKgjB,aAAc1nB,MAAOsnB,OAInE,uBAAG5Y,KAAK,SAAS1K,UAAU,gBAAgBoB,QAAS,kBAAM,EAAK8U,eAA/D,mBAKD,yBAAKlW,UAAU,gBACd,4BACC,4BACC,0BAAMA,UAAU,2BADjB,eAC6D,gCAA4BnE,IAAxBoqB,EAAYhR,QAAwB,EAAIgR,EAAYhR,UAErH,4BACC,0BAAMjV,UAAU,wBADjB,YACuD,gCAA4BnE,IAAxBoqB,EAAYE,QAAwB,EAAIF,EAAYE,YAIjH,kBAAC,IAAD,CAAMppB,IAAK,OACVkQ,KAAM3E,EAAUoQ,cAAe,CAACC,WAAW,GAC3CtQ,QAASA,EACTuQ,SAAS,EAAOC,SAAS,IAE1B,yBAAK7Y,UAAU,4BACd,kBAAC,EAAD,CAAYjD,IAAK,OACb0D,KAAM4U,EACNxU,WAAYyU,EACZxU,QAASyU,EACTpV,YAAaO,KAAKgV,oBAlEiB,U,GA9MXzV,aA4R3B+lB,G,WACF,WAAY5oB,GAAQ,wBACR8I,EAAa9I,EAAM2I,WAAWC,SAASC,QAAvCC,SACFL,EAAKvJ,SAASwJ,cAAc,OAClCD,EAAG7F,UAAY,wBACf,IAAIqG,OAAOxK,EACPqK,GAAYA,EAASjI,OAAS,IACxCoI,EAAOH,EAAS9I,EAAMkJ,SAChBT,EAAGU,UAAYF,EAAI,MACnBR,EAAGjB,MAAQyB,EAAI,UACf3F,KAAKmF,GAAKA,E,yDAGV,OAAOnF,KAAKmF,O,KAMdqM,G,WACF,WAAY9U,GAAQ,0BACqBA,EAAM2I,WAAWC,SAASC,QAAvCC,GADT,EACPiQ,eADO,EACSjQ,UACpBG,OAAOxK,EACPqK,GAAYA,EAASjI,OAAS,IAClCoI,EAAOH,EAAS9I,EAAMkJ,cACTzK,IAATwK,IAAoBA,EAAO,IACrC,IAAIR,EAAKvJ,SAASwJ,cAAc,QACL,YAAvBO,EAAK8O,cACRtP,EAAG7F,UAAY,yBAEN6F,EAAG7F,UAAY,sBAEnBU,KAAKmF,GAAKA,E,yDAGV,OAAOnF,KAAKmF,O,KAGL8f,MC8NAS,G,kDApiBX,WAAYhpB,GAAQ,IAAD,8BACf,cAAMA,IACDiD,MAAQ,CACTgmB,UAAU,GACVC,aAAa,CACT,CAACvqB,KAAK,YAAYuN,OAAO,4BAASJ,MAAM,UACvC,CAACnN,KAAK,YAAYuN,OAAO,kCAAUJ,MAAM,UACzC,CAACnN,KAAK,QAAQoJ,MAAM,GAAGmE,OAAO,eAAMJ,MAAM,WAE/Cqd,SAAS,GACTC,YAAY,CACR,CAACzqB,KAAK,OAAOuN,OAAO,eAAMJ,MAAM,UAC/B,CAACnN,KAAK,WAAWuN,OAAO,qBAAOJ,MAAM,UACrC,CAACnN,KAAK,QAAQuN,OAAO,qBAAOJ,MAAM,UAClC,CAACnN,KAAK,OAAOoJ,MAAM,GAAGmE,OAAO,eAAMJ,MAAM,UACzC,CAACnN,KAAK,QAAQoJ,MAAM,GAAGmE,OAAO,eAAMJ,MAAM,WAE/CV,WAAW,IAEXie,wBAAmB5qB,EAAU6qB,uBAAkB7qB,EAC/C8qB,mBAAc9qB,EAAU+qB,kBAAa/qB,EAErCgrB,WAAW,KAAKC,aAAa,KAC7BC,QAAQ,KAAKC,UAAU,KACvBC,iBAAiB,MAErB,EAAKC,iBAAmB,EAAKA,iBAAiB9mB,KAAtB,gBACxB,EAAK+mB,gBAAkB,EAAKA,gBAAgB/mB,KAArB,gBACvB,EAAKgnB,wBAA0B,EAAKA,wBAAwBhnB,KAA7B,gBAC/B,EAAKinB,uBAAyB,EAAKA,uBAAuBjnB,KAA5B,gBAC9B,EAAKknB,iBAAmB,EAAKA,iBAAiBlnB,KAAtB,gBACxB,EAAKmnB,gBAAkB,EAAKA,gBAAgBnnB,KAArB,gBACvB,EAAKonB,sBAAwB,EAAKA,sBAAsBpnB,KAA3B,gBAC7B,EAAKqnB,qBAAuB,EAAKA,qBAAqBrnB,KAA1B,gBAC5B,EAAKsnB,cAAgB,EAAKA,cAActnB,KAAnB,gBACrB,EAAKunB,aAAe,EAAKA,aAAavnB,KAAlB,gBACpB,EAAKwnB,kBAAoB,EAAKA,kBAAkBxnB,KAAvB,gBACzB,EAAKynB,iBAAmB,EAAKA,iBAAiBznB,KAAtB,gBACxB,EAAK0nB,oBAAsB,EAAKA,oBAAoB1nB,KAAzB,gBAC3B,EAAK2nB,mBAAqB,EAAKA,mBAAmB3nB,KAAxB,gBAC1B,EAAK4nB,mBAAqB,EAAKA,mBAAmB5nB,KAAxB,gBAC1B,EAAK6nB,kBAAoB,EAAKA,kBAAkB7nB,KAAvB,gBACzB,EAAK8nB,gBAAkB,EAAKA,gBAAgB9nB,KAArB,gBACvB,EAAK+nB,eAAiB,EAAKA,eAAe/nB,KAApB,gBACtB,EAAKgoB,qBAAuB,EAAKA,qBAAqBhoB,KAA1B,gBAC5B,EAAKioB,oBAAsB,EAAKA,oBAAoBjoB,KAAzB,gBAC3B,EAAKkoB,WAAa,EAAKA,WAAWloB,KAAhB,gBAClB,EAAKmoB,kBAAoB,EAAKA,kBAAkBnoB,KAAvB,gBACzB,EAAKooB,iBAAmB,EAAKA,iBAAiBpoB,KAAtB,gBACxB,EAAKqoB,iBAAmB,EAAKA,iBAAiBroB,KAAtB,gBACxB,EAAKsoB,gBAAkB,EAAKA,gBAAgBtoB,KAArB,gBACvB,EAAKuoB,oBAAsB,EAAKA,oBAAoBvoB,KAAzB,gBAC3B,EAAKwoB,mBAAqB,EAAKA,mBAAmBxoB,KAAxB,gBAC1B,EAAKyoB,gBAAkB,EAAKA,gBAAgBzoB,KAArB,gBArDR,E,gEAwDfiW,KAAQC,YAAY,MACpBD,KAAQE,WAAW,SACnB7V,KAAKC,SAAS,CAAC6H,WAAWlM,SAASqH,eAAe,QAAQC,aAAe,MACzElD,KAAKwmB,mBACLxmB,KAAKknB,oBACLlnB,KAAKmnB,qB,yCASLnnB,KAAKtD,MAAMxB,KAAKwV,cAChByO,GAAaiJ,gBAAgBpoB,KAAK0mB,yBAAwB,SAAC/pB,GAAD,OAASiQ,EAAI9K,MAAMnF,EAAI8K,c,sCAMrE8W,GACZve,KAAKtD,MAAMxB,KAAKwV,cAChB,IAAMxC,EAAO,CAACqQ,UAAUA,EAAUK,QAAQ,OAC1CO,GAAakJ,eAAena,EAAKlO,KAAK2mB,wBAAuB,SAAChqB,GAAD,OAASiQ,EAAI9K,MAAMnF,EAAI8K,c,sCAMvE,IAAD,EACsDzH,KAAK5D,KAAhEmiB,EADK,EACLA,UAAU+J,EADL,EACKA,UAAUla,EADf,EACeA,WAAWma,EAD1B,EAC0BA,aAAaC,EADvC,EACuCA,YACnDjK,EAAUjjB,MAAQ,GAClBgtB,EAAUhtB,MAAQ,GAClB8S,EAAW5R,QAAU,UACrB+hB,EAAUjC,SAAWgM,EAAUhM,SAAWlO,EAAWkO,SAAWiM,EAAajM,SAAWkM,EAAYlM,UAAW,I,qCAMnG,IAAD,EAC2Dtc,KAAK5D,KAApE+f,EADI,EACJA,KAAME,EADF,EACEA,SAAU/gB,EADZ,EACYA,MAAOmtB,EADnB,EACmBA,KAAMpa,EADzB,EACyBA,MAAOqa,EADhC,EACgCA,YAAaC,EAD7C,EAC6CA,WACxDxM,EAAK7gB,MAAQ,GACb+gB,EAAS/gB,MAAQ,GACjBA,EAAMA,MAAQ,GACdmtB,EAAKntB,MAAQ,GACb+S,EAAM7R,QAAU,UAChB2f,EAAKG,SAAWD,EAASC,SAAWhhB,EAAMghB,SAAWmM,EAAKnM,SAAWjO,EAAMiO,SAAWoM,EAAYpM,SAAWqM,EAAWrM,UAAW,I,0CAMlH,IAAD,EACkDtc,KAAK5D,KAAhEmiB,EADS,EACTA,UAAU+J,EADD,EACCA,UAAUla,EADX,EACWA,WAAWma,EADtB,EACsBA,aAAaC,EADnC,EACmCA,YACnDjK,EAAUjC,SAAWgM,EAAUhM,SAAWlO,EAAWkO,SAAWiM,EAAajM,SAAWkM,EAAYlM,UAAW,I,yCAK/F,IAAD,EACuDtc,KAAK5D,KAApE+f,EADQ,EACRA,KAAME,EADE,EACFA,SAAU/gB,EADR,EACQA,MAAOmtB,EADf,EACeA,KAAMpa,EADrB,EACqBA,MAAOqa,EAD5B,EAC4BA,YAAaC,EADzC,EACyCA,WACxDxM,EAAKG,SAAWD,EAASC,SAAWhhB,EAAMghB,SAAWmM,EAAKnM,SAAWjO,EAAMiO,SAAWoM,EAAYpM,SAAWqM,EAAWrM,UAAW,I,8CAMnItc,KAAKgnB,gBACL,IAAM4B,EAAe5oB,KAAKL,MAAMomB,mBAChC/lB,KAAKymB,gBAAiBmC,EAAarK,WAHf,MAKqBve,KAAK5D,KAAvCmiB,EALa,EAKbA,UAAU+J,EALG,EAKHA,UAAUla,EALP,EAKOA,WAC3BmQ,EAAUjjB,MAAQstB,EAAarK,UAC/BA,EAAUjC,UAAW,EACrBgM,EAAUhtB,MAAQstB,EAAaN,UAC/Bla,EAAW5R,QAAiC,MAAvBosB,EAAava,MAAgB,UAAY,GAE9DrO,KAAKinB,eACLjnB,KAAKmnB,mBAELmB,EAAUjc,U,6CAMVrM,KAAKknB,oBACLlnB,KAAKinB,eACL,IAAM2B,EAAe5oB,KAAKL,MAAMqmB,kBAHb,EAI0BhmB,KAAK5D,KAA3C+f,EAJY,EAIZA,KAAME,EAJM,EAINA,SAAU/gB,EAJJ,EAIIA,MAAOmtB,EAJX,EAIWA,KAAMpa,EAJjB,EAIiBA,MACpC8N,EAAK7gB,MAAQstB,EAAazM,KAC1BA,EAAKG,UAAW,EAChBD,EAAS/gB,MAAQstB,EAAavM,SAC9B/gB,EAAMA,MAAQstB,EAAattB,MAC3BmtB,EAAKntB,MAAQstB,EAAaH,KAC1Bpa,EAAM7R,QAAiC,MAAvBosB,EAAava,MAAgB,UAAY,GAEzDgO,EAAShQ,U,6CAQTrM,KAAK4nB,aACL,IAAI3M,EAAW,GAHI,EAIWjb,KAAK5D,KAA5BmiB,EAJY,EAIZA,UAAU+J,EAJE,EAIFA,UAEbnhB,EAASoX,EAAUjjB,MACnB6f,EAAUlF,EAAW4S,cAAc1hB,GAEvC,OADA8T,EAASkL,YAAa,EACjBhL,EAAQ/T,QAObD,EAASmhB,EAAUhtB,MACnB2f,EAASmL,cAAe,EACpBjf,EAAO5J,OAAS,GAAK4J,EAAO5J,OAAS,IACrCqP,EAAI9K,MAAM,kGACVmZ,EAASmL,cAAe,EACxBpmB,KAAKC,SAASgb,IACP,IAGXjb,KAAKC,SAASgb,IACP,KAhBHrO,EAAI9K,MAAMqZ,EAAQ9T,QAClB4T,EAASkL,YAAa,EACtBnmB,KAAKC,SAASgb,IACP,K,4CAqBXjb,KAAK4nB,aACL,IAAI3M,EAAW,GAHG,EAIOjb,KAAK5D,KAAvB+f,EAJW,EAIXA,KAAME,EAJK,EAILA,SAGTlV,EAASgV,EAAK7gB,MACd6f,EAAUlF,EAAW4S,cAAc1hB,GAEvC,OADA8T,EAASoL,SAAU,EACdlL,EAAQ/T,QAObD,EAASkV,EAAS/gB,MAClB2f,EAASqL,WAAY,EACjBnf,EAAO5J,OAAS,GAAK4J,EAAO5J,OAAS,IACrCqP,EAAI9K,MAAM,kGACVmZ,EAASqL,WAAY,EACrBtmB,KAAKC,SAASgb,IACP,IAGXjb,KAAKC,SAASgb,IACP,KAhBHrO,EAAI9K,MAAMqZ,EAAQ9T,QAClB4T,EAASoL,SAAU,EACnBrmB,KAAKC,SAASgb,IACP,K,mCAmBXjb,KAAKC,SAAS,CAACkmB,WAAW,KAAKC,aAAa,KAAKC,QAAQ,KAAKC,UAAU,S,8CAUpDzoB,GACpBmC,KAAKtD,MAAMxB,KAAKgW,cACG,OAAfrT,EAAIuJ,OACJpH,KAAKC,SAAS,CAAC0lB,UAAU9nB,EAAIsY,OACP,SAAftY,EAAIuJ,QACXwF,EAAI9K,MAAMjE,EAAI4J,W,6CAOC5J,GACnBmC,KAAKtD,MAAMxB,KAAKgW,cACG,OAAfrT,EAAIuJ,OACJpH,KAAKC,SAAS,CAAC4lB,SAAShoB,EAAIsY,OACN,SAAftY,EAAIuJ,QACXwF,EAAI9K,MAAMjE,EAAI4J,W,uCAOLqhB,QACU3tB,IAAnB2tB,EAAQljB,SACZ5F,KAAKC,SAAU,CACX8lB,mBAAmB/lB,KAAKL,MAAMgmB,UAAUmD,EAAQljB,QAChDsgB,kBAAa/qB,EAAU8qB,cAAc,SAEzCvK,WAAW1b,KAAK8mB,sBAAsB,Q,sCAM1BgC,QACW3tB,IAAnB2tB,EAAQljB,SACZ5F,KAAKC,SAAU,CACX+lB,kBAAkBhmB,KAAKL,MAAMkmB,SAASiD,EAAQljB,QAC9CsgB,aAAa,OAAOD,mBAAc9qB,IAEtCugB,WAAW1b,KAAK+mB,qBAAqB,Q,4CAOrC,GAAK/mB,KAAK0nB,uBAAV,CACA1nB,KAAKtD,MAAMxB,KAAKwV,cAChB,IAAIwO,EAAQ7c,IAAOpG,UAAU+D,MAC7Bkf,EAAM6J,SAAW/oB,KAAKL,MAAMsmB,cAC5B9G,GAAa6J,cAAc9J,EAAMlf,KAAK6nB,mBAAkB,SAAClrB,GAAD,OAASiQ,EAAI9K,MAAMnF,EAAI8K,e,wCAMjE5J,GACdmC,KAAKtD,MAAMxB,KAAKgW,cACG,OAAfrT,EAAIuJ,QACJpH,KAAKgnB,gBACLhnB,KAAKknB,oBACLlnB,KAAKwmB,mBACL5Z,EAAIjL,GAAG9D,EAAI4J,UAES,SAAf5J,EAAIuJ,QACTwF,EAAI9K,MAAMjE,EAAI4J,W,2CAOlB,IAAMmhB,EAAe5oB,KAAKL,MAAMomB,mBAChC/lB,KAAKtD,MAAMxB,KAAK+tB,YAAY,wCAAUL,EAAaN,UAAY,sDAActoB,KAAKioB,oBAAoBjoB,KAAKmoB,mB,4CAG3G,IAAMS,EAAe5oB,KAAKL,MAAMomB,mBAChC/lB,KAAKtD,MAAMxB,KAAKwV,cACZ1Q,KAAKL,MAAM4mB,mBACXqC,EAAaM,eAAgB,GACjC/J,GAAagK,gBAAgBP,EAAa5oB,KAAK+nB,kBAAiB,SAACprB,GAAD,OAASiQ,EAAI9K,MAAMnF,EAAI8K,c,uCAE1E5J,GACbmC,KAAKtD,MAAMxB,KAAKgW,cACG,OAAfrT,EAAIuJ,QACJpH,KAAKgnB,gBACLhnB,KAAKknB,oBACLlnB,KAAKwmB,mBACLxmB,KAAKC,SAAS,CAACsmB,iBAAiB,OAChC3Z,EAAIjL,GAAG9D,EAAI4J,UAES,SAAf5J,EAAIuJ,SACS,qBAAdvJ,EAAIvC,OACJ0E,KAAKC,SAAS,CAACsmB,kBAAiB,IAChCvmB,KAAKtD,MAAMxB,KAAK+tB,YAAY,wCAAUprB,EAAI4J,QAAQzH,KAAKioB,oBAAoBjoB,KAAKmoB,mBAEhFnoB,KAAKC,SAAS,CAACsmB,iBAAiB,OAChC3Z,EAAI9K,MAAMjE,EAAI4J,a,wCAKtBzH,KAAKC,SAAS,CAACsmB,iBAAiB,S,2CAQhC,GAAKvmB,KAAK2nB,sBAAV,CACA3nB,KAAKtD,MAAMxB,KAAKwV,cAChB,IAAIwO,EAAQ7c,IAAOpG,UAAU+D,MAC7Bkf,EAAM6J,SAAW/oB,KAAKL,MAAMumB,aAC5B/G,GAAaiK,SAASlK,EAAMlf,KAAK8nB,kBAAiB,SAACnrB,GAAD,OAASiQ,EAAI9K,MAAMnF,EAAI8K,e,uCAM5D5J,GACbmC,KAAKtD,MAAMxB,KAAKgW,cACG,OAAfrT,EAAIuJ,QACJpH,KAAKinB,eACLjnB,KAAKmnB,mBACLnnB,KAAKymB,gBAAgBzmB,KAAKL,MAAMomB,mBAAmBxH,WACnD3R,EAAIjL,GAAG9D,EAAI4J,UAES,SAAf5J,EAAIuJ,QACTwF,EAAI9K,MAAMjE,EAAI4J,W,0CAOlB,IAAMmhB,EAAe5oB,KAAKL,MAAMqmB,kBAChChmB,KAAKtD,MAAMxB,KAAK+tB,YAAY,4BAAQL,EAAavM,SAAW,sDAAcrc,KAAKkoB,mBAAmBloB,KAAKmoB,mB,2CAGvG,IAAMS,EAAe5oB,KAAKL,MAAMqmB,kBAChC7G,GAAakK,WAAWT,EAAa5oB,KAAKgoB,iBAAgB,SAACrrB,GAAD,OAASiQ,EAAI9K,MAAMnF,EAAI8K,c,sCAErE5J,GACZmC,KAAKtD,MAAMxB,KAAKgW,cACG,OAAfrT,EAAIuJ,QACJpH,KAAKinB,eACLjnB,KAAKmnB,mBACLnnB,KAAKymB,gBAAgBzmB,KAAKL,MAAMomB,mBAAmBxH,WACnD3R,EAAIjL,GAAG9D,EAAI4J,UAES,SAAf5J,EAAIuJ,QACTwF,EAAI9K,MAAMjE,EAAI4J,W,wCAQlBzH,KAAKC,SAAS,CAAC8lB,wBAAmB5qB,EAAU8qB,cAAc,MAAMC,kBAAa/qB,IAC7E6E,KAAKgnB,gBACLhnB,KAAKinB,eACLjnB,KAAKmnB,mBACLnnB,KAAK5D,KAAKmiB,UAAUlS,U,uCAMfrM,KAAKL,MAAMomB,oBAIhB/lB,KAAKC,SAAS,CAAC+lB,uBAAkB7qB,EAAU8qB,mBAAc9qB,EAAU+qB,aAAa,QAChFlmB,KAAKinB,eACLjnB,KAAKknB,oBACLlnB,KAAK5D,KAAK+f,KAAK9P,SANXO,EAAI9K,MAAM,yD,+BAUR,IAAD,SAGD9B,KAAKL,MADLmI,EAFC,EAEDA,WAAY6d,EAFX,EAEWA,UAAWC,EAFtB,EAEsBA,aAAcC,EAFpC,EAEoCA,SAAUC,EAF9C,EAE8CA,YAEnD,OAAO,yBAAKxmB,UAAU,6BAClB,yBAAKA,UAAW,UAAW6D,MAAO,CAACC,QAAQ,SAE3C,yBAAK9D,UAAU,YACX,0BAAMA,UAAU,SAAhB,mCACA,kBAAC,IAAD,CAAMjD,IAAK,YAAaqE,QAASV,KAAK4mB,iBAClCra,KAAMoZ,EAAW3N,cAAe,CAACC,WAAW,GAC5CtQ,QAASie,EACT9d,WAAYA,EACZoQ,SAAS,EAAOC,SAAS,IAE7B,yBAAK7Y,UAAU,kBACX,8BACA,4BAAQA,UAAU,gBAAgBoB,QAAS,kBAAM,EAAK8mB,oBAAtD,kBAGR,yBAAKloB,UAAU,YACX,0BAAMA,UAAU,SAAhB,uBACA,kBAAC,IAAD,CAAMjD,IAAK,WAAYqE,QAASV,KAAK6mB,gBACjCta,KAAMsZ,EAAU7N,cAAe,CAACC,WAAW,GAC3CtQ,QAASme,EACThe,WAAYA,EACZoQ,SAAS,EAAOC,SAAS,IAE7B,yBAAK7Y,UAAU,kBACX,8BACA,4BAAQA,UAAU,gBAAgBoB,QAAS,kBAAM,EAAK+mB,mBAAtD,kBAGR,yBAAKnoB,UAAU,WAAW6D,MAAO,CAACmmB,WAAY,KAE1C,yBAAKhqB,UAAU,eACf,+BACI,+BACI,4BACI,wDAAS,0BAAMA,UAAU,aAAhB,MACT,4BACI,yBAAKA,UAAU,aACX,2BAAOjD,IAAI,YAAYE,KAAK,OAAO+C,UAAU,gBAIzD,4BACI,8DAAU,0BAAMA,UAAU,aAAhB,MACV,4BACI,yBAAKA,UAAU,aACX,2BAAOjD,IAAI,YAAYE,KAAK,OAAO+C,UAAU,gBAIzD,4BACI,wDACA,4BACI,yBAAKA,UAAU,aACX,2BAAO/C,KAAK,WAAWF,IAAI,aAAaiD,UAAU,8BAMlE,yBAAKA,UAAU,YAAW,uBAAGA,UAAU,QACnC,4BAAQjD,IAAI,eAAeiD,UAAU,gBAAgBoB,QAAS,kBAAM,EAAK0mB,wBAAzE,6BACA,4BAAQ/qB,IAAI,cAAciD,UAAU,gBAAgBoB,QAAS,kBAAM,EAAK2mB,uBAAxE,mBAKR,yBAAK/nB,UAAU,eACf,+BACI,+BACI,4BACI,4CAAO,0BAAMA,UAAU,aAAhB,MACP,4BACI,yBAAKA,UAAU,aACf,2BAAOjD,IAAI,OAAOE,KAAK,OAAO+C,UAAU,gBAIhD,4BACI,kDAAQ,0BAAMA,UAAU,aAAhB,MACR,4BACI,yBAAKA,UAAU,aACf,2BAAOjD,IAAI,WAAWE,KAAK,OAAO+C,UAAU,gBAIpD,4BACI,kDACA,4BACI,yBAAKA,UAAU,aACf,2BAAOjD,IAAI,QAAQE,KAAK,OAAO+C,UAAU,gBAIjD,4BACI,4CACA,4BACI,yBAAKA,UAAU,aACf,2BAAOjD,IAAI,OAAOE,KAAK,SAAS+C,UAAU,kBAIlD,4BACI,wDACA,4BACI,yBAAKA,UAAU,aACf,2BAAO/C,KAAK,WAAWF,IAAI,QAAQiD,UAAU,8BAOzD,yBAAKA,UAAU,YAAW,uBAAGA,UAAU,QACnC,4BAAQjD,IAAI,cAAciD,UAAU,gBAAgBoB,QAAS,kBAAM,EAAK4mB,uBAAxE,6BACA,4BAAQjrB,IAAI,aAAaiD,UAAU,gBAAgBoB,QAAS,kBAAM,EAAK6mB,sBAAvE,0B,GA5hBIhoB,aCoLbgqB,G,kDArLX,WAAY7sB,GAAQ,IAAD,8BACf,cAAMA,IACDiD,MAAQ,CACTiI,SAAS,GACTD,QAAQ,GACRG,WAAW,IACX6M,UAAU,EACVC,gBAAgB,EAChBC,aAAa,EACbqC,YAAW,EACXH,cAAc,GACdC,mBAAmB,GACnBF,iBAAiB,GAErB,EAAKhC,YAAc,EAAKA,YAAYpV,KAAjB,gBACnB,EAAKqV,aAAe,EAAKA,aAAarV,KAAlB,gBACpB,EAAKsV,gBAAkB,EAAKA,gBAAgBtV,KAArB,gBACvB,EAAK8V,WAAa,EAAKA,WAAW9V,KAAhB,gBACxB,EAAK2V,WAAa,EAAKA,WAAW3V,KAAhB,gBAClB,EAAKuV,WAAa,EAAKA,WAAWvV,KAAhB,gBACZ,EAAKwV,YAAc,EAAKA,YAAYxV,KAAjB,gBACnB,EAAKyV,eAAiB,EAAKA,eAAezV,KAApB,gBACtB,EAAK0V,mBAAqB,EAAKA,mBAAmB1V,KAAxB,gBAtBX,E,gEAyBfiW,KAAQC,YAAY,MACpBD,KAAQE,WAAW,SACnB7V,KAAK8U,YAAY,K,kCAWT/U,EAAKiW,QACA7a,IAAT4E,IAAoBA,EAAOC,KAAKL,MAAMgV,WAC1C3U,KAAKtD,MAAMxB,KAAKwV,cAChB,IAAIxC,EAAO,CACPnO,KAAKA,QAEU5E,IAAf6a,IACAA,EAAaC,EAAW/O,iBAAiB8O,GACzC9H,EAAK4H,OAASE,GAElBmJ,GAAakG,iBAAiBnX,EAAKlO,KAAK+U,cAAa,SAACpY,GAAD,OAASiQ,EAAI9K,MAAMnF,EAAI8K,c,mCAUnE5J,GAET,GADAmC,KAAKtD,MAAMxB,KAAKgW,cACC,OAAbrT,EAAIuJ,OAAe,CACnB,IAAMgP,EAAYvY,EAAI0O,KAMtBvM,KAAKC,SAAS,CAAC2H,SAAS/J,EAAIsY,KAAKxB,UAAUyB,EAAUrW,KAAK6U,gBAAgBwB,EAAUjW,WAAW0U,aAAauB,EAAUtW,UAAU6H,QALhH,CACZ,CAACtM,KAAK,mBAAmBuN,OAAO,qBAAqBJ,MAAM,QAC1D,CAACnN,KAAK,eAAeuN,OAAO,qBAAMJ,MAAM,UACxC,CAACnN,KAAK,cAAcuN,OAAO,eAAKJ,MAAM,eAGrB,SAAf3K,EAAIuJ,QACXwF,EAAI9K,MAAMjE,EAAI4J,W,sCAON1H,GACZC,KAAK8U,YAAY/U,EAAMC,KAAKL,MAAMqW,c,mCAMlChW,KAAK8U,YAAY9U,KAAKL,MAAMgV,UAAW3U,KAAK5D,KAAK0Z,OAAOxa,S,mCAK9C,IAAD,OACFkuB,EAA0BxpB,KAAKL,MAA/B6pB,uBAEPxpB,KAAKtD,MAAMxB,KAAKoP,UADF,+CAGV,kBAAC,GAAD,CAAiBpP,KAAM8E,KAAKtD,MAAMxB,KAAMyc,gBAAuCxc,IAA3BquB,EAAsCA,uBAAwBA,EAAwBhnB,QAAS,SAAC7B,GAAO,EAAKjE,MAAMxB,KAAKqP,UAHjK,gDAGkL,EAAKuK,iBACjM,CAACrQ,MAAM,IAAKC,OAAO,IAAKL,qBAAoB,GAAO,KAAK,Q,mCAO1CrE,KAAK5D,KAAK0I,KAAKuS,cAAcC,iBACjC/Z,OAAS,EACnByC,KAAKtD,MAAMxB,KAAK+tB,YAAY,+CAAY,oFAAmBjpB,KAAKmV,eAAenV,KAAKoV,oBACnFxI,EAAI/K,KAAK,wF,uCAQd,IAFA,IAAM4nB,EAAYzpB,KAAK5D,KAAK0I,KAAKuS,cAAcC,iBAC3CoS,EAAmB,GACdpsB,EAAE,EAAGA,EAAEmsB,EAAUlsB,OAAQD,IAC9BosB,EAAiBnpB,KAAMkpB,EAAUnsB,GAAGmU,kBAExC0N,GAAawK,mBAAmBD,EAAiB1pB,KAAKkV,aAAY,SAACvU,GAAD,OAAOiM,EAAI9K,MAAMnB,EAAE8G,c,gFAY7E5J,GACRmC,KAAK8U,cACc,OAAfjX,EAAIuJ,OACJwF,EAAIjL,GAAG,gFAEa,SAAf9D,EAAIuJ,QACTwF,EAAI9K,MAAMjE,EAAI4J,W,+BAIZ,IAAD,SAC+DzH,KAAKL,MAApEiI,EADA,EACAA,SAAUD,EADV,EACUA,QAASgN,EADnB,EACmBA,UAAWC,EAD9B,EAC8BA,gBAAiBC,EAD/C,EAC+CA,aACpD,OAAO,yBAAKvV,UAAU,eAAc,yBAAKA,UAAU,mBACjD,yBAAKA,UAAU,2CAEb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,OAAd,6BAGF,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,wCAAuC,yBAAKA,UAAU,gBACjE,4BAAI,4BACJ,0BAAMA,UAAU,MAAMiO,GAAG,cAAzB,sBACA,2BAAOlR,IAAI,SAASE,KAAK,OAAO+C,UAAU,eAAeyN,YAAY,kEAAgB5J,MAAO,CAACsB,MAAM,KAC/FwI,UAAW,SAACtM,GAAD,OAAqB,KAAdA,EAAEuM,QAAiB,EAAKsI,aAAe,UAE7D,uBAAGxL,KAAK,SAAS1K,UAAU,gBAAgBoB,QAAS,kBAAM,EAAK8U,eAA/D,kBAGJ,uBAAGxL,KAAK,SAAS1K,UAAU,uBAAuBoB,QAASV,KAAKqV,cAGpE,yBAAK/V,UAAU,kBACX,yCAAe+C,IAAOnD,SAAS0V,KAEnC,kBAAC,IAAD,CAAMvY,IAAK,OAAQ0b,WAAY,CAAC,YAC5BxL,KAAM3E,EAAUoQ,cAAe,CAACC,WAAW,GAC3CtQ,QAASA,EACTuQ,SAAS,EAAOC,SAAS,IAE7B,yBAAK7Y,UAAU,iCACX,4BAAQA,UAAU,+BAA+BoB,QAASV,KAAKiV,YAA/D,gBACA,kBAAC,EAAD,CAAY5Y,IAAK,OACD0D,KAAM4U,EACNxU,WAAYyU,EACZxU,QAASyU,EACTpV,YAAaO,KAAKgV,0B,GA9KhBzV,aCgJnBqqB,G,kDAhJX,WAAYltB,GAAQ,IAAD,8BACf,cAAMA,IACDiD,MAAQ,CACT0b,UAAU,KACVnC,YAAW,EACXC,aAAY,EACZ0Q,WAAU,GAEd,EAAKxU,WAAa,EAAKA,WAAW3V,KAAhB,gBAClB,EAAK8C,QAAU,EAAKA,QAAQ9C,KAAb,gBACf,EAAKoqB,eAAiB,EAAKA,eAAepqB,KAApB,gBACtB,EAAK4Z,aAAe,EAAKA,aAAa5Z,KAAlB,gBACpB,EAAK2Z,gBAAkB,EAAKA,gBAAgB3Z,KAArB,gBAZR,E,gEAefM,KAAKC,SAAS,CACVob,UAAU,KACVwO,WAAU,EACVlS,YAAW,IAEf3X,KAAK5D,KAAKqV,iBAAiBpF,U,2CAET,IACV6M,EAAelZ,KAAKL,MAApBuZ,WACalZ,KAAKtD,MAApBib,aACauB,GACflZ,KAAKC,SAAS,CAACiZ,YAAW,M,mCASvB,IACNvB,EAAc3X,KAAKtD,MAAnBib,WACD,GAAK3X,KAAKqZ,kBAAV,CACN,IAAInL,EAAOjS,oBAAU+D,MACrBkO,EAAK6a,SAAWpR,EAAa,OAAS,MAChCwH,GAAa4K,mBAAmB7b,EAAKlO,KAAK8pB,gBAAe,SAACnpB,GAAD,OAAOiM,EAAI9K,MAAMnB,EAAE8G,e,wCAO5E,IAAKzH,KAAKL,MAAMwZ,YAEZ,OADAvM,EAAI/K,KAAK,oEACF,EAGX7B,KAAKC,SAAS,CAACob,UAAU,KAAK2O,SAAS,OAEvC,IAAI7iB,EAASnH,KAAK5D,KAAKqV,iBAAiBnW,MACpC6f,EAAUlF,EAAWgU,oBAAoB9iB,GACzC8T,EAAW,CACfA,WAAqB,GACrB,OAAKE,EAAQ/T,QAObpH,KAAKC,SAASgb,IACP,IAPHrO,EAAI9K,MAAMqZ,EAAQ9T,QAClB4T,EAASI,WAAY,EACrBrb,KAAKC,SAASgb,IACP,K,qCAaXjb,KAAKC,SAAS,CAACkZ,aAAY,EAAK0Q,WAAU,M,qCAM/BhsB,GACXmC,KAAKC,SAASD,KAAKub,cACA,OAAf1d,EAAIuJ,QAEJwF,EAAIjL,GAAG9D,EAAI4J,SACXzH,KAAKtD,MAAM8F,WACW,SAAf3E,EAAIuJ,QACXwF,EAAI9K,MAAMjE,EAAI4J,W,gCAMX,IAAD,OACNiU,YAAW,SAAC/a,GAAD,OAAO,EAAKjE,MAAM8F,YAAU,O,qCAOnCxC,KAAK5D,KAAK8tB,YAAY5uB,MAAMiC,OADjB,MAEXyC,KAAK5D,KAAK8tB,YAAY5uB,MAAQ0E,KAAK5D,KAAK8tB,YAAY5uB,MAAMgH,OAAO,EAFtD,MAIftC,KAAKC,SAAS,CAAC+Y,WAAWhZ,KAAK5D,KAAK8tB,YAAY5uB,MAAMiC,OAAO4b,aAAY,M,+BAGnE,IAAD,OACLqQ,EAA2BxpB,KAAKtD,MAAhC8sB,uBACDxQ,EAAchZ,KAAKL,MAAnBqZ,WAKC,YAHyB7d,IAA3BquB,IAAsCA,EAAyB,IAChD,IAAfxQ,GAA2D,OAAvCwQ,EAAuBU,kBAA+D/uB,IAAvCquB,EAAuBU,aAA6BV,EAAuBU,YAAY3sB,OAAS,IAC7Jyb,EAAawQ,EAAuBU,YAAY3sB,QAC7C,yBAAK+B,UAAU,eAClB,+BACI,+BACA,4BACI,qEACA,4BACA,yBAAKA,UAAU,aAC7B,2BAAO/C,KAAK,OAAOF,IAAI,mBAAmBiD,UAAU,WAAWiO,GAAG,YAAYR,YAAY,+DACvEwP,SAAU,SAAC5b,GAAO,EAAK2Y,gBAAiBkD,UAAU,KAAKrP,aAAcqc,EAAuB/X,sBAKrG,4BACA,2CACA,wBAAItO,MAAO,CAACuF,UAAU,UAClB,8BAAUrM,IAAI,cAAcyM,KAAK,IAAIiU,KAAK,MAAMC,UAAU,MAAMT,SAAU,SAAC5b,GAAD,OAAO,EAAK6Y,gBAAgBrM,aAAcqc,EAAuBU,cAC3I,0BAAM5qB,UAAU,YAAY6D,MAAO,CAACmO,aAAa,IAAjD,IAAsD,0BAAMnO,MAAO,CAACiP,MAAM,YAAa4G,GAAvF,eAKR,yBAAK1Z,UAAU,oCAAmC,uBAAGA,UAAU,QAC3D,4BAAQA,UAAU,gBAAgBoB,QAAS,kBAAM,EAAKhE,MAAM8F,YAA5D,gBACA,4BAAQlD,UAAU,gBAAgBoB,QAAS,kBAAM,EAAK2U,eAAtD,uB,GA5Ic9V,aCLxB4qB,G,kDACF,WAAYztB,GAAQ,IAAD,8BACf,cAAMA,IACDiD,MAAQ,CACTiI,SAAS,GACTD,QAAQ,CACJ,CAACtM,KAAK,YAAYuN,OAAO,aAAanE,MAAM,KAC5C,CAACpJ,KAAK,aAAauN,OAAO,WAAWnE,MAAM,GAAG+D,MAAM,UACpD,CAACnN,KAAK,UAAUuN,OAAO,cAAcnE,MAAM,IAAI+D,MAAM,UACrD,CAACnN,KAAK,SAASuN,OAAO,OAAOnE,MAAM,IAAI+D,MAAM,UAC7C,CAACnN,KAAK,SAASuN,OAAO,SAASnE,MAAM,GAAG+D,MAAM,WAElDV,WAAW,IACX6M,UAAU,EACVC,gBAAgB,EAChBC,aAAa,GAEjB,EAAKC,YAAc,EAAKA,YAAYpV,KAAjB,gBACnB,EAAKqV,aAAe,EAAKA,aAAarV,KAAlB,gBACpB,EAAKsV,gBAAkB,EAAKA,gBAAgBtV,KAArB,gBACvB,EAAK8V,WAAa,EAAKA,WAAW9V,KAAhB,gBAClB,EAAK0qB,iBAAmB,EAAKA,iBAAiB1qB,KAAtB,gBApBT,E,gEAuBfM,KAAK8U,YAAY,K,kCAET/U,EAAKgW,EAAQC,QACR7a,IAAT4E,IAAoBA,EAAOC,KAAKL,MAAMgV,WAC1C3U,KAAKtD,MAAMxB,KAAKwV,cAChB,IAAMxC,EAAO,CACTnO,KAAKA,QAEO5E,IAAZ4a,QAAwC5a,IAAf6a,IAEzBA,EAAaC,EAAW/O,iBAAiB8O,GAEzC9H,EAAK4H,OAASE,EACd9H,EAAK6H,QAAUA,GAEnBG,GAAaC,KAAKjI,EAAKlO,KAAK+U,cAAa,SAACpY,GAAD,OAASiQ,EAAI9K,MAAMnF,EAAI8K,c,mCAEvD5J,GAIT,GAHAmC,KAAKtD,MAAMxB,KAAKgW,cAGC,OAAbrT,EAAIuJ,OAAe,CACnB,IAAMgP,EAAYvY,EAAI0O,KAChB5E,EAAU,CACZ,CAACtM,KAAK,YAAYuN,OAAO,aAAanE,MAAM,IAAI8M,UAAS,GACzD,CAAClW,KAAK,aAAauN,OAAO,WAAWnE,MAAM,IAAI+D,MAAM,SAAS+I,UAAS,GACvE,CAAClW,KAAK,UAAUuN,OAAO,cAAcnE,MAAM,IAAI+D,MAAM,SAAS+I,UAAS,GACvE,CAAClW,KAAK,SAASuN,OAAO,OAAOnE,MAAM,IAAI+D,MAAM,SAAS+I,UAAS,GAC/D,CAAClW,KAAK,SAASuN,OAAO,SAASnE,MAAM,GAAG+D,MAAM,SAAS8I,aAAa,EAAEC,UAAS,EAC3EjM,SAAU,CAAE/I,KAAM8tB,GAAc9kB,QAAS,CAAEC,SAAS3H,EAAIsY,KAAKiU,iBAAiBpqB,KAAKoqB,qBAG3FpqB,KAAKC,SAAS,CAAC2H,SAAS/J,EAAIsY,KAAKxB,UAAUyB,EAAUrW,KAAK6U,gBAAgBwB,EAAUjW,WAAW0U,aAAauB,EAAUtW,UAAU6H,QAAQA,QAElH,SAAf9J,EAAIuJ,QACXwF,EAAI9K,MAAMjE,EAAI4J,W,mCAWlBzH,KAAK8U,YAAY,EAAG,YAAa9U,KAAK5D,KAAK0Z,OAAOxa,S,uCAErCqK,GACT3F,KAAKtD,MAAM0tB,kBACXpqB,KAAKtD,MAAM0tB,iBAAiBzkB,GAChC3F,KAAKtD,MAAM8F,Y,sCAMCzC,GAAM,IAEX+V,EAAU9V,KAAK5D,KAAf0Z,OACP9V,KAAK8U,YAAY/U,EAAK,YAAY+V,EAAOxa,S,+BAEnC,IAAD,SAID0E,KAAKL,MAFLiI,EAFC,EAEDA,SAAUD,EAFT,EAESA,QACVgN,EAHC,EAGDA,UAAWC,EAHV,EAGUA,gBAAiBC,EAH3B,EAG2BA,aAEhC,OAAO,yBAAK1R,MAAO,CAACwF,QAAQ,IACxB,yBAAKrJ,UAAU,mBAAmB6D,MAAO,CAAC6hB,aAAc,KACpD,yBAAK1lB,UAAU,yBAAyB6D,MAAO,CAACuZ,YAAa,GAAGjY,MAAM,SAOlE,2BAAOpI,IAAI,SAASE,KAAK,OAAO+C,UAAU,gBAAgByN,YAAY,aAAa5J,MAAO,CAACsB,MAAM,KAAMwI,UAAW,SAACtM,GAAD,OAAqB,KAAdA,EAAEuM,QAAiB,EAAKsI,aAAe,QAChK,uBAAGxL,KAAK,SAAS1K,UAAU,gBAAgBoB,QAAS,kBAAM,EAAK8U,eAA/D,kBAGR,yBAAKrS,MAAO,CAACmmB,WAAW,IACpB,kBAAC,EAAD,CAAU3hB,QAASA,EAASC,SAAUA,IACtC,kBAAC,EAAD,CAAYvL,IAAK,OACb0D,KAAM4U,EACNxU,WAAYyU,EACZxU,QAASyU,EACTpV,YAAaO,KAAKgV,wB,GA9GXzV,aAuHrB8qB,G,uKACQ,IACC1kB,EAAQ3F,KAAKtD,MAAbiJ,KACAykB,EAAoBpqB,KAAKtD,MAAM6I,QAA/B6kB,iBACP,OAAO,4BAAQ9qB,UAAU,yBAAyBoB,QAAS,kBAAM0pB,EAAiBzkB,KAA3E,c,GAJYpG,aAOZ4qB,MCqUAG,G,kDA1bX,WAAY5tB,GAAQ,IAAD,8BACf,cAAMA,IACDiD,MAAQ,CACT0b,UAAU,KACVkP,aAAa,KACbC,aAAa,KACbX,WAAU,EACV7Q,WAAW,EACXtX,SAAS,EACT+oB,mBAActvB,EACd8d,iBAAY9d,EACZ+d,YAAW,EACXwR,uBAAkBvvB,EAClBge,aAAY,EACZwR,kBAAkB,GAClBC,6BAAwBzvB,EACxB+pB,iBAAiB,GACjB2F,8BAAyB1vB,EAClC2vB,OAAO,IAEF,EAAKzV,WAAa,EAAKA,WAAW3V,KAAhB,gBAGlB,EAAK8C,QAAU,EAAKA,QAAQ9C,KAAb,gBACf,EAAKqrB,iBAAmB,EAAKA,iBAAiBrrB,KAAtB,gBACxB,EAAKsrB,kBAAoB,EAAKA,kBAAkBtrB,KAAvB,gBACzB,EAAKoqB,eAAiB,EAAKA,eAAepqB,KAApB,gBAEtB,EAAKylB,yBAA2B,EAAKA,yBAAyBzlB,KAA9B,gBAItC,EAAK8Z,aAAe,EAAKA,aAAa9Z,KAAlB,gBACd,EAAKurB,gBAAkB,EAAKA,gBAAgBvrB,KAArB,gBACvB,EAAKwrB,sBAAwB,EAAKA,sBAAsBxrB,KAA3B,gBAC7B,EAAKyrB,cAAgB,EAAKA,cAAczrB,KAAnB,gBAnCN,E,gEAuCfM,KAAKC,SAAS,CACVob,UAAU,KACVwO,WAAU,EACV7Q,WAAW,EACXtX,SAAS,EACT+oB,mBAActvB,EACd8d,iBAAY9d,EACZwc,YAAW,IAEf3X,KAAK5D,KAAK2hB,YAAY1R,QAEtB8S,GAAakG,iBAAiB,GAAGrlB,KAAKmlB,0BAAyB,SAACxoB,GAAD,OAASiQ,EAAI9K,MAAMnF,EAAI8K,c,2CAEpE,IACVyR,EAAelZ,KAAKL,MAApBuZ,WACalZ,KAAKtD,MAApBib,aACauB,GACflZ,KAAKC,SAAS,CAACiZ,YAAW,EAAM2Q,WAAU,M,+CAIzBhsB,GACJ,OAAbA,EAAIuJ,OACJpH,KAAKC,SAAS,CAACilB,iBAAiBrnB,EAAIsY,OACd,SAAftY,EAAIuJ,QACXwF,EAAI9K,MAAMjE,EAAI4J,W,qCAIlBzH,KAAKC,SAAS,CAACkZ,aAAY,EAAK0Q,WAAU,M,mCAiB1C,GAAK7pB,KAAKqZ,kBAAV,CACA,IAAInL,EAAOjS,oBAAU+D,MAGrBorB,GAAe/d,OAAOa,EAAKlO,KAAK8pB,gBAAe,SAACnpB,GAAD,OAAOiM,EAAI9K,MAAMnB,EAAE8G,e,wCAIlE,IAAKzH,KAAKL,MAAMwZ,YAEZ,OADAvM,EAAI/K,KAAK,oEACF,EAGX7B,KAAKC,SAAS,CAACob,UAAU,OAEzB,IAAIlU,EAASnH,KAAK5D,KAAK2hB,YAAYziB,MAC/B6f,EAAUlF,EAAWoV,eAAelkB,GACpC8T,EAAW,CACfA,WAAqB,GACrB,IAAKE,EAAQ/T,OAIT,OAHAwF,EAAI9K,MAAMqZ,EAAQ9T,QAClB4T,EAASI,WAAY,EACrBrb,KAAKC,SAASgb,IACP,EAgBX,GAHA9T,EAASnH,KAAK5D,KAAKkvB,MAAMhwB,MACzB6f,EAAUlF,EAAWsV,mBAAmBpkB,GACxC8T,EAASuQ,YAAa,GACjBrQ,EAAQ/T,OAIT,OAHAwF,EAAI9K,MAAMqZ,EAAQ9T,QAClB4T,EAASuQ,YAAa,EACtBxrB,KAAKC,SAASgb,IACP,EAKX,IADA9T,EAASnH,KAAK5D,KAAKqvB,SAASnwB,OACjBiC,OAAS,GAEhB,GAAiB,SAAX4J,GAAgC,UAAXA,GAAiC,YAAXA,GAAmC,WAAXA,GAAkC,YAAXA,GAAmC,aAAXA,GAAoC,YAAXA,GAEvH,KADtBA,EAASA,EAAOukB,MAAM,MACXnuB,OAEP,OADAqP,EAAI9K,MAAM,mGACH,OAIf9B,KAAK5D,KAAKqvB,SAASnwB,MAAQ,OAM/B,OAFA6L,EAASnH,KAAK5D,KAAKwa,QAAQtb,MAC3B2f,EAASsP,cAAe,EACpBpjB,EAAO5J,OAAS,GAChBqP,EAAI9K,MAAM,6DACVmZ,EAASsP,cAAe,EACxBvqB,KAAKC,SAASgb,IACP,IAcXjb,KAAKC,SAASgb,IACP,K,qCAEIpd,GACXmC,KAAKC,SAASD,KAAKub,cACA,OAAf1d,EAAIuJ,QAEJwF,EAAIjL,GAAG9D,EAAI4J,SAEXzH,KAAKtD,MAAM8F,WACW,SAAf3E,EAAIuJ,QACXwF,EAAI9K,MAAMjE,EAAI4J,W,gCAGX,IAAD,OACNiU,YAAW,SAAC/a,GAAD,OAAO,EAAKjE,MAAM8F,YAAU,O,yCAGvB,IAAD,OAEfxC,KAAKC,SAAS,CAACyqB,uBAAkBvvB,IACjC6E,KAAKtD,MAAMxB,KAAKoP,UACZ,4BACA,kBAAC,GAAD,CAAcpP,KAAM8E,KAAKtD,MAAMxB,KAAMsb,SAAS,EAAMC,aAAc,SAAC9Q,GAAD,OAAU,EAAK1F,SAAS,CAACyqB,kBAAkB/kB,KAAQ+Q,YAAa1W,KAAKgrB,kBAAmBxoB,QAAS,kBAAM,EAAK9F,MAAMxB,KAAKqP,UAAU,gCACnM,CAAC9F,MAAM,IAAKC,OAAO,IAAK5B,QAAQ,gBAAM9C,KAAKgrB,mBAC3C,WACIpqB,QAAQC,IAAI,c,0CAIH,IACZ6pB,EAAqB1qB,KAAKL,MAA1B+qB,kBACAA,EAMD1qB,KAAK2rB,aAAajB,GALlB9d,EAAI9K,MAAM,qE,qCAqEV9B,KAAK5D,KAAKwvB,YAAYtwB,MAAMiC,OADjB,MAEXyC,KAAK5D,KAAKwvB,YAAYtwB,MAAQ0E,KAAK5D,KAAKwvB,YAAYtwB,MAAMgH,OAAO,EAFtD,MAIftC,KAAKC,SAAS,CAAC+Y,WAAWhZ,KAAK5D,KAAKwvB,YAAYtwB,MAAMiC,OAAO4b,aAAY,M,wCAE7D,IAAD,OAMXnZ,KAAKtD,MAAMxB,KAAKoP,UADC,qBAGb,kBAAC,GAAD,CAAcpG,MAHD,qBAGkBhJ,KAAM8E,KAAKtD,MAAMxB,KAAMsH,QAAS,SAAC7B,GAAD,OAAO,EAAKjE,MAAMxB,KAAKqP,UAHzE,uBAG8F6f,iBAAkBpqB,KAAKkrB,wBAClI,CAACzmB,MAAM,IAAKC,OAAO,IAAK5B,QAAQ,eAAMuB,qBAAoB,GAAO,KAAK,Q,4CAGxDsB,GAClB/E,QAAQC,IAAI8E,GADY,IAEnBkmB,EAAqB7rB,KAAKtD,MAA1BmvB,kBACL7rB,KAAK5D,KAAKic,UAAU/c,MAAQqK,EAAK0S,UACjCrY,KAAK5D,KAAKwa,QAAQtb,MAAQqK,EAAKiR,QAE3BiV,GACAA,EAAkBC,SAAWnmB,EAAK0S,UAClCwT,EAAkBjV,QAAUjR,EAAKiR,QACjC5W,KAAKC,SAAS,CAACkZ,aAAY,EAAK0S,kBAAkBA,KAElD7rB,KAAKC,SAAS,CAACkZ,aAAY,M,sCAI/BnZ,KAAKC,SAAS,CAACkZ,aAAY,M,+BAErB,IAUR7b,EAVO,SACiD0C,KAAKL,MAAnDulB,EADH,EACGA,iBAAiB2F,EADpB,EACoBA,yBACnB7R,EAAehZ,KAAKL,MAApBqZ,WAFD,EAGkChZ,KAAKtD,MAAtCib,EAHD,EAGCA,WAAWkU,EAHZ,EAGYA,uBACS1wB,IAAtB0wB,IAAiCA,EAAoB,IAWrDA,EAAkBpa,mBAAqBoZ,GACvC7qB,KAAKC,SAAS,CAAC4qB,yBAAyBgB,EAAkBpa,mBAGpE,IAAI+T,EAAmB,GACjB,IAAKloB,EAAE,EAAGA,EAAE4nB,EAAiB3nB,OAAQD,IAC7ButB,IAA6B3F,EAAiB5nB,GAAGmU,iBACjD+T,EAAiBjlB,KACb,4BAAQjF,MAAO4pB,EAAiB5nB,GAAGmU,iBAAkB3Q,IAAKxC,KAAKyC,SAAU+d,UAAQ,GAAEoG,EAAiB5nB,GAAGmU,mBAG3G+T,EAAiBjlB,KACb,4BAAQjF,MAAO4pB,EAAiB5nB,GAAGmU,iBAAkB3Q,IAAKxC,KAAKyC,UAAWmkB,EAAiB5nB,GAAGmU,mBAO1G,OAHa,IAAfuH,GAAsD,OAAlC6S,EAAkBD,kBAA0DzwB,IAAlC0wB,EAAkBD,aAA6BC,EAAkBD,YAAYruB,OAAS,IAC9Iyb,EAAa6S,EAAkBD,YAAYruB,QAExC,yBAAK+B,UAAU,eACrBqY,EACG,2BAAOpb,KAAK,OAAOF,IAAI,YAAY8G,MAAO,CAACC,QAAQ,QAASmK,GAAG,UAAUJ,aAAc0e,EAAkB7N,UAAW1B,UAAQ,IAC9H,KACF,+BACE,+BACN3E,EACU,4BACA,0CACA,4BACE,yBAAKrY,UAAU,aAC3B,0BAAMA,UAAU,OAAOusB,EAAkB7N,cAGzB,KACR,4BACE,4CAEI,0BAAM1e,UAAU,aAAhB,MACJ,4BACE,yBAAKA,UAAU,aACb,2BAAOjD,IAAI,cAAcE,KAAK,OAAO+C,UAAU,WAAWyN,YAAY,kDAElEwP,SAAU,SAAC5b,GAAO,EAAK2Y,gBACvBkD,UAAU,KAAKrP,aAAc0e,EAAkB9N,iBAKzD,4BACE,4CAAiB,0BAAMze,UAAU,aAAhB,MACjB,4BACE,yBAAKA,UAAU,aAC1B,4BAAQjD,IAAI,mBAAmB8G,MAAO,CAACsB,MAAO,IAAIC,OAAQ,GAAG8b,QAAS,OAAOtO,OAAQ,oBAAoB6Z,aAAc,EAAErP,YAAa,GACrIH,SAAU,kBAAM,EAAKtc,SAAS,CAACkZ,aAAY,EAAK0R,yBAAyB,EAAKzuB,KAAKqV,iBAAiBnW,UACnGkqB,MAKJ,4BACW,qCAEI,0BAAMlmB,UAAU,aAAhB,MACJ,4BACE,yBAAKA,UAAU,aACb,2BAAOjD,IAAI,QAAQE,KAAK,OAAO+C,UAAU,WAAWyN,YAAY,qCAE5DwP,SAAU,SAAC5b,GAAO,EAAKwqB,iBACvB3O,UAAU,KAAKrP,aAAc0e,EAAkBP,WAKlE,4BACW,oCAAS,0BAAMhsB,UAAU,aAAhB,MACT,4BACE,yBAAKA,UAAU,aACX,2BAAOA,UAAU,WAAW8c,IAAI,WAC5B,2BAAO/f,IAAI,YAAYE,KAAK,OAAO+C,UAAU,qBAAqB6D,MAAO,CAACsB,MAAM,KAC5EsI,YAAY,4DAAeI,aAAc0e,EAAkBxT,UAAWiE,UAAQ,IAClF,0BAAMhd,UAAU,eAAeoB,QAAS,kBAAM,EAAKuqB,qBACnD,2BAAO1uB,KAAK,SAAS+C,UAAU,YAAY6D,MAAO,CAACC,QAAS,WAK/DuU,EACK,2BAAOtb,IAAI,UAAUE,KAAK,SAAS4Q,aAAc0e,EAAkBjV,UACnE,2BAAOva,IAAI,UAAUE,KAAK,cAKjD,4BACW,qCACA,4BACE,yBAAK+C,UAAU,aAC1B,2BAAOjD,IAAI,WAAWE,KAAK,OAAO+C,UAAU,WAAWyN,YAAY,YAAYI,aAAc0e,EAAkBJ,SAC9GlP,SAAU,SAAC5b,GAAD,OAAO,EAAKV,SAAS,CAACkZ,aAAY,QAIlC,yBAAK7Z,UAAU,aAAf,6FACA,yBAAKA,UAAU,aAAf,mEACA,yBAAKA,UAAU,aAAf,UAA6B,uBAAG+D,KAAK,iEAAiE2oB,IAAI,sBAAsB9vB,OAAO,UAAU,kCACjJ,yBAAKoD,UAAU,aAAf,UAA6B,uBAAG+D,KAAK,qDAAqD2oB,IAAI,sBAAsB9vB,OAAO,UAA9F,sBAGjC,4BACE,2CACA,wBAAIiH,MAAO,CAACuF,UAAU,UAC9B,8BAAUrM,IAAI,cAAcyM,KAAK,IAAIiU,KAAK,MAAMC,UAAU,MAAMT,SAAU,SAAC5b,GAAD,OAAO,EAAK6Y,gBAAgBrM,aAAc0e,EAAkBD,cAC1H,0BAAMtsB,UAAU,YAAY6D,MAAO,CAACmO,aAAa,IAAjD,IAAsD,0BAAMnO,MAAO,CAACiP,MAAM,YAAa4G,GAAvF,eAKV,yBAAK1Z,UAAU,oCAAmC,uBAAGA,UAAU,QAC3D,4BAAQA,UAAU,gBAAgBoB,QAAS,kBAAM,EAAKhE,MAAM8F,YAA5D,gBACA,4BAAQlD,UAAU,gBAAgBoB,QAAS,SAACC,GAAD,OAAO,EAAK0U,eAAvD,uB,GAtba9V,aCsDV0sB,G,uKAlED,IAAD,OACElV,EAAiB/W,KAAKtD,MAAtBqa,cAEP,OADAnW,QAAQC,IAAIkW,GACL,yBAAKzX,UAAU,eACtB,+BACE,kCACE,yBAAK6D,MAAO,CAACsB,MAAM,OACnB,yBAAKtB,MAAO,CAACsB,MAAM,QAErB,+BACE,4BACE,6CACA,4BACE,yBAAKnF,UAAU,aACX,0BAAMA,UAAU,OAAOyX,EAAcgH,gBAI7C,4BACE,6CACA,4BACE,yBAAKze,UAAU,aACX,0BAAMA,UAAU,OAAOyX,EAActF,qBAI7C,4BACE,sCACA,4BACE,yBAAKnS,UAAU,aACX,0BAAMA,UAAU,OAAOyX,EAAcuU,UAI7C,4BACE,qCACA,4BACE,yBAAKhsB,UAAU,aACX,0BAAMA,UAAU,OAAOyX,EAAcsB,cAI7C,4BACE,qCACA,4BACE,yBAAK/Y,UAAU,aACX,0BAAMA,UAAU,OAAOyX,EAAc0U,WAEzC,yBAAKzmB,MAAM,aAAX,UAAyB,uBAAG3B,KAAK,wDAAwD2oB,IAAI,sBAAsB9vB,OAAO,UAAU,kCACpI,yBAAK8I,MAAM,aAAX,UAAyB,uBAAG3B,KAAK,qDAAqD2oB,IAAI,sBAAsB9vB,OAAO,UAA9F,sBAG7B,4BACE,2CACA,wBAAIiH,MAAO,CAACuF,UAAU,UAC9B,8BAAUrM,IAAI,cAAcyM,KAAK,IAAIiU,KAAK,MAAMC,UAAU,MAAM7P,aAAc4J,EAAc6U,YAAatP,UAAQ,QAK/G,yBAAKhd,UAAU,oCACX,4BAAQA,UAAU,gBAAgBoB,QAAS,kBAAM,EAAKhE,MAAMxB,KAAKqP,UAAU,EAAK7N,MAAMwH,SAAtF,sB,GA9DgB3E,aCiBtB2sB,G,kDACF,WAAYxvB,GAAQ,IAAD,8BACf,cAAMA,IACDiD,MAAQ,CACTiI,SAAS,GACTD,QAAQ,GACRG,WAAW,IAIX6M,UAAU,EACVC,gBAAgB,EAChBC,aAAa,EAGbgX,uBAAkB1wB,EAElB+pB,iBAAiB,GACjBjF,aAAQ9kB,GAEZ,EAAK2Z,YAAc,EAAKA,YAAYpV,KAAjB,gBACnB,EAAKqV,aAAe,EAAKA,aAAarV,KAAlB,gBACpB,EAAKsV,gBAAkB,EAAKA,gBAAgBtV,KAArB,gBACvB,EAAK2V,WAAa,EAAKA,WAAW3V,KAAhB,gBAClB,EAAK4V,WAAa,EAAKA,WAAW5V,KAAhB,gBAIlB,EAAK+jB,cAAgB,EAAKA,cAAc/jB,KAAnB,gBACrB,EAAK8V,WAAa,EAAKA,WAAW9V,KAAhB,gBAClB,EAAK+F,sBAAwB,EAAKA,sBAAsB/F,KAA3B,gBAC7B,EAAKylB,yBAA2B,EAAKA,yBAAyBzlB,KAA9B,gBAChC,EAAKurB,gBAAkB,EAAKA,gBAAgBvrB,KAArB,gBACvB,EAAKwrB,sBAAwB,EAAKA,sBAAsBxrB,KAA3B,gBAC7B,EAAKysB,mBAAqB,EAAKA,mBAAmBzsB,KAAxB,gBAC1B,EAAK0sB,YAAc,EAAKA,YAAY1sB,KAAjB,gBAlCJ,E,gEAqCfiW,KAAQC,YAAY,MACpBD,KAAQE,WAAW,SAInB7V,KAAK8U,YAAY,GAMjBqK,GAAakG,iBAAiB,GAAGrlB,KAAKmlB,0BAAyB,SAACxoB,GAAD,OAASiQ,EAAI9K,MAAMnF,EAAI8K,c,6FAUjE5J,GACJ,OAAbA,EAAIuJ,OACJpH,KAAKC,SAAS,CAACilB,iBAAiBrnB,EAAIsY,OACd,SAAftY,EAAIuJ,QACXwF,EAAI9K,MAAMjE,EAAI4J,W,sCAON1H,GAEZC,KAAK8U,YAAY/U,K,kCAETA,EAAKiW,GAAa,IAAD,EACUhW,KAAK5D,KAAjCiwB,EADkB,EAClBA,gBAAiBzV,EADC,EACDA,aACXzb,IAAT4E,IAAoBA,EAAOC,KAAKL,MAAMgV,WAC1C3U,KAAKtD,MAAMxB,KAAKwV,cAChB,IAAMxC,EAAO,CACTnO,KAAKA,GAIqB,QAA1BssB,EAAgB/wB,QAChB4S,EAAKuD,iBAAmB4a,EAAgB/wB,YAGtBH,IAAlByb,EAAQtb,OAAyC,OAAlBsb,EAAQtb,OAAoC,KAAlBsb,EAAQtb,QACjE4S,EAAK0I,QAAUA,EAAQtb,YAGRH,IAAf6a,IAEAA,EAAaC,EAAW/O,iBAAiB8O,GAEzC9H,EAAK4H,OAASE,GAElBhW,KAAKC,SAAS,CAACggB,QAAQ/R,IACvBkd,GAAejV,KAAKjI,EAAKlO,KAAK+U,cAAa,SAACpY,GAAD,OAASiQ,EAAI9K,MAAMnF,EAAI8K,c,mCAEzD5J,GAIT,GAHAmC,KAAKtD,MAAMxB,KAAKgW,cAGC,OAAbrT,EAAIuJ,OAAe,CACnB,IAAMgP,EAAYvY,EAAI0O,KAE3BgZ,EAAc,GACdnP,EAAUmP,cAAaA,EAAcnP,EAAUmP,aAC1C,IAAM5d,EAAU,CACZ,CAACtM,KAAK,cAAcuN,OAAO,eAAgByN,SAAS,IAChD/Q,SAAU,CAAE/I,KAAM2I,EAAcK,QAAS,CACrCC,SAAS3H,EAAIsY,KAAKzQ,SAAS,cAC3BD,sBAAsBzF,KAAKyF,yBAIlC,CAACpK,KAAK,mBAAmBuN,OAAO,gBAAgBnE,MAAM,IAAI+D,MAAM,UAEhE,CAACnN,KAAK,QAAQuN,OAAO,SAAUyN,SAAS,IACrC/Q,SAAU,CAAE/I,KAAM+oB,GAAc/f,QAAS,CAACC,SAAS3H,EAAIsY,QAE1D,CAAC9a,KAAK,YAAYuN,OAAO,aAAcyN,SAAS,KAC5D,CAAChb,KAAK,QAAQuN,OAAO,SAAUnE,MAAM,GAAG+D,MAAM,SAC9ClD,SAAU,CAAE/I,KAAMiV,GAAgBjM,QAAS,CAAEC,SAAS3H,EAAIsY,QAE9C,CAAC9a,KAAK,WAAWuN,OAAO,QAAQnE,MAAM,IAAI+D,MAAM,UAChD,CAACnN,KAAK,OAAOuN,OAAO,OAAOnE,MAAM,IAAI+D,MAAM,SACxClD,SAAU,CAAE/I,KAAMga,GAAchR,QAAS,CAAEC,SAAS3H,EAAIsY,KAAKiW,YAAYpsB,KAAKosB,gBAGtFpsB,KAAKC,SAAS,CAAC2H,SAAS/J,EAAIsY,KAAKxB,UAAUyB,EAAUrW,KAAK6U,gBAAgBwB,EAAUjW,WAAW0U,aAAauB,EAAUtW,UAAU6H,QAAQA,EAAQ4d,YAAYA,QACtI,SAAf1nB,EAAIuJ,QACXwF,EAAI9K,MAAMjE,EAAI4J,W,4CASA9B,EAAKhF,EAAEjE,GAAQ,IAAD,OAChC,IAAK,IACMyN,EAAYnK,KAAKtD,MAAMxB,KAAKyE,MAA5BwK,SAGP,GAAgC,UAA5BA,EAASqC,gBAA+B7G,EAAK2G,SAAWnC,EAASmC,OACjE8e,GAAekB,eAAgB3mB,EAAKqY,WAAU,SAACngB,GAC3C,EAAKnB,MAAMxB,KAAKgW,cACG,OAAfrT,EAAIuJ,OACJ,EAAKqc,cAAc5lB,EAAI0O,KAAKggB,aAEJ,SAAf1uB,EAAIuJ,QACTwF,EAAI9K,MAAMjE,EAAI4J,YAExB,SAAC9G,GAAOC,QAAQC,IAAIF,GAAG,EAAKjE,MAAMxB,KAAKgW,qBACtC,CAEHlR,KAAKtD,MAAMxB,KAAKoP,UADC,gBAGb,kBAAC,GAAD,CAAepG,MAHF,gBAGmBhJ,KAAM8E,KAAKtD,MAAMxB,KAAM6b,cAAepR,EAAMnD,QAAS,SAAC7B,GAAD,OAAO,EAAKjE,MAAMxB,KAAKqP,UAH/F,oBAIb,CAAC9F,MAAM,IAAKC,OAAO,KAAK,KAAK,OAGvC,MAAO/H,GACLiE,QAAQC,IAAIlE,M,mCAIN,IAAD,OACFkvB,EAAqB7rB,KAAKL,MAA1BksB,kBAGP7rB,KAAKtD,MAAMxB,KAAKoP,UADC,iBAGb,kBAAC,GAAD,CAAYpG,MAHC,iBAGgBhJ,KAAM8E,KAAKtD,MAAMxB,KAAMyc,gBAAkCxc,IAAtB0wB,EAAiCA,kBAAmBA,EAAmBrpB,QAAS,SAAC7B,GAAD,OAAO,EAAK2U,WAH/I,qBAItB,CAAC7Q,MAAM,IAAKC,OAAO,IAAKL,qBAAoB,GAAO,KAAK,Q,iCAG5CH,GACPlE,KAAK8U,YAAY9U,KAAKL,MAAMgV,WAE5B3U,KAAKtD,MAAMxB,KAAKqP,UAAUrG,K,wCAEX,IAAD,OAMdlE,KAAKtD,MAAMxB,KAAKoP,UADC,kBAGb,kBAAC,GAAD,CAAcpG,MAHD,kBAGkBhJ,KAAM8E,KAAKtD,MAAMxB,KAAMsH,QAAS,SAAC7B,GAAD,OAAO,EAAKjE,MAAMxB,KAAKqP,UAHzE,oBAG8F6f,iBAAkBpqB,KAAKkrB,wBAClI,CAACzmB,MAAM,IAAKC,OAAO,IAAK5B,QAAQ,eAAMuB,qBAAoB,GAAO,KAAK,Q,4CAGxDsB,GAElB3F,KAAK5D,KAAKic,UAAU/c,MAAQqK,EAAK0S,UACjCrY,KAAK5D,KAAKwa,QAAQtb,MAAQqK,EAAKiR,U,2CAG/B5W,KAAK5D,KAAKic,UAAU/c,MAAQ,GAC5B0E,KAAK5D,KAAKwa,QAAQtb,MAAQ,K,mCAM1B0E,KAAK8U,YAAY9U,KAAKL,MAAMgV,UAAW3U,KAAK5D,KAAK0Z,OAAOxa,S,oCAE9CixB,GAAc,IAAD,OAEvBvsB,KAAKtD,MAAMxB,KAAKoP,UADC,iBAGb,kBAAC,GAAD,CAAYpG,MAHC,iBAGgBhJ,KAAM8E,KAAKtD,MAAMxB,KAAMyc,gBAA4Bxc,IAAhBoxB,EAA2BV,kBAAmBU,EAAa/pB,QAAS,SAAC7B,GAAD,OAAO,EAAK2U,WAHnI,qBAIb,CAAC7Q,MAAM,IAAKC,OAAO,IAAKL,qBAAoB,GAAO,KAAK,Q,kCAQpDsB,GAERylB,GAAeoB,KAAK7mB,EAAKqY,UAAUhe,KAAKysB,cAAa,SAAC9vB,GAAD,OAASiQ,EAAI9K,MAAMnF,EAAI8K,c,mCAEnE5J,GAET+O,EAAIjL,GAAG9D,K,+BAED,IAAD,SAKDmC,KAAKL,MAHLiI,EAFC,EAEDA,SAAsBD,GAFrB,EAESG,WAFT,EAEqBH,SACtBgN,EAHC,EAGDA,UAAWC,EAHV,EAGUA,gBAAiBC,EAH3B,EAG2BA,aAC5BqQ,EAJC,EAIDA,iBAAiBjF,EAJhB,EAIgBA,QAAQsF,EAJxB,EAIwBA,YAE5Bvb,EAAQhK,KAAKtD,MAAMxB,KAAKyE,MAAxBqK,UACa7O,IAAhBoqB,IAA2BA,EAAc,SAWvBpqB,IAAZ8kB,IAAuBA,EAAU,IAGrC,IADA,IAAIuF,EAAmB,CAAC,4BAAQlqB,MAAM,OAAd,QACfgC,EAAE,EAAGA,EAAE4nB,EAAiB3nB,OAAQD,IAEjCkoB,EAAiBjlB,KACb,4BAAQjF,MAAO4pB,EAAiB5nB,GAAGmU,iBAAkBqN,SAAUmB,EAAQxO,mBAAqByT,EAAiB5nB,GAAGmU,iBAAkB3Q,IAAKxC,KAAKyC,UAAWmkB,EAAiB5nB,GAAGmU,mBAQvL,IAAIib,EAAS,GAMb,MALa,UAAT1iB,IACA0iB,EAAOC,gBAAkB,UACzBD,EAAOxa,OAAO,OACdwa,EAAOE,OAAO,QAEX,yBAAKttB,UAAU,eAItB,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,2CAEb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,OAAd,uBAEF,uBAAG+D,KAAK,iCAAiC2oB,IAAI,sBAAsB1sB,UAAU,cAAcpD,OAAO,WAClG,yBAAKoD,UAAU,oBACX,yBAAKA,UAAU,wCAAuC,yBAAK0F,MAAM,gBAC5E,4BACC,4BACA,0BAAM1F,UAAU,OAAhB,iBACA,4BAAQjD,IAAI,kBAAkBiD,UAAU,MAAM6D,MAAO,CAAC2U,MAAM,OAAOrT,MAAO,IAAIC,OAAQ,GAAGpB,WAAY,GAAGkd,QAAQ,OAAOtO,OAAO,sBAC5HsT,IAGF,wBAAIlmB,UAAU,IACd,0BAAMA,UAAU,kBAAhB,SACA,yBAAKA,UAAU,iBACd,2BAAOjD,IAAI,YAAYE,KAAK,OAAO+C,UAAU,eAAe6D,MAAO,CAACsB,MAAM,KAAM6X,UAAQ,IACxF,2BAAOjgB,IAAI,UAAUE,KAAK,SAAS4Q,aAAc8S,EAAQrJ,UACzD,4BAAQtX,UAAU,gBAAgB6D,MAAO,CAACsB,MAAO,GAAGnB,YAAa,EAAE4O,OAAQ,oBAAoB2a,WAAY,QAASnsB,QAAS,kBAAM,EAAKyrB,uBAAxI,KACA,0BAAM7sB,UAAU,eAAeoB,QAAS,kBAAM,EAAKuqB,uBAGpD,4BACA,0BAAM3rB,UAAU,OAAhB,qBACA,2BAAOjD,IAAI,SAASE,KAAK,OAAO+C,UAAU,eAAe6D,MAAO,CAACsB,MAAM,KAAM0I,aAAc8S,EAAQnK,WAGpG,uBAAG9L,KAAK,SAAS1K,UAAU,gBAAgBoB,QAAS,kBAAM,EAAK8U,eAA/D,kBAGW,uBAAGxL,KAAK,SAAS1K,UAAU,uBAAuB6D,MAAOupB,EACrDhsB,QAAS,WAAgB,UAATsJ,EAAmBpJ,QAAQC,IAAImJ,GAAQ,EAAKqL,iBAG7E,yBAAK/V,UAAU,gBACd,4BACC,4BAAI,0BAAMA,UAAU,wBAApB,YAA0D,gCAA4BnE,IAAxBoqB,EAAYuH,QAAwB,EAAIvH,EAAYuH,UAClH,4BAAI,0BAAMxtB,UAAU,wBAApB,YAA0D,gCAA4BnE,IAAxBoqB,EAAYwH,QAAwB,EAAIxH,EAAYwH,UAClH,4BAAI,0BAAMztB,UAAU,4BAApB,gBAAkE,gCAAgCnE,IAA5BoqB,EAAYyH,YAA4B,EAAIzH,EAAYyH,gBAIvH,kBAAC,IAAD,CAAM3wB,IAAK,OACPkQ,KAAM3E,EAAUoQ,cAAe,CAACC,WAAW,GAC3CtQ,QAASA,EACTuQ,SAAS,EAAOC,SAAS,IAG7B,yBAAK7Y,UAAU,4BAGX,kBAAC,EAAD,CAAYjD,IAAK,OACD0D,KAAM4U,EACNxU,WAAYyU,EACZxU,QAASyU,EACTpV,YAAaO,KAAKgV,0B,GA7UrBzV,aAsVvB+lB,G,WACF,WAAY5oB,GAAQ,oBAAD,IAEP8I,EAAa9I,EAAM2I,WAAWC,SAASC,QAAvCC,SACFL,EAAKvJ,SAASwJ,cAAc,OAClCD,EAAG7F,UAAY,wBACf,IAAIqG,OAAOxK,EACPqK,GAAYA,EAASjI,OAAS,IAClCoI,EAAOH,EAAS9I,EAAMkJ,SACtBT,EAAGU,UAAYF,EAAI,MACnBR,EAAGjB,MAAQyB,EAAI,UAcf3F,KAAKmF,GAAKA,E,yDAGV,OAAOnF,KAAKmF,O,KAIdoR,G,WACF,WAAY7Z,GAAQ,0BACkBA,EAAM2I,WAAWC,SAASC,QAApD6mB,EADO,EACPA,YAAa5mB,EADN,EACMA,SACjBG,OAAOxK,EACPqK,GAAYA,EAASjI,OAAS,IAClCoI,EAAOH,EAAS9I,EAAMkJ,cACTzK,IAATwK,IAAoBA,EAAO,IAErC,IAAIR,EAAKvJ,SAASwJ,cAAc,KAChCD,EAAG6E,KAAO,SACV7E,EAAG7F,UAA2B,YAAfqG,EAAKhG,MACjB,wCACA,qCACHwF,EAAGU,UAAY,OACTV,EAAGjB,MAAM,OACU,YAAfyB,EAAKhG,OACLwF,EAAGW,iBAAiB,SAAQ,SAACnF,GAAD,OAAOyrB,EAAYzmB,EAAKhF,EAAEjE,MAC1DsD,KAAKmF,GAAKA,E,yDAGV,OAAOnF,KAAKmF,O,KAKdqM,G,WACF,WAAY9U,GAAQ,0BACqBA,EAAM2I,WAAWC,SAASC,QAAvCC,GADT,EACPiQ,eADO,EACSjQ,UACpBG,OAAOxK,EACPqK,GAAYA,EAASjI,OAAS,IAClCoI,EAAOH,EAAS9I,EAAMkJ,cACTzK,IAATwK,IAAoBA,EAAO,IACrC,IAAIR,EAAKvJ,SAASwJ,cAAc,QACb,YAAfO,EAAKhG,MACRwF,EAAG7F,UAAY,sBAEO,SAAlBqG,EAAK8lB,UAAyC,KAAlB9lB,EAAK8lB,eAAqCtwB,IAAlBwK,EAAK8lB,UAA6C,OAAlB9lB,EAAK8lB,eAC1EtwB,IAAfwK,EAAKhG,OAAuC,OAAfgG,EAAKhG,MACd,OAAlBgG,EAAK8lB,UAAqB9lB,EAAK8lB,SAAS1uB,QAAQ,MAAQ,GAAyB,OAAlB4I,EAAK8lB,UAAyD,IAApC9lB,EAAK8lB,SAASC,MAAM,KAAKnuB,OACtH4H,EAAG7F,UAAY,sBAEf6F,EAAG7F,UAAY,0BAEhB6F,EAAG7F,UAAY,sBAGXU,KAAKmF,GAAKA,E,yDAGV,OAAOnF,KAAKmF,O,KAGL+mB,MCrTAD,G,kDAxHX,WAAYvvB,GAAQ,IAAD,8BACf,cAAMA,IACDiD,MAAQ,CACT4sB,iBAAYpxB,EACZwvB,kBAAkB,IAEtB,EAAKzN,aAAe,EAAKA,aAAaxd,KAAlB,gBACpB,EAAKutB,0BAA4B,EAAKA,0BAA0BvtB,KAA/B,gBAPlB,E,gEASE,IAAD,OAChBM,KAAKtD,MAAMxB,KAAKwV,cAChB0a,GAAe8B,mBAAoBltB,KAAKtD,MAAMqa,cAAc/W,KAAKkd,cAAa,SAACvc,GAAD,OAAO,EAAKjE,MAAMxB,KAAKgW,iBAErGiO,GAAagO,kBAAkB,GAAGntB,KAAKitB,2BAA0B,SAACtwB,GAAD,OAASiQ,EAAI9K,MAAMnF,EAAI8K,c,mCAE/E5J,GACTmC,KAAKtD,MAAMxB,KAAKgW,cAEG,OAAfrT,EAAIuJ,OACJpH,KAAKC,SAAS,CAACssB,YAAY1uB,EAAI0O,KAAKggB,cAEhB,SAAf1uB,EAAIuJ,QACTwF,EAAI9K,MAAMjE,EAAI4J,W,gDAGI5J,GACtB+C,QAAQC,IAAIhD,GACK,OAAbA,EAAIuJ,OACJpH,KAAKC,SAAS,CAAC0qB,kBAAkB9sB,EAAIsY,OACf,SAAftY,EAAIuJ,QACXwF,EAAI9K,MAAMjE,EAAI4J,W,+BAIZ,IAAD,SACiCzH,KAAKL,MAAtC4sB,EADA,EACAA,YAAY5B,EADZ,EACYA,uBACGxvB,IAAhBoxB,IAA2BA,EAAc,IAE7C,IADA,IAAIa,EAAoB,GACf9vB,EAAE,EAAGA,EAAEqtB,EAAkBptB,OAAQD,IAClCivB,EAAYc,kBAAoB1C,EAAkBrtB,GAAG+vB,gBACrDD,EAAkB7sB,KACd,4BAAQjF,MAAOqvB,EAAkBrtB,GAAG+vB,gBAAiBvsB,IAAKxC,KAAKyC,SAAU+d,UAAQ,GAAE6L,EAAkBrtB,GAAGgwB,oBAG5GF,EAAkB7sB,KACd,4BAAQjF,MAAOqvB,EAAkBrtB,GAAG+vB,gBAAiBvsB,IAAKxC,KAAKyC,UAAW4pB,EAAkBrtB,GAAGgwB,oBAG3G,OAAO,yBAAKhuB,UAAU,WAAU,yBAAKA,UAAW,WAC5C,0BAAMA,UAAW,SAAjB,+BACA,0BAAMjD,IAAK,QACP,yBAAKiD,UAAU,kBACX,2BAAO8c,IAAI,YAAY9c,UAAU,4BAAjC,iBACA,yBAAKA,UAAU,yBACX,2BAAO/C,KAAK,OAAO+C,UAAW,eAAgBiO,GAAG,YAC7CiP,UAAU,KAAKrP,aAAcof,EAAYxO,YAC7CzB,UAAQ,MAGhB,yBAAKhd,UAAU,kBACX,2BAAO8c,IAAI,YAAY9c,UAAU,2BAAjC,gBACA,yBAAKA,UAAU,yBACX,2BAAO/C,KAAK,OAAO+C,UAAW,eAAgBiO,GAAG,YAAYjS,MAAOixB,EAAY9T,QAAS6D,UAAQ,MAGzG,yBAAKhd,UAAU,kBACX,2BAAO8c,IAAI,YAAY9c,UAAU,4BAAjC,gBACA,yBAAKA,UAAU,yBACX,2BAAOA,UAAU,eAAe6N,aAAcof,EAAYlU,UAAWiE,UAAQ,MA2BrF,yBAAKhd,UAAU,kBACX,2BAAO8c,IAAI,YAAY9c,UAAU,2BAAjC,0CACA,yBAAKA,UAAU,yBACX,4BAAQjD,IAAI,kBAAkBiD,UAAU,eAAegd,UAAQ,GAC1D8Q,KAGb,yBAAK9tB,UAAU,kBACX,2BAAO8c,IAAI,YAAY9c,UAAU,2BAAjC,wBACA,yBAAKA,UAAU,yBACX,2BAAOjD,IAAI,WAAWiD,UAAU,eAAe6N,aAAcof,EAAYd,SAAUnP,UAAQ,MAEnG,yBAAKhd,UAAW,sBAAhB,qFACA,yBAAKA,UAAW,sBAAhB,4GAEJ,yBAAKA,UAAU,eACX,4BAAQA,UAAU,sCAAsCoB,QAASV,KAAKtD,MAAM8F,SAA5E,qBACoCrH,IAAnC6E,KAAKtD,MAAM6wB,qBAAqCvtB,KAAKtD,MAAM6wB,oBACtD,4BAAQjuB,UAAU,4CAA4CoB,QAAS,SAACC,GAAD,OAAO,EAAKjE,MAAM+mB,cAAc8I,KAAvG,gBACA,Y,GAnHMhtB,aCwDb,O,yKApDAqK,EAAS1O,GAChB,IAAIiJ,EACJ,OAAQyF,GACJ,KAAKS,IAASjQ,cACV+J,EAAU,kBAAC,GAAD,CAASjJ,KAAMA,IACzB,MACJ,KAAKmP,IAAShQ,UACV8J,EAAU,kBAAC,EAAD,CAAWjJ,KAAMA,IAC3B,MAGJ,KAAKmP,IAAS/P,cACV6J,EAAU,kBAAC,GAAD,CAAcjJ,KAAMA,EAAM0O,SAAUA,EAAUQ,aAAclP,EAAKkP,eAC3E,MAGJ,KAAKC,IAAS9P,gBACV4J,EAAU,kBAAC,GAAD,CAAgBjJ,KAAMA,EAAM0O,SAAUA,EAAUQ,aAAclP,EAAKkP,eAC7E,MACJ,KAAKC,IAAS7P,uBACV2J,EAAU,kBAAC,GAAD,CAAoBjJ,KAAMA,EAAM0O,SAAUA,EAAUQ,aAAclP,EAAKkP,eACjF,MAGb,KAAKC,IAAS5P,cACb0J,EAAU,kBAAC,GAAD,CAAajJ,KAAMA,EAAM0O,SAAUA,EAAUQ,aAAclP,EAAKkP,eAC1E,MACD,KAAKC,IAAS3P,iBACbyJ,EAAU,kBAAC,GAAD,CAAkBjJ,KAAMA,EAAM0O,SAAUA,EAAUQ,aAAclP,EAAKkP,eAC/E,MACD,KAAKC,IAAS1P,oBACbwJ,EAAU,kBAAC,GAAD,CAAiBjJ,KAAMA,EAAM0O,SAAUA,EAAUQ,aAAclP,EAAKkP,eAC9E,MACD,KAAKC,IAASzP,sBACbuJ,EAAU,kBAAC,GAAD,CAAmBjJ,KAAMA,EAAM0O,SAAUA,EAAUQ,aAAclP,EAAKkP,eAChF,MACD,KAAKC,IAASxP,oBACbsJ,EAAU,kBAAC,GAAD,CAAmBjJ,KAAMA,EAAM0O,SAAUA,EAAUQ,aAAclP,EAAKkP,eAChF,MACD,KAAKC,IAASvP,mBACbqJ,EAAU,kBAAC,GAAD,CAAqBjJ,KAAMA,EAAM0O,SAAUA,EAAUQ,aAAclP,EAAKkP,eAClF,MACD,KAAKC,IAAStP,iBACboJ,EAAU,kBAAC,GAAD,CAAejJ,KAAMA,EAAM0O,SAAUA,EAAUQ,aAAclP,EAAKkP,eAC5E,MACQ,QACIjG,EAAU,6BAAMyF,GAExB,OAAOzF,M,GAvDW5E,cCHpBiuB,G,uKAIE,IAHM,IAAD,EACoBxtB,KAAKtD,MAAvB4O,EADF,EACEA,MAAO5K,EADT,EACSA,QACV+sB,EAAY,GACPnwB,EAAE,EAAGA,EAAE0C,KAAKtD,MAAM4O,MAAM/N,OAAQD,IACjCA,EAAI,GAAGmwB,EAAUltB,KAAK,qCAC1BktB,EAAUltB,KAAM,kBAAC,GAAD,CAAUlF,KAAMiQ,EAAMhO,GAAGjC,KAAMuO,SAAU0B,EAAMhO,GAAGsM,SAAUlJ,QAASA,EAASI,IAAKxC,KAAKyC,YAE5G,OAAO,yBAAKzB,UAAU,cAAa,uBAAGA,UAAU,SAC3CmuB,Q,GATUluB,aAajBmuB,G,uKAEE,OAAO,8BAAO1tB,KAAKtD,MAAMrB,U,GAFVkE,aAKRiuB,MCkJAG,G,kDAhKX,WAAYjxB,GAAQ,IAAD,8BACf,cAAMA,IACDiD,MAAQ,CACTiuB,SAAS,SAEb,EAAKC,UAAY,EAAKA,UAAUnuB,KAAf,gBACjB,EAAKouB,aAAe,EAAKA,aAAapuB,KAAlB,gBACpB,EAAKquB,aAAe,EAAKA,aAAaruB,KAAlB,gBACpB,EAAKsuB,gBAAkB,EAAKA,gBAAgBtuB,KAArB,gBACvB,EAAKuuB,gBAAkB,EAAKA,gBAAgBvuB,KAArB,gBACvB,EAAKwuB,iBAAmB,EAAKA,iBAAiBxuB,KAAtB,gBACxB,EAAKyuB,iBAAmB,EAAKA,iBAAiBzuB,KAAtB,gBAXT,E,sDAqBTnD,GACNyD,KAAKC,SAAS,CAAC2tB,SAASrxB,M,qCAMxB,GAAKyD,KAAKguB,kBAAV,CACA,IAAI9f,EAAO,GACXA,EAAKoR,SAAWtf,KAAK5D,KAAKkjB,SAAShkB,MACnC4S,EAAKuR,UAAYzf,KAAK5D,KAAKgyB,WAAW9yB,MAGtC6jB,GAAakP,SAASngB,EAAKlO,KAAKkuB,kBAAiB,SAACvtB,GAAD,OAAOC,QAAQC,IAAIF,S,qCAMpE,GAAKX,KAAKiuB,kBAAV,CACA,IAAI/f,EAAO,GACXA,EAAK5B,OAAStM,KAAK5D,KAAKkQ,OAAOhR,MAC/B4S,EAAKuR,UAAYzf,KAAK5D,KAAKkyB,WAAWhzB,MAGtC6jB,GAAaoP,SAASrgB,EAAKlO,KAAKmuB,kBAAiB,SAACxtB,GAAD,OAAOC,QAAQC,IAAIF,S,wCASpE,IAAIwG,EAASnH,KAAK5D,KAAKkjB,SAAShkB,MAChC,GAAI6L,EAAO5J,OAAS,EAGhB,OAFAqP,EAAI9K,MAAM,6DACV9B,KAAK5D,KAAKkjB,SAASjT,SACZ,EAEXlF,EAASnH,KAAK5D,KAAKgyB,WAAW9yB,MAC9B,IAAI6f,EAAUlF,EAAWnP,SAASK,GAClC,QAAKgU,EAAQ/T,SACTwF,EAAI9K,MAAMqZ,EAAQ9T,QAClBrH,KAAK5D,KAAKgyB,WAAW/hB,SACd,K,wCAWX,IAAIlF,EAASnH,KAAK5D,KAAKkQ,OAAOhR,MAC9B,GAAI6L,EAAO5J,OAAS,EAGhB,OAFAqP,EAAI9K,MAAM,mEACV9B,KAAK5D,KAAKkQ,OAAOD,SACV,EAEXlF,EAASnH,KAAK5D,KAAKkyB,WAAWhzB,MAC9B,IAAI6f,EAAUlF,EAAWnP,SAASK,GAClC,QAAKgU,EAAQ/T,SACTwF,EAAI9K,MAAMqZ,EAAQ9T,QAClBrH,KAAK5D,KAAKkyB,WAAWjiB,SACd,K,uCAYExO,GACb+C,QAAQC,IAAIhD,GACO,OAAfA,EAAIuJ,OACJwF,EAAIjL,GAAG,4BAAU9D,EAAI0O,KAAKD,OAAS,uBAEf,SAAfzO,EAAIuJ,QACTwF,EAAI9K,MAAMjE,EAAI4J,W,uCAOL5J,GACb+C,QAAQC,IAAIhD,GACO,OAAfA,EAAIuJ,OACJwF,EAAIjL,GAAG9D,EAAI4J,SAES,SAAf5J,EAAIuJ,QACTwF,EAAI9K,MAAMjE,EAAI4J,W,+BAIZ,IAAD,OACEmmB,EAAY5tB,KAAKL,MAAjBiuB,SACP,OAAO,yBAAKtuB,UAAU,uBAAsB,yBAAKA,UAAW,aACxD,yBAAKA,UAAU,OACX,yBAAKA,UAAW,iBAAgC,UAAbsuB,EAAuB,UAAY,IAAKltB,QAAS,iBAAoB,UAAbktB,EAAuB,EAAKC,UAAU,SAAW,OAA5I,mBACA,yBAAKvuB,UAAW,iBAAgC,UAAbsuB,EAAuB,UAAY,IAAKltB,QAAS,iBAAoB,UAAbktB,EAAuB,EAAKC,UAAU,SAAW,OAA5I,0BAGU,UAAbD,EACK,yBAAKtuB,UAAU,QACb,yBAAKA,UAAU,QACX,2BAAOjD,IAAI,WAAWiD,UAAU,eAAeyN,YAAY,kBAE/D,yBAAKzN,UAAU,QACX,2BAAOjD,IAAI,aAAaiD,UAAU,eAAeyN,YAAY,wBAEjE,yBAAKzN,UAAU,QACX,4BAAQA,UAAU,yBAAyBoB,QAAS,kBAAM,EAAKotB,iBAA/D,qCAGV,KACY,UAAbF,EACK,yBAAKtuB,UAAU,QACjB,yBAAKA,UAAU,QACX,2BAAOjD,IAAI,SAASiD,UAAU,eAAeyN,YAAY,wBAE7D,yBAAKzN,UAAU,QACX,2BAAOjD,IAAI,aAAaiD,UAAU,eAAeyN,YAAY,wBAEjE,yBAAKzN,UAAU,QACX,4BAAQA,UAAU,yBAAyBoB,QAAS,kBAAM,EAAKqtB,iBAA/D,iCAGV,W,GA7JYxuB,aCMPivB,G,uKAPD,IACCpkB,EAAgBpK,KAAKtD,MAArB0N,aACP,OAAO,yBAAK9K,UAAU,SAClB,wBAAIA,UAAU,QAAO,uBAAGoB,QAAS,kBAAM0J,EAAaC,IAAShQ,aAAY,0BAAMiF,UAAU,QAAhB,kC,GAJlEC,aCmHJkvB,G,kDAhHX,WAAY/xB,GAAQ,IAAD,8BACf,cAAMA,IACD2Y,WAAa,EAAKA,WAAW3V,KAAhB,gBAClB,EAAKgvB,YAAc,EAAKA,YAAYhvB,KAAjB,gBACnB,EAAKyoB,gBAAkB,EAAKA,gBAAgBzoB,KAArB,gBACvB,EAAK2Z,gBAAkB,EAAKA,gBAAgB3Z,KAArB,gBALR,E,gEAQfM,KAAK5D,KAAKuyB,OAAOtiB,U,mCAUjB,GAAKrM,KAAKqZ,kBAAV,CAGArZ,KAAKtD,MAAMxB,KAAKoP,UADC,+BAGb,yBAAKnH,MAAO,CAACuF,UAAW,SAASkmB,SAAU,GAAGtF,WAAW,EAAEuF,cAAe,KAA1E,kEACA,CAACpqB,MAAM,IAAKC,OAAO,IAAKN,gBAAe,GAAOpE,KAAK0uB,YAAY1uB,KAAKmoB,oB,wCASxE,IAAIhhB,EAASnH,KAAK5D,KAAKuyB,OAAOrzB,MAC9B,GAAI6L,EAAO5J,OAAS,EAEhB,OADAqP,EAAI9K,MAAM,uFACH,EAGX,IADAqF,EAASnH,KAAK5D,KAAKgQ,GAAG9Q,OACXiC,OAAS,EAEhB,OADAqP,EAAI9K,MAAM,6FACH,EAEX,IAAIqZ,EAAUlF,EAAWjP,MAAMG,GAC/B,OAAKgU,EAAQ/T,OAKTD,IADUnH,KAAK5D,KAAKojB,MAAMlkB,QAE1BsR,EAAI9K,MAAM,sFACH,IANP8K,EAAI9K,MAAMqZ,EAAQ9T,SACX,K,oCAoBX,IAAM6G,EAAOjS,oBAAU+D,MAEvBkO,EAAK5B,OAAStM,KAAKtD,MAAMxB,KAAKyE,MAAMwK,SAASmC,OAC7CzC,EAAYilB,aAAa5gB,EAAKlO,KAAK+uB,kBAAiB,SAACpuB,GAAD,OAAOiM,EAAI9K,MAAMnB,EAAE8G,c,uCAM1D5J,GACM,OAAfA,EAAIuJ,QACJwF,EAAIjL,GAAG9D,EAAI4J,SACXzH,KAAKtD,MAAM8F,WACW,SAAf3E,EAAIuJ,QACXwF,EAAI9K,MAAMjE,EAAI4J,W,0EASZ,IAAD,OACL,OAAO,yBAAKnI,UAAU,eAClB,+BACI,+BACA,4BACI,wCACA,4BACA,yBAAKA,UAAU,aACX,2BAAO/C,KAAK,WAAW+C,UAAU,WAAWjD,IAAI,SAAS0Q,YAAY,0CACrE,2BAAOxQ,KAAK,WAAW+C,UAAU,WAAWjD,IAAI,KAAK0Q,YAAY,gHAA2B5J,MAAO,CAAC2Q,UAAW,KAC/G,2BAAOvX,KAAK,WAAW+C,UAAU,WAAWjD,IAAI,QAAQ0Q,YAAY,eAAK5J,MAAO,CAAC2Q,UAAW,UAMxG,yBAAKxU,UAAU,oCAAmC,uBAAGA,UAAU,QAC3D,4BAAQA,UAAU,gBAAgBoB,QAAS,kBAAM,EAAKhE,MAAM8F,YAA5D,gBACA,4BAAQlD,UAAU,gBAAgBoB,QAAS,kBAAM,EAAK2U,eAAtD,uB,GA5GiB9V,aCgUlByvB,G,kDA9TX,WAAYtyB,GAAQ,IAAD,8BACrB,cAAMA,IACDiD,MAAQ,CACZwK,SAAS,GACT8kB,SAAQ,EACR9qB,QAAQ,KACRyF,SAAS,GACTG,OAAM,EACNG,UAAU,GACVF,KAAK,GACLC,SAAS,GACTqB,MAAM,GACNkT,WAAW,GACX0Q,OAAM,EACNC,OAAM,EACNC,WAAU,EACV1iB,WAAU,EACV2iB,SAAQ,EACRC,kBAAan0B,EACb0H,oBAAe1H,EACfyH,iBAAYzH,EACZuH,qBAAgBvH,EAChBo0B,SAAS,GACTC,OAAO,GACPC,gBAAWt0B,EACXu0B,kBAAav0B,EACbw0B,eAAUx0B,EACVy0B,eAAUz0B,EACV00B,mBAAc10B,EACdsM,SAAQ,EACRqoB,WAAW,IAEZ,EAAKC,mBAAqB,EAAKA,mBAAmBrwB,KAAxB,gBAC1B,EAAKgR,YAAc,EAAKA,YAAYhR,KAAjB,gBACnB,EAAKwR,YAAc,EAAKA,YAAYxR,KAAjB,gBACnB,EAAK0K,aAAe,EAAKA,aAAa1K,KAAlB,gBACpB,EAAKswB,WAAa,EAAKA,WAAWtwB,KAAhB,gBAClB,EAAKuwB,WAAa,EAAKA,WAAWvwB,KAAhB,gBAClB,EAAKqwB,mBAAqB,EAAKA,mBAAmBrwB,KAAxB,gBAC1B,EAAKwwB,OAAS,EAAKA,OAAOxwB,KAAZ,gBACd,EAAKywB,UAAY,EAAKA,UAAUzwB,KAAf,gBAEjB,EAAKupB,YAAc,EAAKA,YAAYvpB,KAAjB,gBACnB,EAAKiD,YAAc,EAAKA,YAAYjD,KAAjB,gBACnB,EAAK4K,UAAY,EAAKA,UAAU5K,KAAf,gBACjB,EAAK6K,UAAY,EAAKA,UAAU7K,KAAf,gBA7CI,E,iEAgDrB2C,IAAOnH,KAAO8E,KAIJ6N,EAAKuiB,SAAS9iB,QAAU,K,0CAG5B+iB,OAAOC,WAEPzmB,EAAYwe,eAAeroB,KAAK+vB,mBAAmB/vB,KAAKkwB,U,kCASnDf,GACHA,EACAnvB,KAAKC,SAAS,CAACgvB,SAAQ,EAAKE,MAAMA,IAElCnvB,KAAKC,SAAS,CAACgvB,SAAQ,M,oCAM/BjvB,KAAKC,SAAS,CAACgvB,SAAQ,EAAME,OAAM,M,mCAOvBvlB,EAAS2mB,GACf,GAAKA,GAAoB3mB,IAAa5J,KAAKL,MAAMiK,SAEvD,GAAIA,IAAaS,IAASa,MAA1B,CAIA,IAAM/G,EAAUnE,KAAKgwB,WAAWpmB,GAE1B4mB,EAAW1lB,EAASW,SAAS7B,GACnCvH,IAAOjH,UAAUqR,IAAYxR,eAAe2O,GAC5C5J,KAAKC,SAAS,CAACkE,QAAQA,EAAQyF,SAASA,EAAS0B,MAAMklB,SAPtDxwB,KAAKC,SAAS,CAACyM,WAAU,M,iCAahB9C,GAEV,OADgB6mB,GAAYT,WAAWpmB,EAAS5J,Q,kCAOhDA,KAAKC,SAAS,CAACyM,WAAU,M,kCAUXxI,EAAMuD,EAAQxD,EAAKysB,GAC3B1wB,KAAKC,SAAS,CAACovB,SAAQ,EAAKC,aAAaprB,EAAMrB,eAAe4E,EAAQ7E,YAAYqB,EAAKvB,gBAAgBguB,M,oCAMvG1wB,KAAKC,SAAS,CAACovB,SAAQ,EAAMC,kBAAan0B,EAAU0H,oBAAe1H,EAAUyH,iBAAYzH,EAAUuH,qBAAgBvH,M,gCAU7G+I,EAAMysB,EAAK1uB,EAAKgC,EAAK2sB,GAAU,IAAD,EACZ5wB,KAAKL,MAAxB4vB,EAD+B,EAC/BA,SAASC,EADsB,EACtBA,OACRqB,EAAW,CACb3sB,MAAMA,EACNC,QAAQwsB,EACR1uB,KAAKA,EACLgC,KAAKA,EACL2sB,QAAQA,GAEZrB,EAAShvB,KAAK2D,GACdsrB,EAAOtrB,GAAS2sB,EAChB7wB,KAAKC,SAAS,CAACivB,OAAM,EAAKK,SAASA,EAASC,OAAOA,M,gCAO7CtrB,GAIN,IAJc,IAAD,EACalE,KAAKL,MAAxB6vB,EADM,EACNA,OAAOD,EADD,EACCA,SACVuB,EAAU,GACVC,EAAY,GACPzzB,EAAE,EAAGA,EAAEiyB,EAAShyB,OAAQD,IACzB4G,IAAUqrB,EAASjyB,KACnBwzB,EAAQvB,EAASjyB,IAAMkyB,EAAOD,EAASjyB,IACvCyzB,EAAUxwB,KAAKgvB,EAASjyB,KAG5ByzB,EAAUxzB,OAAS,EACnByC,KAAKC,SAAS,CAACivB,OAAM,EAAMM,OAAO,GAAGD,SAAS,KAE9CvvB,KAAKC,SAAS,CAACuvB,OAAOsB,EAAQvB,SAASwB,M,yCAU5BlzB,GACf,GAAmB,OAAfA,EAAIuJ,OAIJ,GAHA6U,GAAW+U,QAAQnzB,EAAIsY,MAGqC,MAAxD8F,GAAWgV,SAAS,gBAAgB,gBACpCjxB,KAAKC,SAAS,CAACmvB,WAAU,EAAKjrB,QAAQ,kBAAC,EAAD,YACnC,CACH,IAAM+sB,EAAe7uB,IAAOtG,UAAU0Q,IAAYzR,YAClD6O,EAAYsnB,SAASD,EAAalxB,KAAKiwB,YAAW,SAACtzB,GAAD,OAASiQ,EAAI9K,MAAMnF,EAAI8K,gBAEvD,SAAf5J,EAAIuJ,SACXwF,EAAI9K,MAAMjE,EAAI4J,SACdzH,KAAKC,SAAS,CAACkE,QAAQ,kBAAC,EAAD,W,6BAOxBxH,GAEiB,kBAAhBA,EAAI8K,SACJzH,KAAKC,SAAS,CAACkE,QAAQ,kBAAC,EAAD,U,iCAOpBtG,GAEP,GAAmB,OAAfA,EAAIuJ,OAAiB,CACrB,IAAI8pB,EAAerzB,EAAI0O,KAAKrC,UAC5B,GAAIgnB,GAAkD,KAAlCA,EAAaj0B,QAAQ,KAAK,IAE1C,GAAIY,EAAI0O,MAAQ1O,EAAI0O,KAAKpC,SAAU,CAAC,IAAD,EACbtM,EAAI0O,KAAKpC,SAAnCqC,EADuC,EACvCA,eAAgBF,EADuB,EACvBA,OACvBtM,KAAKC,SAAS,CAAC8J,OAAM,EAAKG,UAAUgnB,EAAalnB,KAAKwC,EAAevC,SAASqC,EAAOnC,SAAStM,EAAI0O,KAAKpC,WACvG,IAAIinB,EAAc/uB,IAAOtG,UAAU0Q,IAAYxR,gBAC/C+E,KAAKoK,cAAagnB,GAAgC,OAAhBA,QAAwCj2B,IAAhBi2B,EAA2C/mB,IAASO,QAAvBwmB,QAEvF/uB,IAAOjH,UAAUqR,IAAYzR,WAAW,IACxCqH,IAAOjH,UAAUqR,IAAYxR,eAAe,IAC5C+E,KAAKoK,aAAaC,IAAShQ,gBAKpBgI,IAAOjH,UAAUqR,IAAYzR,WAAW,IACxCqH,IAAOjH,UAAUqR,IAAYxR,eAAe,IAC5C+E,KAAKoK,aAAaC,IAAShQ,a,0BAOlC0H,GACH/B,KAAKC,SAAS,CAACwH,SAAQ,EAAKqoB,WAAW/tB,EAAIwJ,OAAM,M,+BAErC,IAwBR8lB,EAxBO,SAqBPrxB,KAAKL,MAnBRsK,EAFU,EAEVA,SACAD,EAHU,EAGVA,KACAsB,EAJU,EAIVA,MACAnH,EALU,EAKVA,QACA8qB,EANU,EAMVA,QACAI,EAPU,EAOVA,QACAC,EARU,EAQVA,aACAzsB,EATU,EASVA,eACAD,EAVU,EAUVA,YACAF,EAXU,EAWVA,gBACAwsB,EAZU,EAYVA,MACAC,EAbU,EAaVA,MACAI,EAdU,EAcVA,SACAC,EAfU,EAeVA,OACAJ,EAhBU,EAgBVA,UACA1iB,EAjBU,EAiBVA,UACAjF,EAlBU,EAkBVA,QACAqoB,EAnBU,EAmBVA,WACAlmB,EApBU,EAoBVA,SAGG0nB,EAAO,GAEX,GAAIpC,EACH,IAAK,IAAI5xB,EAAE,EAAGA,EAAEiyB,EAAShyB,OAAQD,IAChC+zB,EAAU7B,EAAOD,EAASjyB,IAC1Bg0B,EAAK/wB,KACJ,kBAAC,EAAD,CAAOiC,QAAS,kBAAM,EAAK+H,UAAU8mB,EAAQntB,QAC5CA,MAAOmtB,EAAQntB,MACfC,QAASktB,EAAQltB,QACjBlC,KAAMovB,EAAQpvB,KACdgC,KAAMotB,EAAQptB,KAAM2sB,QAASS,EAAQT,WAIzC,OAAO,yBAAKtxB,UAAU,aAEpB8vB,EAAY,6BAAMjrB,GAChB,yBAAK7E,UAAU,gBACf,kBAAC,EAAD,CAASpE,KAAM8E,KAAMiK,SAAUA,EAAUD,KAAMA,EAAMI,aAAcpK,KAAKoK,eAExE,yBAAK9K,UAAW,kBAAoBsK,IAAaS,IAAShQ,UAAY,aAAe,KAEnFuP,IAAaS,IAAShQ,UAAY,kBAAC,GAAD,CAAUiR,MAAOA,EAAO5K,QAASV,KAAKoK,eAAmB,KAC3FjG,GAIDgrB,EAAQ,kBAAC,EAAD,MAAY,KAEpBmC,EAEA5kB,EAAY,kBAAC,EAAD,CAAOxR,KAAM8E,KAAMwC,QAASxC,KAAKmwB,YAAgB,KAE7Dd,EAAU,kBAAC,EAAD,CAASn0B,KAAM8E,KACzBsvB,aAAcA,EACdzsB,eAAgBA,EAChBD,YAAaA,EACbF,gBAAiBA,IACZ,KAEL+E,EAAU,kBAAC,EAAD,CAASA,QAASqoB,EAAY9rB,UAAW,kBAAM,EAAK/D,SAAS,CAACwH,SAAQ,EAAM0nB,OAAM,OAAa,KAEzGF,EAAU,kBAAC,EAAD,MAAc,MAG5B,yBAAK3vB,UAAU,2BACd,yBAAKA,UAAU,cACf,uBAAGkU,IAAI,SACP,wBAAIlU,UAAU,gBACb,iFACA,yDAED,0BAAMA,UAAU,SAAhB,sE,GAzTeC,aCCCgyB,QACW,cAA7BlB,OAAOmB,SAASC,UAEe,UAA7BpB,OAAOmB,SAASC,UAEhBpB,OAAOmB,SAASC,SAASz1B,MACvB,2D,OCPNq0B,OAAOC,SAAW,SAAUoB,GAC1B91B,SAASqH,eAAe,QAAQE,MAAMuB,OAAU2rB,OAAOsB,YAAY,GAAM,MAG3EC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFl2B,SAASqH,eAAe,SDgHpB,kBAAmB8uB,WACrBA,UAAUC,cAAcC,MACrBlkB,MAAK,SAAAmkB,GACJA,EAAaC,gBAEdnkB,OAAM,SAAAlM,GACLlB,QAAQkB,MAAMA,EAAM2F,c","file":"static/js/main.b94cc52e.chunk.js","sourcesContent":["exports.LOGIN_SCHIDPW = \"MENU00001\";    // 아이디 비밀번호 찾기\r\n\r\nexports.DASHBOARD = \"MENU001\";\r\n\r\nexports.MODEL_MANAGER = \"MENU00201\";        // 모델 관리\r\n\r\nexports.SERVICE_MANAGER = \"MENU00301\";     // Service관리\r\nexports.ADMIN_HIST_SERVICEEXEC = \"MENU00303\";    // Service 실행결과 이력\r\n\r\nexports.ADMIN_USERMGR = \"MENU00401\";        // 사용자 관리\r\nexports.ADMIN_HIST_LOGIN = \"MENU0040505\";      // 사용자 로그인 이력\r\nexports.ADMIN_HIST_MODELREG = \"MENU0040501\";        // Model등록 이력\r\nexports.ADMIN_HIST_SCALEINOUT = \"MENU0040504\";      // Resource 이력\r\nexports.ADMIN_SACLEINOUTMGR = \"MENU00403\";  // Sale In Out 관리\r\nexports.ADMIN_SERVICEGROUP = \"MENU00407\";      // 서비스 그룹\r\nexports.ADMIN_COMMONCODE = \"MENU00406\";      // 공통코드","exports.SESSION_ID=\"eiwebsessionid\";            // 세션 쿠키 키값\r\nexports.LAST_MENU_CODE=\"eiwebmenucode\";         // 마지막 메뉴 코드 쿠키 키값","exports.main = undefined;\r\n/**\r\n * 쿠키 저장\r\n * @param {String} name cookie name\r\n * @param {String} value cookie value\r\n * @param {int} day 저장일\r\n */\r\nexports.setCookie = function(name, value, day) {\r\n    var date = new Date();\r\n    date.setTime(date.getTime() + day * 60 * 60 * 24 * 1000);\r\n    document.cookie = name + '=' + value + ';expires=' + date.toUTCString() + ';path=/';\r\n}\r\n/**\r\n * 쿠키 값 불러오기\r\n * @param {String} name cookie name\r\n * @return {String} 쿠키값\r\n */\r\nexports.getCookie = function(name) {\r\n    var value = document.cookie.match('(^|;) ?' + name + '=([^;]*)(;|$)');\r\n    return value? value[2] : \"\";\r\n};\r\n/**\r\n * target 하위에 ref 설정되어있는 입력 컨트롤의 값들을 반환\r\n * @param {DOM} target \r\n * @return {Object} {ref1:value, ref2:value}    <input ref=\"ref1\" type=\"text\" />  <select ref=\"ref2\" />\r\n */\r\nexports.makeParam = function(target) {\r\n    let ret = {};\r\n    const refs = target.refs;\r\n    for (let ref in refs) {\r\n        try {\r\n            if (refs[ref].tagName === \"INPUT\" || refs[ref].tagName === \"SELECT\" || refs[ref].tagName === \"TEXTAREA\") {\r\n                if (refs[ref].type === \"checkbox\")\r\n                    ret[ref] = refs[ref].checked ? \"Y\" : \"N\";\r\n                else\r\n                    ret[ref] = refs[ref].value;\r\n            } else if (typeof refs[ref] === \"object\" && refs[ref].select !== null) {\r\n                ret[ref] = refs[ref].select.props.value.value;\r\n            }\r\n        } catch (err) {}\r\n    }\r\n    return ret;\r\n};\r\n/**\r\n * target 하위에 ref 설정되어있는 입력 컨트롤의 값들을 초기화\r\n * @param {DOM} target \r\n */\r\nexports.initForm = function(target) {\r\n    const refs = target.refs;\r\n    for (let ref in refs) {\r\n        try {\r\n            if (refs[ref].tagName === \"INPUT\" || refs[ref].tagName === \"SELECT\" || refs[ref].tagName === \"TEXTAREA\")\r\n                refs[ref].value = \"\";\r\n        } catch (err) {}\r\n    }\r\n}\r\n/**\r\n * 파일 사이즈를 Byte로 반환\r\n * @param {String} sizestr \r\n * @return {Number} 파일 사이즈(Byte)\r\n */\r\nexports.getFileSizeByte = function(sizestr) {\r\n    let ret = 0;\r\n    if (sizestr.indexOf(\"KB\") > -1) {               //킬로바이트\r\n        ret = parseInt(sizestr.replace('KB')) * 1024;\r\n    } else if (sizestr.indexOf(\"MB\") > -1) {        //메가바이트\r\n        ret = parseInt(sizestr.replace('MB')) * 1024 * 1024;\r\n    } else if (sizestr.indexOf(\"GB\") > -1) {        //기가바이트\r\n        ret = parseInt(sizestr.replace('GB')) * 1024 * 1024 * 1024;\r\n    } else if (sizestr.indexOf(\"TB\") > -1) {        //테라바이트\r\n        ret = parseInt(sizestr.replace('TB')) * 1024 * 1024 * 1024 * 1024;\r\n    } else if (sizestr.indexOf(\"PB\") > -1) {        //페타바이트\r\n        ret = parseInt(sizestr.replace('PB')) * 1024 * 1024 * 1024 * 1024 * 1024;\r\n    } else if (sizestr.indexOf(\"EB\") > -1) {        //엑사바이트\r\n        ret = parseInt(sizestr.replace('EB')) * 1024 * 1024 * 1024 * 1024 * 1024 * 1024;\r\n    } else if (sizestr.indexOf(\"ZB\") > -1) {        //제타바이트\r\n        ret = parseInt(sizestr.replace('ZB')) * 1024 * 1024 * 1024 * 1024 * 1024 * 1024 * 1024;\r\n    } else if (sizestr.indexOf(\"YB\") > -1) {        //요타바이트\r\n        ret = parseInt(sizestr.replace('YB')) * 1024 * 1024 * 1024 * 1024 * 1024 * 1024 * 1024 * 1024;\r\n    }\r\n    return ret;\r\n}\r\n/**\r\n * Display용 파일 사이즈 String 반환\r\n * @param {Number} size \r\n * @return {String} 파일 사이즈(단위)\r\n */\r\nexports.getDisplFileSize = function(size) {\r\n    let unit = \"B\";\r\n    const units = [\"KB\",\"MB\",\"GB\",\"TB\",\"PB\",\"EB\",\"ZB\",\"YB\"];\r\n    for (let i=0; i<units.length; i++) {\r\n        if (size > 1024) {\r\n            size = Number(size / 1024).toFixed(1);\r\n            unit = units[i];\r\n        } else break;\r\n    }\r\n    return size + unit;\r\n}\r\n/**\r\n * 한글문자를 영문문자로 반환\r\n * @param {String} src 입력값\r\n * @return {String} 영문\r\n */\r\nexports.korTypeToEng = function(src) {\r\n\tvar ENG_KEY = \"rRseEfaqQtTdwWczxvgkoiOjpuPhynbml\";\r\n\tvar KOR_KEY = \"ㄱㄲㄴㄷㄸㄹㅁㅂㅃㅅㅆㅇㅈㅉㅊㅋㅌㅍㅎㅏㅐㅑㅒㅓㅔㅕㅖㅗㅛㅜㅠㅡㅣ\";\r\n\tvar CHO_DATA = \"ㄱㄲㄴㄷㄸㄹㅁㅂㅃㅅㅆㅇㅈㅉㅊㅋㅌㅍㅎ\";\r\n\tvar JUNG_DATA = \"ㅏㅐㅑㅒㅓㅔㅕㅖㅗㅘㅙㅚㅛㅜㅝㅞㅟㅠㅡㅢㅣ\";\r\n\tvar JONG_DATA = \"ㄱㄲㄳㄴㄵㄶㄷㄹㄺㄻㄼㄽㄾㄿㅀㅁㅂㅄㅅㅆㅇㅈㅊㅋㅌㅍㅎ\";\r\n\t\r\n\tvar res = \"\";\r\n\tif (src.length === 0)\r\n\t\treturn res;\r\n\r\n\r\n\tfor (var i = 0; i < src.length; i++) {\r\n\t\tvar ch = src.charAt(i);\r\n\t\tvar nCode = ch.charCodeAt(0);\r\n\t\tvar nCho = CHO_DATA.indexOf(ch), nJung = JUNG_DATA.indexOf(ch), nJong = JONG_DATA.indexOf(ch);\r\n\t\tvar arrKeyIndex = [-1, -1, -1, -1, -1];\r\n\r\n\r\n\t\tif (0xac00 <= nCode && nCode <= 0xd7a3) {\r\n\t\t\tnCode -= 0xac00;\r\n\t\t\tarrKeyIndex[0] = Math.floor(nCode / (21 * 28)); // 초성\r\n\t\t\tarrKeyIndex[1] = Math.floor(nCode / 28) % 21; // 중성\r\n\t\t\tarrKeyIndex[3] = nCode % 28 - 1; // 종성\r\n\t\t} else if (nCho !== -1) // 초성 자음\r\n\t\t\tarrKeyIndex[0] = nCho;\r\n\t\telse if (nJung !== -1) // 중성\r\n\t\t\tarrKeyIndex[1] = nJung;\r\n\t\telse if (nJong !== -1) // 종성 자음\r\n\t\t\tarrKeyIndex[3] = nJong;\r\n\t\telse // 한글이 아님\r\n\t\t\tres += ch;\r\n\r\n\r\n\t\t// 실제 Key Index로 변경. 초성은 순서 동일\r\n\t\tif (arrKeyIndex[1] !== -1) {\r\n\t\t\tif (arrKeyIndex[1] === 9) { // ㅘ\r\n\t\t\t\tarrKeyIndex[1] = 27;\r\n\t\t\t\tarrKeyIndex[2] = 19;\r\n\t\t\t} else if (arrKeyIndex[1] === 10) { // ㅙ\r\n\t\t\t\tarrKeyIndex[1] = 27;\r\n\t\t\t\tarrKeyIndex[2] = 20;\r\n\t\t\t} else if (arrKeyIndex[1] === 11) { // ㅚ\r\n\t\t\t\tarrKeyIndex[1] = 27;\r\n\t\t\t\tarrKeyIndex[2] = 32;\r\n\t\t\t} else if (arrKeyIndex[1] === 14) { // ㅝ\r\n\t\t\t\tarrKeyIndex[1] = 29;\r\n\t\t\t\tarrKeyIndex[2] = 23;\r\n\t\t\t} else if (arrKeyIndex[1] === 15) { // ㅞ\r\n\t\t\t\tarrKeyIndex[1] = 29;\r\n\t\t\t\tarrKeyIndex[2] = 24;\r\n\t\t\t} else if (arrKeyIndex[1] === 16) { // ㅟ\r\n\t\t\t\tarrKeyIndex[1] = 29;\r\n\t\t\t\tarrKeyIndex[2] = 32;\r\n\t\t\t} else if (arrKeyIndex[1] === 19) { // ㅢ\r\n\t\t\t\tarrKeyIndex[1] = 31;\r\n\t\t\t\tarrKeyIndex[2] = 32;\r\n\t\t\t} else {\r\n\t\t\t\tarrKeyIndex[1] = KOR_KEY.indexOf(JUNG_DATA.charAt(arrKeyIndex[1]));\r\n\t\t\t\tarrKeyIndex[2] = -1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (arrKeyIndex[3] !== -1) {\r\n\t\t\tif (arrKeyIndex[3] === 2) { // ㄳ\r\n\t\t\t\tarrKeyIndex[3] = 0\r\n\t\t\t\tarrKeyIndex[4] = 9;\r\n\t\t\t} else if (arrKeyIndex[3] === 4) { // ㄵ\r\n\t\t\t\tarrKeyIndex[3] = 2;\r\n\t\t\t\tarrKeyIndex[4] = 12;\r\n\t\t\t} else if (arrKeyIndex[3] === 5) { // ㄶ\r\n\t\t\t\tarrKeyIndex[3] = 2;\r\n\t\t\t\tarrKeyIndex[4] = 18;\r\n\t\t\t} else if (arrKeyIndex[3] === 8) { // ㄺ\r\n\t\t\t\tarrKeyIndex[3] = 5;\r\n\t\t\t\tarrKeyIndex[4] = 0;\r\n\t\t\t} else if (arrKeyIndex[3] === 9) { // ㄻ\r\n\t\t\t\tarrKeyIndex[3] = 5;\r\n\t\t\t\tarrKeyIndex[4] = 6;\r\n\t\t\t} else if (arrKeyIndex[3] === 10) { // ㄼ\r\n\t\t\t\tarrKeyIndex[3] = 5;\r\n\t\t\t\tarrKeyIndex[4] = 7;\r\n\t\t\t} else if (arrKeyIndex[3] === 11) { // ㄽ\r\n\t\t\t\tarrKeyIndex[3] = 5;\r\n\t\t\t\tarrKeyIndex[4] = 9;\r\n\t\t\t} else if (arrKeyIndex[3] === 12) { // ㄾ\r\n\t\t\t\tarrKeyIndex[3] = 5;\r\n\t\t\t\tarrKeyIndex[4] = 16;\r\n\t\t\t} else if (arrKeyIndex[3] === 13) { // ㄿ\r\n\t\t\t\tarrKeyIndex[3] = 5;\r\n\t\t\t\tarrKeyIndex[4] = 17;\r\n\t\t\t} else if (arrKeyIndex[3] === 14) { // ㅀ\r\n\t\t\t\tarrKeyIndex[3] = 5;\r\n\t\t\t\tarrKeyIndex[4] = 18;\r\n\t\t\t} else if (arrKeyIndex[3] === 17) { // ㅄ\r\n\t\t\t\tarrKeyIndex[3] = 7;\r\n\t\t\t\tarrKeyIndex[4] = 9;\r\n\t\t\t} else {\r\n\t\t\t\tarrKeyIndex[3] = KOR_KEY.indexOf(JONG_DATA.charAt(arrKeyIndex[3]));\r\n\t\t\t\tarrKeyIndex[4] = -1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tfor (var j = 0; j < 5; j++) {\r\n\t\t\tif (arrKeyIndex[j] !== -1)\r\n\t\t\t\tres += ENG_KEY.charAt(arrKeyIndex[j]);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\treturn res;\r\n}\r\n/**\r\n * 영문문자를 한글문자로 반환\r\n * @param {String} src \r\n * @return {String} 한글\r\n */\r\nexports.engTypeToKor = function(src) {\r\n    var ENG_KEY = \"rRseEfaqQtTdwWczxvgkoiOjpuPhynbml\";\r\n\tvar KOR_KEY = \"ㄱㄲㄴㄷㄸㄹㅁㅂㅃㅅㅆㅇㅈㅉㅊㅋㅌㅍㅎㅏㅐㅑㅒㅓㅔㅕㅖㅗㅛㅜㅠㅡㅣ\";\r\n\tvar CHO_DATA = \"ㄱㄲㄴㄷㄸㄹㅁㅂㅃㅅㅆㅇㅈㅉㅊㅋㅌㅍㅎ\";\r\n\tvar JUNG_DATA = \"ㅏㅐㅑㅒㅓㅔㅕㅖㅗㅘㅙㅚㅛㅜㅝㅞㅟㅠㅡㅢㅣ\";\r\n    var JONG_DATA = \"ㄱㄲㄳㄴㄵㄶㄷㄹㄺㄻㄼㄽㄾㄿㅀㅁㅂㅄㅅㅆㅇㅈㅊㅋㅌㅍㅎ\";\r\n    \r\n\tvar res = \"\";\r\n\tif (src.length === 0)\r\n\treturn res;\r\n\r\n\r\n\tvar nCho = -1, nJung = -1, nJong = -1; // 초성, 중성, 종성\r\n\r\n\r\n\tfor (var i = 0; i < src.length; i++) {\r\n\t\tvar ch = src.charAt(i);\r\n\t\tvar p = ENG_KEY.indexOf(ch);\r\n\t\tif (p === -1) { // 영자판이 아님\r\n\t\t\t// 남아있는 한글이 있으면 처리\r\n\t\t\tif (nCho !== -1) {\r\n\t\t\t\tif (nJung !== -1) // 초성+중성+(종성)\r\n\t\t\t\t\tres += makeHangul(nCho, nJung, nJong);\r\n\t\t\t\telse // 초성만\r\n\t\t\t\t\tres += CHO_DATA.charAt(nCho);\r\n\t\t\t} else {\r\n\t\t\t\tif (nJung !== -1) // 중성만\r\n\t\t\t\t\tres += JUNG_DATA.charAt(nJung);\r\n\t\t\t\telse if (nJong !== -1) // 복자음\r\n\t\t\t\t\tres += JONG_DATA.charAt(nJong);\r\n\t\t\t}\r\n\t\t\tnCho = -1;\r\n\t\t\tnJung = -1;\r\n\t\t\tnJong = -1;\r\n\t\t\tres += ch;\r\n\t\t} else if (p < 19) { // 자음\r\n\t\t\tif (nJung !== -1) {\r\n\t\t\t\tif (nCho === -1) { // 중성만 입력됨, 초성으로\r\n\t\t\t\t\tres += JUNG_DATA.charAt(nJung);\r\n\t\t\t\t\tnJung = -1;\r\n\t\t\t\t\tnCho = CHO_DATA.indexOf(KOR_KEY.charAt(p));\r\n\t\t\t\t} else { // 종성이다\r\n\t\t\t\t\tif (nJong === -1) { // 종성 입력 중\r\n\t\t\t\t\t\tnJong = JONG_DATA.indexOf(KOR_KEY.charAt(p));\r\n\t\t\t\t\t\tif (nJong === -1) { // 종성이 아니라 초성이다\r\n\t\t\t\t\t\t\tres += makeHangul(nCho, nJung, nJong);\r\n\t\t\t\t\t\t\tnCho = CHO_DATA.indexOf(KOR_KEY.charAt(p));\r\n\t\t\t\t\t\t\tnJung = -1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (nJong === 0 && p === 9) { // ㄳ\r\n\t\t\t\t\t\tnJong = 2;\r\n\t\t\t\t\t} else if (nJong === 3 && p === 12) { // ㄵ\r\n\t\t\t\t\t\tnJong = 4;\r\n\t\t\t\t\t} else if (nJong === 3 && p === 18) { // ㄶ\r\n\t\t\t\t\t\tnJong = 5;\r\n\t\t\t\t\t} else if (nJong === 7 && p === 0) { // ㄺ\r\n\t\t\t\t\t\tnJong = 8;\r\n\t\t\t\t\t} else if (nJong === 7 && p === 6) { // ㄻ\r\n\t\t\t\t\t\tnJong = 9;\r\n\t\t\t\t\t} else if (nJong === 7 && p === 7) { // ㄼ\r\n\t\t\t\t\t\tnJong = 10;\r\n\t\t\t\t\t} else if (nJong === 7 && p === 9) { // ㄽ\r\n\t\t\t\t\t\tnJong = 11;\r\n\t\t\t\t\t} else if (nJong === 7 && p === 16) { // ㄾ\r\n\t\t\t\t\t\tnJong = 12;\r\n\t\t\t\t\t} else if (nJong === 7 && p === 17) { // ㄿ\r\n\t\t\t\t\t\tnJong = 13;\r\n\t\t\t\t\t} else if (nJong === 7 && p === 18) { // ㅀ\r\n\t\t\t\t\t\tnJong = 14;\r\n\t\t\t\t\t} else if (nJong === 16 && p === 9) { // ㅄ\r\n\t\t\t\t\t\tnJong = 17;\r\n\t\t\t\t\t} else { // 종성 입력 끝, 초성으로\r\n\t\t\t\t\t\tres += makeHangul(nCho, nJung, nJong);\r\n\t\t\t\t\t\tnCho = CHO_DATA.indexOf(KOR_KEY.charAt(p));\r\n\t\t\t\t\t\tnJung = -1;\r\n\t\t\t\t\t\tnJong = -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else { // 초성 또는 (단/복)자음이다\r\n\t\t\t\tif (nCho === -1) { // 초성 입력 시작\r\n\t\t\t\t\tif (nJong !== -1) { // 복자음 후 초성\r\n\t\t\t\t\t\tres += JONG_DATA.charAt(nJong);\r\n\t\t\t\t\t\tnJong = -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnCho = CHO_DATA.indexOf(KOR_KEY.charAt(p));\r\n\t\t\t\t} else if (nCho === 0 && p === 9) { // ㄳ\r\n\t\t\t\t\tnCho = -1;\r\n\t\t\t\t\tnJong = 2;\r\n\t\t\t\t} else if (nCho === 2 && p === 12) { // ㄵ\r\n\t\t\t\t\tnCho = -1;\r\n\t\t\t\t\tnJong = 4;\r\n\t\t\t\t} else if (nCho === 2 && p === 18) { // ㄶ\r\n\t\t\t\t\tnCho = -1;\r\n\t\t\t\t\tnJong = 5;\r\n\t\t\t\t} else if (nCho === 5 && p === 0) { // ㄺ\r\n\t\t\t\t\tnCho = -1;\r\n\t\t\t\t\tnJong = 8;\r\n\t\t\t\t} else if (nCho === 5 && p === 6) { // ㄻ\r\n\t\t\t\t\tnCho = -1;\r\n\t\t\t\t\tnJong = 9;\r\n\t\t\t\t} else if (nCho === 5 && p === 7) { // ㄼ\r\n\t\t\t\t\tnCho = -1;\r\n\t\t\t\t\tnJong = 10;\r\n\t\t\t\t} else if (nCho === 5 && p === 9) { // ㄽ\r\n\t\t\t\t\tnCho = -1;\r\n\t\t\t\t\tnJong = 11;\r\n\t\t\t\t} else if (nCho === 5 && p === 16) { // ㄾ\r\n\t\t\t\t\tnCho = -1;\r\n\t\t\t\t\tnJong = 12;\r\n\t\t\t\t} else if (nCho === 5 && p === 17) { // ㄿ\r\n\t\t\t\t\tnCho = -1;\r\n\t\t\t\t\tnJong = 13;\r\n\t\t\t\t} else if (nCho === 5 && p === 18) { // ㅀ\r\n\t\t\t\t\tnCho = -1;\r\n\t\t\t\t\tnJong = 14;\r\n\t\t\t\t} else if (nCho === 7 && p === 9) { // ㅄ\r\n\t\t\t\t\tnCho = -1;\r\n\t\t\t\t\tnJong = 17;\r\n\t\t\t\t} else { // 단자음을 연타\r\n\t\t\t\t\tres += CHO_DATA.charAt(nCho);\r\n\t\t\t\t\tnCho = CHO_DATA.indexOf(KOR_KEY.charAt(p));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else { // 모음\r\n\t\t\tif (nJong !== -1) { // (앞글자 종성), 초성+중성\r\n\t\t\t\t// 복자음 다시 분해\r\n\t\t\t\tvar newCho; // (임시용) 초성\r\n\t\t\t\tif (nJong === 2) { // ㄱ, ㅅ\r\n\t\t\t\t\tnJong = 0;\r\n\t\t\t\t\tnewCho = 9;\r\n\t\t\t\t} else if (nJong === 4) { // ㄴ, ㅈ\r\n\t\t\t\t\tnJong = 3;\r\n\t\t\t\t\tnewCho = 12;\r\n\t\t\t\t} else if (nJong === 5) { // ㄴ, ㅎ\r\n\t\t\t\t\tnJong = 3;\r\n\t\t\t\t\tnewCho = 18;\r\n\t\t\t\t} else if (nJong === 8) { // ㄹ, ㄱ\r\n\t\t\t\t\tnJong = 7;\r\n\t\t\t\t\tnewCho = 0;\r\n\t\t\t\t} else if (nJong === 9) { // ㄹ, ㅁ\r\n\t\t\t\t\tnJong = 7;\r\n\t\t\t\t\tnewCho = 6;\r\n\t\t\t\t} else if (nJong === 10) { // ㄹ, ㅂ\r\n\t\t\t\t\tnJong = 7;\r\n\t\t\t\t\tnewCho = 7;\r\n\t\t\t\t} else if (nJong === 11) { // ㄹ, ㅅ\r\n\t\t\t\t\tnJong = 7;\r\n\t\t\t\t\tnewCho = 9;\r\n\t\t\t\t} else if (nJong === 12) { // ㄹ, ㅌ\r\n\t\t\t\t\tnJong = 7;\r\n\t\t\t\t\tnewCho = 16;\r\n\t\t\t\t} else if (nJong === 13) { // ㄹ, ㅍ\r\n\t\t\t\t\tnJong = 7;\r\n\t\t\t\t\tnewCho = 17;\r\n\t\t\t\t} else if (nJong === 14) { // ㄹ, ㅎ\r\n\t\t\t\t\tnJong = 7;\r\n\t\t\t\t\tnewCho = 18;\r\n\t\t\t\t} else if (nJong === 17) { // ㅂ, ㅅ\r\n\t\t\t\t\tnJong = 16;\r\n\t\t\t\t\tnewCho = 9;\r\n\t\t\t\t} else { // 복자음 아님\r\n\t\t\t\t\tnewCho = CHO_DATA.indexOf(JONG_DATA.charAt(nJong));\r\n\t\t\t\t\tnJong = -1;\r\n\t\t\t\t}\r\n\t\t\t\tif (nCho !== -1) // 앞글자가 초성+중성+(종성)\r\n\t\t\t\t\tres += makeHangul(nCho, nJung, nJong);\r\n\t\t\t\telse                    // 복자음만 있음\r\n\t\t\t\t\tres += JONG_DATA.charAt(nJong);\r\n\r\n\r\n\t\t\t\tnCho = newCho;\r\n\t\t\t\tnJung = -1;\r\n\t\t\t\tnJong = -1;\r\n\t\t\t}\r\n\t\t\tif (nJung === -1) { // 중성 입력 중\r\n\t\t\t\tnJung = JUNG_DATA.indexOf(KOR_KEY.charAt(p));\r\n\t\t\t} else if (nJung === 8 && p === 19) {            // ㅘ\r\n\t\t\t\tnJung = 9;\r\n\t\t\t} else if (nJung === 8 && p === 20) {            // ㅙ\r\n\t\t\t\tnJung = 10;\r\n\t\t\t} else if (nJung === 8 && p === 32) {            // ㅚ\r\n\t\t\t\tnJung = 11;\r\n\t\t\t} else if (nJung === 13 && p === 23) {           // ㅝ\r\n\t\t\t\tnJung = 14;\r\n\t\t\t} else if (nJung === 13 && p === 24) {           // ㅞ\r\n\t\t\t\tnJung = 15;\r\n\t\t\t} else if (nJung === 13 && p === 32) {           // ㅟ\r\n\t\t\t\tnJung = 16;\r\n\t\t\t} else if (nJung === 18 && p === 32) {           // ㅢ\r\n\t\t\t\tnJung = 19;\r\n\t\t\t} else { // 조합 안되는 모음 입력\r\n\t\t\t\tif (nCho !== -1) { // 초성+중성 후 중성\r\n\t\t\t\t\tres += makeHangul(nCho, nJung, nJong);\r\n\t\t\t\t\tnCho = -1;\r\n\t\t\t\t} else // 중성 후 중성\r\n\t\t\t\t\tres += JUNG_DATA.charAt(nJung);\r\n\t\t\t\tnJung = -1;\r\n\t\t\t\tres += KOR_KEY.charAt(p);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// 마지막 한글이 있으면 처리\r\n\tif (nCho !== -1) {\r\n\t\tif (nJung !== -1) // 초성+중성+(종성)\r\n\t\t\tres += makeHangul(nCho, nJung, nJong);\r\n\t\telse                 // 초성만\r\n\t\t\tres += CHO_DATA.charAt(nCho);\r\n\t} else {\r\n\t\tif (nJung !== -1) // 중성만\r\n\t\t\tres += JUNG_DATA.charAt(nJung);\r\n\t\telse { // 복자음\r\n\t\t\tif (nJong !== -1)\r\n\t\t\t\tres += JONG_DATA.charAt(nJong);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction makeHangul(nCho, nJung, nJong) {\r\n\t\treturn String.fromCharCode(0xac00 + nCho * 21 * 28 + nJung * 28 + nJong + 1);\r\n\t}\r\n\r\n\treturn res;\r\n}\r\n/**\r\n * 숫자를 천단위 , 표시 반환\r\n * @param {Number} x \r\n * @return {String} 천단위 ,\r\n */\r\nexports.displNum = function(x) {\r\n\tif (x === undefined) x=0;\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}","import React , {Component}from 'react';\r\n\r\n/**\r\n * Loading\r\n */\r\nclass Loading extends Component {\r\n    render() {\r\n        return <div className={\"lds-ring\"}><div></div><div></div><div></div><div></div></div>;\r\n    }\r\n}\r\nexport default Loading;","import React from 'react';\r\n/**\r\n * Example\r\n * \r\n * <Grid ref={'grid'} onClick={this.onClickGrid}\r\n                    data={this.state.gridData}\r\n                    columns={this.state.columns}\r\n                    bodyHeight={this.state.bodyHeight}\r\n                />\r\n * <Pagination ref={'page'}\r\n                    page={this.state.pagesPage}\r\n                    totalCount={this.state.pagesTotalCount}\r\n                    perPage={this.state.pagesPerPage} pageCount={this.state.pagesPageCount}\r\n                    onClickItem={this.onClickPageItem}/>\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listData:[],\r\n            gridData:[],\r\n            ...\r\n            pagesPage:1,\r\n            pagesTotalCount:0,\r\n            pagesPerPage:5\r\n        };\r\n        this.onClickPageItem = this.onClickPageItem.bind(this);\r\n    }\r\n    onClickPageItem(page,startIdx,lastIdx) {\r\n        let newGridData = [];\r\n        for (let i=startIdx; i<lastIdx; i++) {\r\n            newGridData.push(this.state.listData[i]);\r\n        }\r\n        this.setState({pagesPage:page,gridData:newGridData});\r\n    }\r\n */\r\nclass Pagination extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClickItem = this.onClickItem.bind(this);\r\n        this.state = {\r\n            firstPage:1,\r\n            lastPage:10,\r\n            pageCount:10\r\n        };\r\n    }\r\n    onClickItem(page) {\r\n        const {firstPage,pageCount} = this.state;\r\n        if (page === this.props.page) return;\r\n        if (page === '<<') {\r\n            this.setState({firstPage:1});\r\n            this.props.onClickItem(1);\r\n        } else if (page === '>>') {\r\n            const maxPage = parseInt(this.props.totalCount / this.props.perPage);\r\n            const movePage = (pageCount * parseInt(maxPage / pageCount))+1;\r\n            this.setState({firstPage:movePage});\r\n            this.props.onClickItem(maxPage);\r\n        } else if (page === '>') {\r\n            this.setState({firstPage:firstPage + pageCount});\r\n            this.props.onClickItem(firstPage + pageCount);\r\n        } else if (page === '<') {\r\n            this.setState({firstPage:firstPage - pageCount});\r\n            this.props.onClickItem(firstPage - pageCount);\r\n        } else{\r\n            this.props.onClickItem(page);\r\n        }\r\n    }\r\n    render() {\r\n        const {firstPage,pageCount} = this.state;\r\n        if (this.props.pageCount && this.state.pageCount !== this.props.pageCount)\r\n            this.setState( {pageCount:this.props.pageCount} );\r\n        let pages = [];\r\n        let p=firstPage;\r\n        const maxPage = parseInt(this.props.totalCount / this.props.perPage);\r\n        if (this.props.totalCount === 0) {\r\n            pages.push(<PageItem page={1} index={0} active={true} onClick={(e) => console.log(e)} key={Math.random()}/>);\r\n        } else {\r\n            for (let i=0;i<this.props.totalCount; i+=this.props.perPage) {\r\n                if (p > pageCount && p === firstPage) {\r\n                    if (p > (pageCount*2))\r\n                        pages.push(<PageItem appendClass=\"first\" page={'<<'} index={i} onClick={this.onClickItem} key={Math.random()}/>);\r\n                    pages.push(<PageItem appendClass=\"pre\" page={'<'} index={i} onClick={this.onClickItem} key={Math.random()}/>);\r\n                }\r\n                if (maxPage < p) continue;\r\n                if (p >= firstPage + pageCount) {\r\n                    if (p === firstPage + pageCount) {\r\n                        pages.push(<PageItem appendClass=\"next\" page={'>'} index={i} onClick={this.onClickItem} key={Math.random()}/>);\r\n                        if (maxPage-firstPage > (pageCount*2))\r\n                            pages.push(<PageItem  appendClass=\"last\" page={'>>'} index={i} onClick={this.onClickItem} key={Math.random()}/>);\r\n                        p++;\r\n                    }\r\n                    continue;\r\n                }\r\n                pages.push(<PageItem page={p} index={i} active={this.props.page === p} onClick={this.onClickItem} key={Math.random()}/>);\r\n                p++;\r\n            }\r\n        }\r\n\r\n        if (pages.length < 1) pages.push(<PageItem page={1} index={0} active={true} onClick={(e) => console.log(e)} key={Math.random()}/>);\r\n\r\n        return <div className={'pages'}>\r\n            {pages}\r\n        </div>\r\n    }\r\n}\r\n\r\nclass PageItem extends React.Component {\r\n    render() {\r\n        let {appendClass} = this.props;\r\n        const {active, onClick, page} = this.props;\r\n        if (appendClass === undefined )\r\n            appendClass = \"\";\r\n        return <div className={'pageItem' + (active ? ' active' : '') + \" \" + appendClass} onClick={(e) => onClick(page)}>{page}</div>\r\n    }\r\n}\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport { common } from 'comp';\r\n\r\n/**\r\n * 공통 메세지\r\n */\r\nclass Msg extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            option:{\r\n                position: \"top-right\",\r\n                autoClose: 4000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined\r\n            }\r\n        }\r\n        this.ok = this.ok.bind(this);\r\n        this.info = this.info.bind(this);\r\n        this.warn = this.warn.bind(this);\r\n        this.error = this.error.bind(this);\r\n        this.msg = this.msg.bind(this);\r\n        this.setUserOption = this.setUserOption.bind(this);\r\n    }\r\n    setUserOption(opts,useropts) {\r\n        if (!useropts) return opts;\r\n\r\n        if (useropts.position)\r\n            opts.position = useropts.position;\r\n        if (useropts.autoClose)\r\n            opts.autoClose = useropts.autoClose;\r\n        if (useropts.hideProgressBar)\r\n            opts.hideProgressBar = useropts.hideProgressBar;\r\n        if (useropts.closeOnClick)\r\n            opts.closeOnClick = useropts.closeOnClick;\r\n        if (useropts.pauseOnHover)\r\n            opts.pauseOnHover = useropts.pauseOnHover;\r\n        if (useropts.draggable)\r\n            opts.draggable = useropts.draggable;\r\n        if (useropts.progress)\r\n            opts.progress = useropts.progress;\r\n        return opts;\r\n    }\r\n    ok(msg,useropt) {\r\n        if (process.env.NODE_ENV === \"development\") {\r\n            console.log(common.main);\r\n            console.log(\">> msg type : ok\");\r\n            console.log(msg);\r\n        }\r\n        msg = this.shutMsg(msg);\r\n        common.main.msg(msg);\r\n        // let opt = this.state.option;\r\n        // opt = this.setUserOption(opt,useropt);\r\n        // opt.autoClose = 4000;\r\n        // toast.success(msg, opt);\r\n    }\r\n    info(msg,useropt) {\r\n        if (process.env.NODE_ENV === \"development\") {\r\n            console.log(common.main);\r\n            console.log(\">> msg type : ok\");\r\n            console.log(msg);\r\n        }\r\n        msg = this.shutMsg(msg);\r\n        common.main.msg(msg);\r\n        // let opt = this.state.option;\r\n        // opt = this.setUserOption(opt,useropt);\r\n        // opt.autoClose = 4000;\r\n        // toast.info(msg, opt);\r\n    }\r\n    warn(msg,useropt) {\r\n        if (process.env.NODE_ENV === \"development\") {\r\n            console.log(common.main);\r\n            console.log(\">> msg type : ok\");\r\n            console.log(msg);\r\n        }\r\n        msg = this.shutMsg(msg);\r\n        common.main.msg(msg);\r\n        // let opt = this.state.option;\r\n        // opt = this.setUserOption(opt,useropt);\r\n        // opt.autoClose = 4000;\r\n        // toast.warn(msg, opt);\r\n    }\r\n    error(msg,useropt) {\r\n        if (process.env.NODE_ENV === \"development\") {\r\n            console.log(common.main);\r\n            console.log(\">> msg type : ok\");\r\n            console.log(msg);\r\n        }\r\n        msg = this.shutMsg(msg);\r\n        common.main.msg(msg);\r\n        // let opt = this.state.option;\r\n        // opt = this.setUserOption(opt,useropt);\r\n        // opt.autoClose = 4000;\r\n        // toast.error(msg, opt);\r\n    }\r\n    msg(msg,useropt) {\r\n        if (process.env.NODE_ENV === \"development\") {\r\n            console.log(common.main);\r\n            console.log(\">> msg type : ok\");\r\n            console.log(msg);\r\n        }\r\n        msg = this.shutMsg(msg);\r\n        common.main.msg(msg);\r\n        // let opt = this.state.option;\r\n        // opt = this.setUserOption(opt,useropt);\r\n        // opt.autoClose = 4000;\r\n        // toast(msg, opt);\r\n    }\r\n    shutMsg(msg) {\r\n        const maxLen = 40;\r\n        if (msg.length > maxLen)\r\n            msg = msg.substr(0,maxLen) + \"...\";\r\n        return msg;\r\n    }\r\n}\r\nexport default new Msg();","import React, {Component} from 'react';\r\n\r\n/**\r\n * 화면명 : 확인 팝업\r\n * 화면 경로 : 확인 팝업\r\n * 화면 코드 : \r\n * 참고 : \r\n */\r\nclass Confirm extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.onClose = this.onClose.bind(this);\r\n      this.onOk = this.onOk.bind(this);\r\n    }\r\n    /**\r\n     * 닫기 버튼 클릭 핸들러\r\n     */\r\n    onClose() {\r\n      try {\r\n        if (this.props.confirmCancelFn) this.props.confirmCancelFn();\r\n      } catch (err) {console.log(err)}\r\n      this.props.main.hideConfirm();\r\n    }\r\n    /**\r\n     * 확인 버튼 클릭 핸들러\r\n     */\r\n    onOk() {\r\n      try {\r\n        if (this.props.confirmOkfn) this.props.confirmOkfn();\r\n      } catch (err) {console.log(err)}\r\n      this.props.main.hideConfirm();\r\n    }\r\n    render() {\r\n      let {\r\n        confirmMessage,okLabel,cancelLabel\r\n      } = this.props;\r\n\t  if (okLabel === undefined) okLabel = \"확인\";\r\n\t  if (cancelLabel === undefined) cancelLabel = \"닫기\";\r\n\t  let top = ((document.getElementById('root').clientHeight - (330)) / 2);\r\n        return <div className=\"modal_wrapper\">\r\n        <div className=\"modal_content dialog_modal\" style={{top:top}}>\r\n          <div className=\"modal_body\">\r\n          <div className=\"msg\">\r\n            <p className=\"txt t1\">{confirmMessage}</p>\r\n          </div>\r\n          </div>\r\n          <div className=\"modal_footer\" style={{display:\"flex\"}}>\r\n          <a href={() => console.log('cancel')} className=\"btn btn_white\" onClick={() => this.onClose()}>{cancelLabel}</a>\r\n          <a href={() => console.log('ok')} className=\"btn btn_black\" onClick={() => this.onOk()} style={{marginLeft:7}}>{okLabel}</a>\r\n          </div>\r\n        </div>\r\n      </div>;\r\n    }\r\n}\r\n\r\nexport default Confirm;","import React,{Component} from 'react';\r\n\r\n/**\r\n * 화면명 : 요청시 서버 반응없을때 표시\r\n * 화면 경로 : \r\n * 화면 코드 : \r\n * 참고 : \r\n */\r\nclass DeadServer extends Component {\r\n    render() {\r\n        return <div className=\"deadServer mainContent\">\r\n            <div><i className=\"axi axi-exclamation-triangle\"></i>서버와 통신이 되지 않습니다.</div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default DeadServer;","import React,{Component} from 'react';\r\n// import CommonCode from 'main/CommonCode';\r\n/**\r\n * 시스템 점검중\r\n */\r\nclass SystemChecking extends Component {\r\n    render() {\r\n        // const msg = CommonCode.getValue(\"SYSTEM_CONFIG\",\"SYS_CHECKING_MSG\");\r\n        return <div className=\"page_wrapper\">\r\n            <div className=\"page_header2\">\r\n            <div className=\"brand\">\r\n                <h1 className=\"logo\"><a><span className=\"hide\">ESP Energy Intelligence</span></a></h1>\r\n            </div>\r\n            </div>\r\n            <div className=\"page_container2\">\r\n                <div className=\"service_check\">\r\n                    <h3 className=\"tit\">서버 점검으로 인한 서비스 지연 안내</h3>\r\n                    <p className=\"txt\">이용에 불편을 드려 죄송합니다.<br />현재 서버 점검을 실시하고 있어, 접속에 어려움이 있습니다.<br />잠시 후 다시 접속해주세요.</p>          \r\n                </div>\r\n        </div>\r\n      </div>;\r\n    }\r\n}\r\n\r\nexport default SystemChecking;","import React,{Component} from 'react';\r\nimport Draggable from 'react-draggable';\r\n/**\r\n * 공통 팝업\r\n */\r\nclass Popup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeDrags: 0,\r\n            deltaPosition: {\r\n                x: 0, y: 0\r\n            },\r\n            controlledPosition: {\r\n                x: -400, y: 200\r\n            }\r\n        };\r\n        this.onStart = this.onStart.bind(this);\r\n        this.onStop = this.onStop.bind(this);\r\n        this.onClickOk = this.onClickOk.bind(this);\r\n    }\r\n    /**\r\n     * 드래그 시작\r\n     */\r\n    onStart = () => {\r\n        this.setState({activeDrags: ++this.state.activeDrags});\r\n    };\r\n    /**\r\n     * 드래그 종료\r\n     */\r\n    onStop = () => {\r\n        this.setState({activeDrags: --this.state.activeDrags});\r\n    };\r\n    /**\r\n     * 확인 버튼 클릭  핸들러\r\n     */\r\n    onClickOk() {\r\n        if (this.props.okFn)\r\n            this.props.okFn();\r\n        this.props.onClose();\r\n    }\r\n    render() {\r\n        const {title, onClose} = this.props;\r\n        let {opts,content} = this.props;\r\n        if (opts === undefined) opts = {headerVisiable:true,popupBtnAreaVisible:true};\r\n        let {headerVisiable,popupBtnAreaVisible, contentAppendClass} = opts;\r\n        if (headerVisiable === undefined) headerVisiable = true;\r\n        if (popupBtnAreaVisible === undefined) popupBtnAreaVisible = true;\r\n        if (contentAppendClass === undefined) contentAppendClass = \"model_content\";\r\n        let popupSty = {};\r\n        let okLabel = \"확인\";\r\n        let closeLabel = \"취소\";\r\n        if (opts) {\r\n            if (opts.width)\r\n                popupSty.width = parseInt(String(opts.width).replace(/px/gi,\"\"));\r\n            if (opts.height) {\r\n                popupSty.height = parseInt(String(opts.height).replace(/px/gi,\"\"));\r\n                // 가운데 위치\r\n                try {\r\n                    popupSty.top = ((document.getElementById('root').clientHeight - (popupSty.height+200)) / 2);\r\n                } catch (err) {\r\n                    console.log(err);\r\n                }\r\n            }\r\n            if (opts.okLabel)\r\n                okLabel = opts.okLabel;\r\n            if (opts.closeLabel)\r\n                closeLabel = opts.closeLabel;\r\n        }\r\n        // content가 JSX가 아닌 그냥 메세지 일때\r\n        if ((typeof content) === \"string\") {\r\n            content = <div className={\"popupContent msg\" + (popupBtnAreaVisible ? '' : ' addbtnarea')}><div className=\"content\"><div>{content}</div></div></div>;\r\n        } else {\r\n            content = <div className={\"popupContent\" + (popupBtnAreaVisible ? '' : ' addbtnarea')}><div className=\"content\">{content}</div></div>;\r\n        }\r\n        return <div className=\"modal_wrapper\">\r\n            <Draggable\r\n                axis=\"both\"\r\n                handle=\".popupHandler\"\r\n                defaultPosition={{x: 0, y: 0}}\r\n                position={null}\r\n                grid={[1, 1]}\r\n                scale={1}\r\n                onStart={this.onStart}\r\n                // onDrag={this.handleDrag}\r\n                onStop={this.onStop}>\r\n            <div className={\"modal_content popup \" + contentAppendClass} style={popupSty}>\r\n                <div className=\"popupHandler\"></div>\r\n                {headerVisiable ? <h2 class=\"modal_tit\">{title}</h2> : null}\r\n                {content}\r\n                {popupBtnAreaVisible\r\n                    ? <div className={\"popupBtnArea btn_area\"}><p class=\"btn2\">\r\n                        <button className=\"btn btn_white\" onClick={onClose}>{closeLabel}</button>\r\n                        <button className=\"btn btn_black\" onClick={() => this.onClickOk()}>{okLabel}</button>\r\n                    </p></div> : null}\r\n                <a className=\"btn btn_close\" onClick={onClose}><span className=\"hide\">닫기</span></a>\r\n            </div>\r\n            </Draggable>\r\n        </div>;\r\n    }\r\n}\r\nexport default Popup;","import React, {Component} from 'react';\r\n/**\r\n * 모달 배경\r\n */\r\nclass Modal extends Component {\r\n    render() {\r\n        return <div className=\"mainModal\"></div>\r\n    }\r\n}\r\nexport default Modal;","/**\r\n * 그리드에 명칭 컬럼 클릭 랜더러\r\n * use example\r\n * \r\n * import {NameRenderer} from 'comp';\r\n * constructor(props) {\r\n *  ...\r\n *  this.onClickGridNameColumn = this.onClickGridNameColumn.bind(this);\r\n * }\r\n * onResultList(res) {\r\n *  ...\r\n *  const columns = [\r\n      ...\r\n      {name:'modelName',header:'모델명', minWidth:100,\r\n            renderer: { type: NameRenderer ,options: {\r\n                listData:res.list,labelKey:\"modelName\",\r\n                onClickGridNameColumn:this.onClickGridNameColumn\r\n            } }\r\n        }\r\n *  ];\r\n *  this.setState({... columns:columns});\r\n * }\r\n * onClickGrid(gridEvt) {\r\n        this.setState( {selectionRowKey:gridEvt.rowKey,selectionItem:this.state.gridData[gridEvt.rowKey],selectionColumName:gridEvt.columnName} );\r\n    }\r\n    onDClickGrid(gridEvt) {\r\n        this.setState({showDetail:true});\r\n    }\r\n * \r\n */\r\nclass NameRenderer {\r\n    constructor(props) {\r\n        const el = document.createElement('a');\r\n        // el.className = \"button basefont btn btn-info btn-sm\";\r\n        \r\n        const { listData, onClickGridNameColumn,labelKey } = props.columnInfo.renderer.options;\r\n        let item = undefined;\r\n        if (listData && listData.length > 0)\r\n        item = listData[props.rowKey];\r\n        if (item === undefined) item = {};\r\n        el.className=\"nameLink link\";\r\n        el.title=item[labelKey];\r\n        el.innerText = item[labelKey];\r\n        el.href=\"#\";\r\n        el.addEventListener(\"click\",(e) => onClickGridNameColumn(item,e,props));\r\n        this.el = el;\r\n    }\r\n    getElement() {\r\n        return this.el;\r\n    }\r\n}\r\nexport default NameRenderer;","import React from 'react';\r\n\r\nclass Validation extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.chkPhone = this.chkPhone.bind(this);\r\n        this.chkEmail = this.chkEmail.bind(this);\r\n        this.chkId = this.chkId.bind(this);\r\n        this.chkPw = this.chkPw.bind(this);\r\n        this.chkNumber = this.chkNumber.bind(this);\r\n        this.filterSchKeyword = this.filterSchKeyword.bind(this);\r\n    }\r\n\r\n    // 숫자만 체크 정규식\r\n    /* eslint-disable */\r\n    numberExp = /^[0-9]+$/;\r\n\r\n    // 이메일 체크 정규식\r\n    /* eslint-disable */\r\n    emailExp = /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\r\n    // 일반 전화번호 정규식\r\n    /* eslint-disable */\r\n    telNoExp = /^\\d{2,3}-\\d{3,4}-\\d{4}$/;\r\n\r\n    // 아이디나 비밀번호 정규식\r\n    /* eslint-disable */\r\n    idExp = /^[a-z0-9_]{4,20}$/;\r\n\r\n    // 비밀번호 정규식 : 영문자,특수문자 조합 4자리에서 12자리 이하\r\n    /* eslint-disable */\r\n    pwExp = /^(?=.*[~`!@#$%\\\\^&*()-])(?=.*[a-zA-Z]).{4,12}$/;\r\n\r\n    // 숫자,영소문자,영대문자,특수문자 조합된 4자리이상 12자리 이하\r\n    // /^(?=.*[0-9])(?=.*[~`!@#$%\\\\^&*()-])(?=.*[a-z])(?=.*[A-Z]).{4,12}$/\r\n    // 휴대폰번호 체크 정규식\r\n    /* eslint-disable */\r\n    phoneExp = /^01([0|1|6|7|8|9])-?([0-9]{3,4})-?([0-9]{4})$/;\r\n    // phoneNoExp = /^\\d{3}-\\d{3,4}-\\d{4}$/;\r\n\r\n    // 모델명\r\n    /* eslint-disable */\r\n    modelNameExp=/^[가-힣a-zA-Z-_0-9 ]{1,50}$/;\r\n\r\n    // 모델 닉네임\r\n    /* eslint-disable */\r\n    modelNickExp=/^[a-z_]{1,10}$/;\r\n\r\n    // Service명\r\n    /* eslint-disable */\r\n    serviceNameExp=/^[가-힣a-zA-Z-_0-9 ]{1,50}$/;\r\n    // 자원 그룹명\r\n    /* eslint-disable */\r\n    resourceGroupNameExp=/^[가-힣a-zA-Z-_0-9 ]{1,20}$/;\r\n    // 서비스 그룹명\r\n    /* eslint-disable */\r\n    serviceGroupNameExp=/^[가-힣a-zA-Z-_0-9 ]{1,50}$/;\r\n    // 서비스 DAG ID\r\n    /* eslint-disable */\r\n    serviceDagIdExp=/^[a-zA-Z_0-9]{1,30}$/;\r\n\r\n    // 검색어에 특수문자 제거하기위한 정규식\r\n    /* eslint-disable */\r\n    searchExp = /[\\{\\}\\[\\]\\/?.,;:|\\)*~`!^\\-+<>@\\#$%&\\\\\\=\\(\\'\\\"]/gi;\r\n    \r\n    // 공통 코드\r\n    /* eslint-disable */\r\n    commCodeExp = /^[a-zA-Z_0-9]{2,30}$/;\r\n\r\n\r\n\r\n    chkTelNo(chkVal) {\r\n        let ret = {result:true, errMsg:\"\"};\r\n        let chk = this.telNoExp.test(chkVal);\r\n        ret.result = chk;\r\n        if (!chk) ret.errMsg = \"전화번호 형식에 맞지 않습니다\";\r\n        return ret;\r\n    }\r\n\r\n    chkPhone(chkVal) {\r\n        let ret = {result:true, errMsg:\"\"};\r\n        let chk = this.phoneExp.test(chkVal);\r\n        ret.result = chk;\r\n        if (!chk) ret.errMsg = \"휴대번호 형식에 맞지 않습니다\";\r\n        return ret;\r\n    }\r\n\r\n    chkEmail(chkVal) {\r\n        let ret = {result:true, errMsg:\"\"};\r\n        let chk = this.emailExp.test(chkVal);\r\n        ret.result = chk;\r\n        if (!chk) ret.errMsg = \"이메일 형식에 맞지 않습니다\";\r\n        return ret;\r\n    }\r\n\r\n    chkId(chkVal) {\r\n        let ret = {result:true, errMsg:\"\"};\r\n        let chk = this.idExp.test(chkVal);\r\n        ret.result = chk;\r\n        if (!chk) ret.errMsg = \"아이디 형식에 맞지 않습니다\";\r\n        return ret;\r\n    }\r\n\r\n    chkPw(chkVal) {\r\n        let ret = {result:true, errMsg:\"\"};\r\n        let chk = this.pwExp.test(chkVal);\r\n        ret.result = chk;\r\n        if (!chk) ret.errMsg = \"비밀번호 형식에 맞지 않습니다\";\r\n        return ret;\r\n    }\r\n\r\n    chkNumber(chkVal) {\r\n        let ret = {result:true, errMsg:\"\"};\r\n        let chk = this.numberExp.test(chkVal);\r\n        ret.result = chk;\r\n        if (!chk) ret.errMsg = \"숫자가 아닙니다.\";\r\n        return ret;\r\n    }\r\n\r\n    chkModelName(chkVal) {\r\n        let ret = {result:true, errMsg:\"\"};\r\n        let chk = this.modelNameExp.test(chkVal);\r\n        ret.result = chk;\r\n        if (!chk) ret.errMsg = \"모델명 형식에 맞지 않습니다\";\r\n        return ret;\r\n    }\r\n    chkModelNick(chkVal) {\r\n        let ret = {result:true, errMsg:\"\"};\r\n        let chk = this.modelNickExp.test(chkVal);\r\n        ret.result = chk;\r\n        if (!chk) ret.errMsg = \"모델 닉네임 형식에 맞지 않습니다\";\r\n        return ret;\r\n    }\r\n\r\n    chkServiceName(chkVal) {\r\n        let ret = {result:true, errMsg:\"\"};\r\n        let chk = this.serviceNameExp.test(chkVal);\r\n        ret.result = chk;\r\n        if (!chk) ret.errMsg = \"Service명 형식에 맞지 않습니다\";\r\n        return ret;\r\n    }\r\n\r\n    chkResourceGroupName(chkVal) {\r\n        let ret = {result:true, errMsg:\"\"};\r\n        let chk = this.resourceGroupNameExp.test(chkVal);\r\n        ret.result = chk;\r\n        if (!chk) ret.errMsg = \"자원 그룹명 형식에 맞지 않습니다\";\r\n        return ret;\r\n    }\r\n\r\n    chkCommonCode(chkVal) {\r\n        let ret = {result:true, errMsg:\"\"};\r\n        let chk = this.commCodeExp.test(chkVal);\r\n        ret.result = chk;\r\n        if (!chk) ret.errMsg = \"공통코드 형식에 맞지 않습니다\";\r\n        return ret;\r\n    }\r\n\r\n    filterSchKeyword(chkVal) {\r\n        if (!this.searchExp.test(chkVal))\r\n            return chkVal;\r\n        return chkVal.replace(this.searchExp,\"\");\r\n    }\r\n\r\n    chkServiceGroupName(chkVal) {\r\n        let ret = {result:true, errMsg:\"\"};\r\n        let chk = this.serviceGroupNameExp.test(chkVal);\r\n        ret.result = chk;\r\n        if (!chk) ret.errMsg = \"서비스 그룹명 형식에 맞지 않습니다\";\r\n        return ret;\r\n    }\r\n\r\n    chkServiceDagIdExp(chkVal) {\r\n        let ret = {result:true, errMsg:\"\"};\r\n        let chk = this.serviceDagIdExp.test(chkVal);\r\n        ret.result = chk;\r\n        if (!chk) ret.errMsg = \"DAG ID 형식에 맞지 않습니다\";\r\n        return ret;\r\n    }\r\n\r\n}\r\n\r\nexport default new Validation();\r\n","import React, {Component} from 'react';\r\n\r\n/**\r\n * Message 팝업\r\n */\r\nclass Message extends Component {\r\n    render() {\r\n\t\tlet {okLabel, onClickOk} = this.props;\r\n\t\tif (okLabel === undefined) okLabel = \"확인\";\r\n\t\tlet top = ((document.getElementById('root').clientHeight - (330)) / 2);\r\n\t\treturn <div className=\"modal_wrapper\">\r\n\t\t\t<div className=\"modal_content dialog_modal\" style={{top:top}}>\r\n\t\t\t\t<div className=\"modal_body\">\r\n\t\t\t\t<div className=\"msg\">\r\n\t\t\t\t\t<p className=\"txt t1\">{this.props.message}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"modal_footer\">\r\n\t\t\t\t<a className=\"btn btn_black\" onClick={onClickOk}>{okLabel}</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>;\r\n    }\r\n}\r\nexport default Message;","import React, {Component} from 'react';\r\n\r\n/**\r\n * 화면명 : 심플 그리드\r\n * 화면 경로 : 심플 그리드\r\n * 화면 코드 : \r\n * 참고 : 간단히 리스트 표현시 TUI GRID를 사용하지 않고 가볍게 보여주기위한 컴퍼넌트\r\n */\r\nclass GridList extends Component {\r\n    render() {\r\n        let {columns,gridData,noDataMsg} = this.props;\r\n        if (noDataMsg === undefined) noDataMsg = \"데이터가 없습니다.\";\r\n        let bodyHeight = 236;\r\n        if (this.props.bodyHeight !== undefined) bodyHeight = this.props.bodyHeight;\r\n        let headers = [];\r\n        let colGroup = [];\r\n        let i;\r\n        let col;\r\n        let colsty;\r\n        let headercellsty;\r\n        const headersty = {height:40};\r\n        const rowsty = {height:40};\r\n        let itm;\r\n        for (i=0; i<columns.length; i++) {\r\n            col = columns[i];\r\n            colsty = {};\r\n            if (col.width !== undefined)\r\n                colsty.width = col.width;\r\n            if (col.align !== undefined)\r\n                colsty.align = col.align;\r\n            colGroup.push(<col style={colsty} key={Math.random()}/>);\r\n\r\n            headercellsty = {verticalAlign:\"middle\"};\r\n            if (col.align !== undefined) {\r\n                headercellsty.textAlign = col.align;\r\n                if (col.align === \"left\")\r\n                    headercellsty.padding = \"0px 13px\";\r\n            }\r\n            headers.push(<th className=\"tui-grid-cell tui-grid-cell-header tui-grid-cell-head\" style={headercellsty} key={Math.random()}>{col.header}</th>);\r\n\r\n        }\r\n\r\n        // make rows\r\n        let rowcols;\r\n        let rows = [];\r\n        let rowcolsty;\r\n        if (gridData.length < 1) {\r\n            rows.push(<NoneRow colSpan={columns.length} noneContent={noDataMsg} key={Math.random()}/>);\r\n        } else {\r\n            for (let j=0; j<gridData.length; j++) {\r\n                itm = gridData[j];\r\n                rowcols = [];\r\n                for (i=0; i<columns.length; i++) {\r\n                    col = columns[i];\r\n                    rowcolsty = {};\r\n                    rowcolsty = {verticalAlign:\"middle\"};\r\n                    for (let s in col) {\r\n                        if (s === \"align\" || s.indexOf(\"padding\") > -1 || s.indexOf(\"margin\") > -1 || s.indexOf(\"Width\") > -1 || s.indexOf(\"Height\") > -1) {\r\n                            if (s === \"align\") {\r\n                                rowcolsty[\"textAlign\"] = col[s];\r\n                                if (col[s] === \"left\")\r\n                                    rowcolsty[\"padding\"] = \"0px 5px\";\r\n                            }\r\n                            else\r\n                                rowcolsty[s] = col[s];\r\n                        }\r\n                    }\r\n                    rowcols.push( \r\n                        <td className=\"tui-grid-cell tui-grid-cell-has-input\" style={rowcolsty} key={Math.random()}>\r\n                            {col.renderer !== undefined\r\n                                ? <col.renderer.type options={col.renderer.options} item={itm} key={Math.random()}/>\r\n                                : <div className=\"tui-grid-cell-content\" key={Math.random()}>{itm[ col.name ]}</div>}\r\n                        </td>\r\n                    );\r\n                }\r\n                rows.push( <tr className=\"tui-grid-row-odd\" style={rowsty}>{rowcols}</tr> );\r\n            }\r\n        }\r\n\r\n\r\n        return <div className=\"gridList\">\r\n            <div className=\"tui-grid-header-area\" style={headersty}>\r\n                <table className=\"tui-grid-table\">\r\n                    <colgroup>\r\n                        {colGroup}\r\n                    </colgroup>\r\n                    <tbody>\r\n                        <tr style={headersty}>{headers}</tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"tui-grid-body-area\">\r\n                <div className=\"tui-grid-body-container\" style={{height: bodyHeight,width: \"100%\",overflow: \"auto\"}}>\r\n                    <div className=\"tui-grid-table-container\" style={{top: 0,left: 0,overflow: \"auto\"}}>\r\n                        <table className=\"tui-grid-table\">\r\n                            <colgroup>{colGroup}</colgroup>\r\n                            <tbody>{rows}</tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\nclass NoneRow extends Component {\r\n    render() {\r\n        const {colspan} = this.props;\r\n        let {noneContent} = this.props;\r\n        if (!noneContent) noneContent = \"데이터가 없습니다.\";\r\n        return <tr className=\"tui-grid-row-odd\">\r\n            <td className=\"tui-grid-cell tui-grid-cell-has-input\" style={{height:40,textAlign: \"center\"}} colSpan={colspan}>\r\n                <div className=\"tui-grid-cell-content\">{noneContent}</div>\r\n            </td>\r\n        </tr>;\r\n    }\r\n}\r\nexport default GridList;","import React, {Component} from 'react';\r\nimport {MenuCode, MenuData, MainService, ChangeUserPassword, Logo} from 'main';\r\n/**\r\n * 화면명 : 메인 상단\r\n * 화면 경로 : 없음.\r\n * 화면 코드 : 없음.\r\n * 참고 : \r\n */\r\nclass MainTop extends Component {\r\n    constructor(props) {\r\n\t  super(props);\r\n\t  this.state = {\r\n\t\tsubBgHei:235\r\n\t  };\r\n      this.isMenuItemActive = this.isMenuItemActive.bind(this);\r\n      this.onLogout = this.onLogout.bind(this);\r\n\t  this.onLogoutResult = this.onLogoutResult.bind(this);\r\n\t  this.onClickChangePw = this.onClickChangePw.bind(this);\r\n    }\r\n/**************************************************************************/\r\n/* 기능 */\r\n/**************************************************************************/\r\n    /**\r\n     * 메뉴 활성 여부\r\n     * @param {String} menuCode 메뉴 코드\r\n     * @return {boolean} 메뉴 활성여부\r\n     */\r\n    isMenuItemActive(menuCode) {\r\n      return this.props.main.state.menuCode.substr(0,7) === menuCode;\r\n  }\r\n  /**\r\n   * 로그아웃\r\n   */\r\n  onLogout() {\r\n      MainService.logout(this.onLogoutResult,this.onLogoutResult);\r\n  }\r\n\r\n/**************************************************************************/\r\n/* 핸들러 */\r\n/**************************************************************************/\r\n\t/**\r\n\t * 로그아웃 결과 핸들러\r\n\t * @param {Object} res\r\n\t */\r\n\tonLogoutResult(res) {\r\n\t\tthis.props.main.setState({login:false,role:'',username:'',sessionId:'',userInfo:{}});\r\n\t\tthis.props.main.onMenuChange(MenuCode.DASHBOARD);\r\n\t}\r\n\t/**\r\n\t * 비밀번호 변경\r\n\t */\r\n\tonClickChangePw() {\r\n\t\tconst popTitle = \"Change User Password\";\r\n        this.props.main.showPopup(\r\n            popTitle,\r\n            <ChangeUserPassword main={this.props.main} onClose={(e) => this.props.main.hidePopup(popTitle)}/> ,\r\n            {width:560, height:288, popupBtnAreaVisible:false},null,null\r\n        );\r\n\t}\r\n    render() {\r\n\t\tconst {role, onMenuChange} = this.props;\r\n\t\tlet menuItems = [];\r\n\r\n\t\t// 관리자 메뉴\r\n\t\tif (role === \"ADMIN\") {\r\n\t\t\tmenuItems.push( <MenuItem menu=\"Dashboard\" menuCode={MenuCode.DASHBOARD} currentMenuCode={this.props.main.state.menuCode} onMenuChange={onMenuChange} key={Math.random()} active={this.isMenuItemActive(MenuCode.DASHBOARD)}/>);\r\n            menuItems.push( <MenuItem menu=\"Model\" menuCode={MenuCode.MODEL_MANAGER} currentMenuCode={this.props.main.state.menuCode} onMenuChange={onMenuChange} key={Math.random()} active={this.isMenuItemActive(MenuCode.MODEL)}/>); // Model\r\n            menuItems.push( <MenuItem menu=\"Serivce\" menuCode={MenuCode.SERVICE} currentMenuCode={this.props.main.state.menuCode} subMenu={MenuData.service} onMenuChange={onMenuChange} key={Math.random()} active={this.isMenuItemActive(MenuCode.SERVICE)}/> ); // Service\r\n\t\t\tmenuItems.push( <MenuItem menu=\"Admin\" menuCode={MenuCode.ADMIN} currentMenuCode={this.props.main.state.menuCode} subMenu={MenuData.admin} onMenuChange={onMenuChange} key={Math.random()} active={this.isMenuItemActive(MenuCode.ADMIN)}/> ); // Administrator\r\n\t\t}\r\n\t\t// 모델러 메뉴\r\n        else if (role === \"MODELER\") {\r\n            menuItems.push( <MenuItem menu=\"Model\" menuCode={MenuCode.MODEL_MANAGER} currentMenuCode={this.props.main.state.menuCode} onMenuChange={onMenuChange} key={Math.random()} active={this.isMenuItemActive(MenuCode.MODEL)}/>); // Model\r\n\t\t\tmenuItems.push( <MenuItem menu=\"Serivce\" menuCode={MenuCode.SERVICE} currentMenuCode={this.props.main.state.menuCode} subMenu={MenuData.service} onMenuChange={onMenuChange} key={Math.random()} active={this.isMenuItemActive(MenuCode.SERVICE)}/> ); // Service\r\n        }\r\n        return <div className=\"page_header\">\r\n\t\t\t<div className=\"page_inner\">\r\n\t\t\t\t<Logo onMenuChange={onMenuChange}/>\r\n\r\n\t\t\t\t<div className=\"gnb\">\r\n\t\t\t\t\t<ul>{menuItems}</ul>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<ul className=\"login_sts\">\r\n\t\t\t\t\t{this.props.main.state.login\r\n\t\t\t\t\t\t? <li><a>{this.props.username}</a>\r\n\t\t\t\t\t\t\t<ul className=\"user_menu\">\r\n\t\t\t\t\t\t\t\t<li><a onClick={() => this.onClickChangePw()}>PW 변경</a></li>\r\n\t\t\t\t\t\t\t\t<li><a onClick={() => this.onLogout()}>Logout</a></li>\r\n\t\t\t\t\t\t\t</ul>      \r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t: <li><a onClick={() => onMenuChange(MenuCode.LOGIN)}>Login</a></li>}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</div>\r\n    }\r\n}\r\nclass MenuItem extends Component {\r\n  render() {\r\n    let {menu, menuCode, subMenu, active, onMenuChange, currentMenuCode} = this.props;\r\n\tlet subMenuItems = [];\r\n\tif (!subMenu) subMenu = [];\r\n    for (let i=0; i<subMenu.length; i++) {\r\n      subMenuItems.push(<li className={subMenu[i].menuCode === currentMenuCode ? 'active' : ''} key={Math.random()}><a onClick={() => onMenuChange(subMenu[i].menuCode)}>{subMenu[i].menu}</a></li>)\r\n    }\r\n    return <li className={active ? 'active' : ''} >\r\n\t\t{subMenu.length > 0\r\n\t\t\t? <a onClick={() => console.log(menu)}>{menu}</a>\r\n\t\t\t: <a onClick={() => onMenuChange(menuCode)}>{menu}</a>\r\n\t\t}\r\n\t\t{subMenu.length > 0 ? <ul>{subMenuItems}</ul> : null}\r\n\t</li>\r\n  }\r\n}\r\nexport default MainTop;","import { MenuCode } from 'main';\r\nimport {Component} from 'react';\r\nclass MenuData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getPaths = this.getPaths.bind(this);\r\n        this.getMenuMap = this.getMenuMap.bind(this);\r\n    }\r\n    /* 홈 */\r\n    home = [\r\n        {menuCode:MenuCode.DASHBOARD, menu:\"Dashboard\", paths:[\"Dashboard\",MenuCode.DASHBOARD]} //DashBoard\r\n    ];\r\n    /* Model */\r\n    model = [];\r\n    /* Service */\r\n    service = [\r\n        {menuCode:MenuCode.SERVICE_MANAGER, menu:\"Service Management\", paths:[\"Service\",MenuCode.SERVICE_MANAGER]}\r\n        ,{menuCode:MenuCode.ADMIN_HIST_SERVICEEXEC, menu:\"Service History\", paths:[\"Service\",MenuCode.ADMIN_HIST_SERVICEEXEC]}\r\n    ];\r\n    /* 관리자 */\r\n    admin = [\r\n        {menuCode:MenuCode.ADMIN_USERMGR, menu:\"User Managerment\", paths:[\"Admin\",MenuCode.ADMIN_USERMGR]}\r\n        ,{menuCode:MenuCode.ADMIN_HIST_LOGIN, menu:\"Login History\", paths:[\"Admin\",MenuCode.ADMIN_HIST_LOGIN]}\r\n        ,{menuCode:MenuCode.ADMIN_HIST_MODELREG, menu:\"Model History\", paths:[\"Admin\",MenuCode.ADMIN_HIST_MODELREG]}\r\n        ,{menuCode:MenuCode.ADMIN_HIST_SCALEINOUT, menu:\"Resource History\", paths:[\"Admin\",MenuCode.ADMIN_HIST_SCALEINOUT]}\r\n        ,{menuCode:MenuCode.ADMIN_SACLEINOUTMGR, menu:\"Scale In/Out Management\", paths:[\"Admin\",MenuCode.ADMIN_SACLEINOUTMGR]}\r\n        ,{menuCode:MenuCode.ADMIN_SERVICEGROUP, menu:\"Service Group Management\", paths:[\"Admin\",MenuCode.ADMIN_SERVICEGROUP]}\r\n        ,{menuCode:MenuCode.ADMIN_COMMONCODE, menu:\"Common Code\", paths:[\"Admin\",MenuCode.ADMIN_COMMONCODE]}\r\n    ];\r\n\r\n    // 메뉴 맵 {}\r\n    map = null;\r\n\r\n    /**\r\n     * 메뉴 경로 반환\r\n     * @param {String} menuCode 메뉴 코드\r\n     * @return {Array} 메뉴경로\r\n     */\r\n    getPaths(menuCode) {\r\n        let m = this.getMenuMap();\r\n        let paths;\r\n        let ret = [];\r\n        if (menuCode === MenuCode.DASHBOARD)   // DashBoard\r\n            ret.push( {name:\"Dashboard\", menuCode:menuCode} );\r\n        else if (menuCode === MenuCode.MODEL_MANAGER)   // Model\r\n            ret.push( {name:\"Model\", menuCode:menuCode} );\r\n        if (m[menuCode] !== null && m[menuCode] !== undefined) {\r\n            paths = m[menuCode][\"paths\"];\r\n            for (let i=0; i<paths.length; i++) {\r\n                try {\r\n                    if (paths[i].indexOf(\"MENU\") > -1) {\r\n                        ret.push( {name:m[paths[i]].menu, menuCode:paths[i]} );\r\n                    } else {\r\n                        ret.push( {name:paths[i]} );\r\n                    }\r\n                } catch (err) {}\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * 메뉴 맵 데이터 생성 / 반환\r\n     * @return {Object} menuMap {(MENUCODE):{menuCode,menu(메뉴명),paths:[(경로)]}}\r\n     */\r\n    getMenuMap() {\r\n        if (this.map !== null) return this.map;\r\n        let map = {};\r\n        let i;\r\n        let itm;\r\n        let iitm;\r\n        for (i=0; i<this.model.length; i++) {\r\n            itm = this.model[i];\r\n            if (map[itm.menuCode] === null || map[itm.menuCode] === undefined) {\r\n                map[itm.menuCode] = itm;\r\n            }\r\n        }\r\n        for (i=0; i<this.service.length; i++) {\r\n            itm = this.service[i];\r\n            if (map[itm.menuCode] === null || map[itm.menuCode] === undefined) {\r\n                map[itm.menuCode] = itm;\r\n            }\r\n        }\r\n        for (i=0; i<this.admin.length; i++) {\r\n            itm = this.admin[i];\r\n            if (map[itm.menuCode] === null || map[itm.menuCode] === undefined) {\r\n                map[itm.menuCode] = itm;\r\n            }\r\n            if (itm.children && itm.children.length > 0) {\r\n                for (i=0; i<itm.children.length; i++) {\r\n                    iitm = itm.children[i];\r\n                    if (map[iitm.menuCode] === null || map[iitm.menuCode] === undefined) {\r\n                        map[iitm.menuCode] = iitm;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.map = map;\r\n        return map;\r\n    }\r\n}\r\nexport default new MenuData();","import React, {Component} from 'react';\r\nimport {MainService,MenuCode,CookieNames} from 'main';\r\nimport { common, Msg } from 'comp';\r\n/**\r\n * 화면명 : 로그인 팝업\r\n * 화면 경로 : 없음.\r\n * 화면 코드 : 없음.\r\n * 참고 : \r\n */\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onLoginResult = this.onLoginResult.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        const {\r\n            REACT_APP_DEBUG,REACT_APP_DEV_AUTO_LOGIN\r\n        } = process.env;\r\n        if (REACT_APP_DEBUG && REACT_APP_DEV_AUTO_LOGIN === \"true\") {\r\n            MainService.login(this.refs.uid.value,this.refs.pw.value,this.onLoginResult,(err) => console.log(err));\r\n        } else\r\n        this.refs.uid.focus();\r\n    }\r\n    \r\n/**************************************************************************/\r\n/* 핸들러 */\r\n/**************************************************************************/\r\n    /**\r\n     * 로그인 결과 핸들러\r\n     * @param {Object} res {result:ok|fail,userInfo,data:{sessionId}}\r\n     */\r\n    onLoginResult(res) {\r\n        if (res.result === \"ok\") {\r\n            let role = \"\";\r\n            let userId = \"\";\r\n            let userInfo = {};\r\n            if (res.data && res.data.userInfo) {\r\n                userInfo = res.data.userInfo;\r\n                role = res.data.userInfo.userPermission;\r\n                userId = res.data.userInfo.userId;\r\n            }\r\n            common.setCookie(CookieNames.SESSION_ID,res.data.sessionId);\r\n            this.props.main.setState({login:true,sessionId:res.data.sessionId,role:role,username:userId,showLogin:false,userInfo:userInfo});\r\n            if (process.env.REACT_APP_DEBUG && process.env.REACT_APP_FIRST_MENU_CODE)\r\n                this.props.main.onMenuChange(process.env.REACT_APP_FIRST_MENU_CODE,true);\r\n            else\r\n                this.props.main.onMenuChange(MenuCode.DASHBOARD,true);\r\n        } else if (res.result === \"fail\"){\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    render() {\r\n        const {onClose} = this.props;\r\n        const {\r\n            REACT_APP_DEBUG,REACT_APP_DEV_LOGIN_ID,REACT_APP_DEV_LOGIN_PW\r\n        } = process.env;\r\n        return <div className=\"modal_wrapper\">\r\n        <div className=\"modal_content login_modal\">\r\n      \r\n          <h2 className=\"logo\"><span className=\"hide\">ESP Energy Intelligence</span></h2>\r\n          <input ref='uid' type=\"text\" className=\"ipt_text2\" placeholder=\"아이디를 입력해주세요\" autocomplete=\"off\"\r\n            onKeyDown={(e) => {\r\n                if (e.keyCode === 13) {\r\n                    this.refs.pw.focus();\r\n                }\r\n            }}\r\n            defaultValue={REACT_APP_DEBUG ? REACT_APP_DEV_LOGIN_ID : null}\r\n          />\r\n          <input ref='pw' type=\"password\" className=\"ipt_text2\" placeholder=\"비밀번호\" autocomplete=\"off\" \r\n            onKeyDown={(e) => {\r\n                if (e.keyCode === 13) {\r\n                    MainService.login(this.refs.uid.value,this.refs.pw.value,this.onLoginResult,(err) => console.log(err));\r\n                }\r\n            }}\r\n            defaultValue={REACT_APP_DEBUG ? REACT_APP_DEV_LOGIN_PW : null}\r\n          />\r\n          <p className=\"msg\">\r\n            <span className=\"error\" style={{display:\"none\"}}>등록되지 않은 아이디이이거나 올바르지 않은 비밀번호입니다.<br />아이디와 비밀번호를 확인 후 다시 시도해 주세요.</span>\r\n          </p>\r\n          <a href={(e) => console.log(\"login\")} className=\"btn btn_blue btn_login\" onClick={(e) => {\r\n                MainService.login(this.refs.uid.value,this.refs.pw.value,this.onLoginResult,(err) => console.log(err));\r\n            }}>로그인</a>\r\n          <ul className=\"account_menu\">\r\n            <li><a href={(e) => console.log(\"find id pw\")} onClick={() => Msg.warn(\"관리자에게 문의하세요.\")}>아이디 / 비밀번호 찾기</a></li>\r\n            {/* <li><a href=\"#\">회원가입</a></li> */}\r\n          </ul>\r\n          <a href={() => {onClose()}} onClick={() => {onClose()}} className=\"btn btn_close\"><span className=\"hide\">닫기</span></a>\r\n      \r\n        </div>\r\n      </div>;\r\n    }\r\n}\r\nexport default Login;","import axios from \"axios\";\r\n/**\r\n * 서버 요청\r\n */\r\nexport default axios.create({\r\n  baseURL: process.env.REACT_APP_WAS_URL,\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","import http from \"comp/http-common\";\r\n/**\r\n * 화면명 : 없음.\r\n * 화면 경로 : 없음.\r\n * 화면 코드 : 없음.\r\n * 참고 : 메인 관련 서비스 호출부분\r\n */\r\nclass MainService {\r\n    /**\r\n     * 로그인 요청\r\n     * @param {String} id 아이디\r\n     * @param {String} pw 비밀번호\r\n     * @param {Function} resFn 결과 콜백 함수\r\n     * @param {Function} errFn 실패 콜백 함수\r\n     */\r\n    login(id,pw,resFn,errFn) {\r\n        let formData = new FormData();\r\n        formData.append(\"username\",id);\r\n        formData.append(\"password\",pw);\r\n        return http.post(\"/login\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    /**\r\n     * 로그아웃 요청\r\n     * @param {Function} resFn 결과 콜백 함수\r\n     * @param {Function} errFn 실패 콜백 함수\r\n     */\r\n    logout(resFn, errFn) {\r\n        return http.get(\"/logout\").then(function(res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        }).catch(function(err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        })\r\n    }\r\n    /**\r\n     * 로그인 여부 확인 요청\r\n     * @param {String} sessionId 세션 아이디\r\n     * @param {Function} resFn 결과 콜백 함수\r\n     * @param {Function} errFn 실패 콜백 함수\r\n     */\r\n    chkLogin(sessionId, resFn, errFn) {\r\n        let formData = new FormData();\r\n        formData.append(\"sessionId\",sessionId);\r\n        return http.post(\"/chkLogin\",formData)\r\n            .then(function(res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            }).catch(function(err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    /**\r\n     * 회원 가입 요청\r\n     * @param {Object} parm 파라미터\r\n     * @param {Function} resFn 결과 콜백 함수\r\n     * @param {Function} errFn 실패 콜백 함수\r\n     */\r\n    signUp(parm, resFn, errFn) {\r\n        let formData = new FormData();\r\n        for (let v in parm) {\r\n            formData.append(v,parm[v]);\r\n        }\r\n        return http.post(\"/signup\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    /**\r\n     * 아이디 중복 체크 요청\r\n     * @param {Object} parm 파라미터\r\n     * @param {Function} resFn 결과 콜백 함수\r\n     * @param {Function} errFn 실패 콜백 함수\r\n     */\r\n    chkId(parm, resFn, errFn) {\r\n        let formData = new FormData();\r\n        for (let v in parm) {\r\n            formData.append(v,parm[v]);\r\n        }\r\n        return http.post(\"/chkId\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    /**\r\n     * 공통코드 리스트 요청\r\n     * @param {Function} resFn 결과 콜백 함수\r\n     * @param {Function} errFn 실패 콜백 함수\r\n     */\r\n    commonCodeList(resFn, errFn) {\r\n        let parm = {groupUseYn:'Y',useYn:'Y'};\r\n        let formData = new FormData();\r\n        for (let v in parm) {\r\n            formData.append(v,parm[v]);\r\n        }\r\n        return http.post(\"/code/list\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    /**\r\n     * 비밀번호 변경 요청\r\n     * @param {Object} parm 파라미터\r\n     * @param {Function} resFn 결과 콜백 함수\r\n     * @param {Function} errFn 실패 콜백 함수\r\n     */\r\n    changeUserPw(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let v in parm) {\r\n            formData.append(v,parm[v]);\r\n        }\r\n        return http.post(\"/changeUserPw\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n\t}\r\n}\r\n\r\nexport default new MainService();","import http from \"comp/http-common\";\r\n// import airflow from \"comp/http-airflow\";\r\n\r\nclass DashboardService {\r\n    /**\r\n     * 대시보드 자원관련 데이터\r\n     * @param {Object} parm 파라미터\r\n     * @param {Funtion} resFn 결과 핸들러\r\n     * @param {Function} errFn 에러 핸들러\r\n     */\r\n    dashboardResourceData(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/dashboard/dashboardResourceData\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    /**\r\n     * 대시보드 서비스 관련 데이터\r\n     * @param {Object} parm 파라미터\r\n     * @param {Funtion} resFn 결과 핸들러\r\n     * @param {Function} errFn 에러 핸들러\r\n     */\r\n    dashboardServiceData(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/dashboard/dashboardServiceData\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    /**\r\n     * 실시간 데이터\r\n     * @param {Object} parm 파라미터\r\n     * @param {Funtion} resFn 결과 핸들러\r\n     * @param {Function} errFn 에러 핸들러\r\n     */\r\n    dashboardRealData(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/dashboard/dashboardRealData\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    /**\r\n     * 실시간 데이터2\r\n     * @param {Object} parm 파라미터\r\n     * @param {Funtion} resFn 결과 핸들러\r\n     * @param {Function} errFn 에러 핸들러\r\n     */\r\n    dashboardRealData2(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/dashboard/dashboardRealData2\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n}\r\nexport default new DashboardService();","import React, {Component} from 'react';\r\n/**\r\n * 대시보드 Scale In/Out 그리드\r\n */\r\nclass ScaleInOutGrid extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cellHeight:30,\r\n            cellColsCount:7\r\n        };\r\n    }\r\n    render() {\r\n        let {gridData,height} = this.props;\r\n\t\tif (gridData === undefined) gridData = [];\r\n\t\tif (height === undefined) height=190;\r\n        let itm;\r\n        let rows = [];\r\n\t\tconst rowHei = ((height-25-(10*gridData.length-1))/gridData.length) + \"px\";\r\n        for (let i=0; i<gridData.length; i++) {\r\n            itm = gridData[i];\r\n            rows.push(<Row rowData={itm} rowHei={rowHei}/>);\r\n        }\r\n        return <table className=\"scale_table\" ><tbody>\r\n            {rows}\r\n\t\t\t<tr className=\"sts_day\">\r\n\t\t\t\t<th></th>\r\n\t\t\t\t<td>1</td>\r\n\t\t\t\t<td>2</td>\r\n\t\t\t\t<td>3</td>\r\n\t\t\t\t<td>4</td>\r\n\t\t\t\t<td>5</td>\r\n\t\t\t\t<td>6</td>\r\n\t\t\t\t<td>7</td>\r\n\t\t\t</tr>\r\n        </tbody></table>;\r\n    }\r\n}\r\n\r\nclass Row extends Component {\r\n    render() {\r\n        let {rowData,labelKey,cellCount,rowHei} = this.props;\r\n        if (labelKey === undefined) labelKey = \"serverRole\";\r\n        if (cellCount === undefined) cellCount = 7;\r\n        if (rowHei === undefined) rowHei = 30;\r\n        let cells = [];\r\n        let cls = \"\";\r\n        let key = \"\";\r\n        for (let i=1; i<=cellCount; i++) {\r\n            cls = \"cell\";\r\n            key = \"v\" + i;\r\n\t\t\tif (rowData[key] === \"0\")\r\n\t\t\t\tcls += \" scalein\";\r\n\t\t\telse if (rowData[key] === \"1\")\r\n\t\t\t\tcls += \" scaleout\";\r\n\t\t\tcells.push(<td className={cls} style={{height:rowHei}}></td>);\r\n        }\r\n\t\treturn <tr>\r\n\t\t\t<th>{rowData === \"label\" ? \"Date\" : rowData[labelKey]}</th>\r\n\t\t\t{cells}\r\n\t\t</tr>;\r\n    }\r\n}\r\nexport default ScaleInOutGrid;","import React, {Component} from 'react';\r\nimport {DashboardService} from 'dashboard';\r\nimport {Msg, GridList,common} from 'comp';\r\nimport {LineChart, Line, CartesianGrid, XAxis, YAxis, Legend, Tooltip, PieChart, Pie, Cell} from 'recharts';\r\nimport ScaleInOutGrid from './ScaleInOutGrid';\r\n\r\n/**\r\n * 화면명 : Dashboard\r\n * 화면 경로 : Dashboard\r\n * 화면 코드 : MENU001\r\n * 참고 : \r\n */\r\nclass Dashboard extends Component {\r\n\ttimerID;\r\n\ttimer2ID;\r\n    constructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n            serviceExecHistoryColumns:[],\r\n            serviceExecSummColumns:[\r\n                {name:\"serviceGroupName\",header:\"Service Group\",width:100},\r\n                {name:\"serviceCount\",header:\"Service\",width:80},\r\n                {name:\"execCount\",header:\"Execution\",width:80},\r\n                {name:\"success\",header:\"Success\",width:80},\r\n                {name:\"fail\",header:\"Fail\",width:80}\r\n            ],\r\n            serviceExecStatusForToday:[],\r\n            serviceTodayExecSummForGroup:{},\r\n            serviceTotalExecSummForGroup:{},\r\n            serviceExecHistory:[],\r\n            serviceExecSummListForGroup:[],\r\n            scaleInOutSummary:[],\r\n            containerInfo:{},\r\n            cpuAvgList:[],\r\n            cpuSummListForDay:[],\r\n            cpuSummListForMonth:[],\r\n            cpuSummListForHour:[],\r\n            cpuAvgListForHour:[],\r\n            todayCpuAvg:0,\r\n            serverNames:[],\r\n\t\t\tcpuSummList:undefined,\r\n\t\t\tcpuSummType:undefined\r\n\t\t}\r\n        this.onResultResourceData = this.onResultResourceData.bind(this);\r\n        this.onResultServiceData = this.onResultServiceData.bind(this);\r\n\t\tthis.onTimerDashboard = this.onTimerDashboard.bind(this);\r\n\t\tthis.onTimerDashboard2 = this.onTimerDashboard2.bind(this);\r\n\t\tthis.onResultRealData = this.onResultRealData.bind(this);\r\n\t\tthis.onResultRealData2 = this.onResultRealData2.bind(this);\r\n        this.onClickTab = this.onClickTab.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.props.main.showLoading();\r\n        DashboardService.dashboardServiceData({},this.onResultServiceData,(err) => Msg.error(err.message));\r\n    }\r\n    componentWillUnmount() {\r\n\t\tclearInterval(this.timerID);\r\n\t\tclearInterval(this.timer2ID);\r\n\t};\r\n/**************************************************************************/\r\n/* 기능 */\r\n/**************************************************************************/\r\n\t/**\r\n\t * 실시간 데이터 요청 타이머 핸들러(3초)\r\n\t */\r\n    onTimerDashboard() {\r\n        DashboardService.dashboardRealData({},this.onResultRealData,(err) => Msg.error(err.message));\r\n\t}\r\n\t/**\r\n\t * 실시간 데이터 요청 타이머 핸들러(30초)\r\n\t */\r\n\tonTimerDashboard2() {\r\n        DashboardService.dashboardRealData2({},this.onResultRealData2,(err) => Msg.error(err.message));\r\n\t}\r\n\r\n/**************************************************************************/\r\n/* 핸들러 */\r\n/**************************************************************************/\r\n\t/**\r\n\t * 대시보드 리소스 데이터 결과 핸들러\r\n\t * @param {Object} res {result:ok|fail,data:{\r\n\t * \t\t\t\t\t\t\tscaleInOutSummary:Scale In/Out 최근 일주일,\r\n\t * \t\t\t\t\t\t\tcontainerInfo:Container 현황,\r\n\t * \t\t\t\t\t\t\tcpuAvgList:최근 CPU 데이터,\r\n\t * \t\t\t\t\t\t\tcpuSummListForDay:CPU 이번달 일자별 현황,\r\n\t * \t\t\t\t\t\t\tcpuSummListForMonth:CPU 이번달 현황,\r\n\t * \t\t\t\t\t\t\tcpuSummListForHour:CPU 금일 시간별 현황,\r\n\t * \t\t\t\t\t\t\ttodayCpuAvg:금일 현재 CPU 평균,\r\n\t * \t\t\t\t\t\t\tserverNames:서버명 리스트(차트 라인을 동적으로 만들기위해)\r\n\t * \t\t\t\t\t\t}}\r\n\t */\r\n    onResultResourceData(res) {\r\n        this.props.main.hideLoading();\r\n        if (res.result === \"ok\") {\r\n            let {\r\n                scaleInOutSummary,\r\n                containerInfo,\r\n                cpuAvgList,\r\n                cpuSummListForDay,\r\n                cpuSummListForMonth,\r\n                cpuAvgListForHour,\r\n                cpuSummListForHour,\r\n                todayCpuAvg,\r\n                serverNames\r\n            } = res.data;\r\n            let i;\r\n            let itm;\r\n            for (i=0; i<cpuSummListForHour.length;i++) {\r\n                itm = cpuSummListForHour[i];\r\n                for (let j=0; j<serverNames.length;j++) {\r\n                    itm[serverNames[j]] = parseFloat( itm[serverNames[j]] );\r\n                }\r\n\t\t\t}\r\n            this.setState({\r\n                scaleInOutSummary:scaleInOutSummary,\r\n                containerInfo:containerInfo,\r\n                cpuAvgList:cpuAvgList,\r\n                cpuSummListForDay:cpuSummListForDay,\r\n                cpuSummListForMonth:cpuSummListForMonth,\r\n                cpuSummListForHour:cpuSummListForHour,\r\n                cpuAvgListForHour:cpuAvgListForHour,\r\n                todayCpuAvg:todayCpuAvg === undefined || (todayCpuAvg !== undefined && todayCpuAvg.cpuAverage === undefined)  ? 0 : todayCpuAvg.cpuAverage,\r\n                serverNames:serverNames\r\n            });\r\n        } else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n\r\n        // 실시간 데이터 요청 실행\r\n\t\tthis.timerID = setInterval(() => this.onTimerDashboard(),3000);\t\t//3초\r\n\t\tthis.timer2ID = setInterval(() => this.onTimerDashboard2(),30000);\t//30초\r\n    }\r\n\t/**\r\n\t * 대시보드 서비스 데이터 결과 핸들러\r\n\t * @param {Object} res {result:ok|fail,data:{\r\n\t * \t\t\t\t\t\t\tserviceExecStatusForToday:금일 시간대별 서비스 실행 현황,\r\n\t * \t\t\t\t\t\t\tserviceExecHistory:금일 서비스 실행 이력 리스트,\r\n\t * \t\t\t\t\t\t\tserviceTodayExecSummForGroup:금일 서비스 실행 현황,\r\n\t * \t\t\t\t\t\t\tserviceTotalExecSummForGroup:전체 서비스 실행 현황,\r\n\t * \t\t\t\t\t\t\tserviceExecSummListForGroup:그룹별 서비스 실행 현황 리스트\r\n\t * \t\t\t\t\t\t}}\r\n\t */\r\n    onResultServiceData(res) {\r\n        this.props.main.hideLoading();\r\n        if (res.result === \"ok\") {\r\n            // console.log(res.data);\r\n            const {\r\n                serviceExecStatusForToday,\r\n                serviceTodayExecSummForGroup,\r\n                serviceTotalExecSummForGroup,\r\n                serviceExecHistory,\r\n                serviceExecSummListForGroup\r\n\t\t\t} = res.data;\r\n\t\t\tconst serviceExecHistoryColumns = [\r\n\t\t\t\t{name:\"serviceName\",header:\"Service Name\",width:150,align:\"left\"},\r\n                {name:\"serviceGroupName\",header:\"Service Group\",width:100},\r\n                {name:\"startDate\",header:\"Start\",width:100},\r\n                {name:\"elasped\",header:\"Elasped\",width:90},\r\n\t\t\t\t{name:\"serviceStatus\",header:\"Result\",width:40,align:\"center\",paddingRight:5,sortable:true,\r\n                    renderer: { type: StatusRenderer ,options: { listData:serviceExecHistory } }\r\n                }\r\n\t\t\t];\r\n\t\t\tlet i;\r\n            let itm;\r\n\t\t\tfor (i=0; i<serviceExecStatusForToday.length;i++) {\r\n\t\t\t\titm = serviceExecStatusForToday[i];\r\n                for (let j=0; j<serviceExecSummListForGroup.length;j++) {\r\n                    itm[serviceExecSummListForGroup[j].serviceGroupName] = parseInt( itm[serviceExecSummListForGroup[j].serviceGroupName] );\r\n                }\r\n\t\t\t}\r\n            this.setState({\r\n                serviceExecStatusForToday:serviceExecStatusForToday,\r\n                serviceTodayExecSummForGroup:serviceTodayExecSummForGroup,\r\n                serviceTotalExecSummForGroup:serviceTotalExecSummForGroup,\r\n                serviceExecHistory:serviceExecHistory,\r\n\t\t\t\tserviceExecHistoryColumns:serviceExecHistoryColumns,\r\n\t\t\t\tserviceExecSummListForGroup:serviceExecSummListForGroup\r\n            });\r\n            this.props.main.showLoading();\r\n            DashboardService.dashboardResourceData({},this.onResultResourceData,(err) => Msg.error(err.message));\r\n        } else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n\t}\r\n\t\r\n\t/**\r\n\t * 실시간 데이터 요청(3초) 결과 핸들러\r\n\t * @param {Object} res {result:ok|fail, data:{{\r\n\t * \t\t\t\t\t\t\tcontainerInfo:Container 현황,\r\n\t * \t\t\t\t\t\t\tcpuAvgList:최근 CPU 데이터,\r\n\t * \t\t\t\t\t\t\ttodayCpuAvg:금일 현재 CPU 평균\r\n\t * \t\t\t\t\t\t}}\r\n\t */\r\n    onResultRealData(res) {\r\n        if (res.result === \"ok\") {\r\n            const {\r\n                containerInfo,\r\n                cpuAvgList,\r\n                todayCpuAvg\r\n            } = res.data;\r\n            this.setState({\r\n                containerInfo:containerInfo,\r\n                cpuAvgList:cpuAvgList,\r\n                todayCpuAvg:todayCpuAvg === undefined || (todayCpuAvg !== undefined && todayCpuAvg.cpuAverage === undefined)  ? 0 : todayCpuAvg.cpuAverage\r\n            });\r\n        } else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n\t}\r\n\t/**\r\n\t * 실시간 데이터 요청(30초) 결과 핸들러\r\n\t * @param {Object} res {result:ok|fail, data:{{\r\n\t * \t\t\t\t\t\t\tcpuSummListForHour:CPU 금일 시간별 현황,\r\n\t * \t\t\t\t\t\t\tscaleInOutSummary:Scale In/Out 최근 일주일,\r\n\t * \t\t\t\t\t\t\tserviceExecHistory:금일 서비스 실행 이력 리스트,\r\n\t * \t\t\t\t\t\t\tserviceTodayExecSummForGroup:금일 서비스 실행 현황,\r\n\t * \t\t\t\t\t\t\tserviceTotalExecSummForGroup:전체 서비스 실행 현황,\r\n\t * \t\t\t\t\t\t\tserviceExecSummListForGroup:그룹별 서비스 실행 현황 리스트\r\n\t * \t\t\t\t\t\t}}\r\n\t */\r\n\tonResultRealData2(res) {\r\n        if (res.result === \"ok\") {\r\n\t\t\t// console.log(res.data);\r\n\t\t\tconst {serverNames} = this.state;\r\n            const {\r\n                cpuSummListForHour,\r\n\t\t\t\tserviceExecHistory,\r\n\t\t\t\tserviceExecStatusForToday,\r\n\t\t\t\tserviceTodayExecSummForGroup,\r\n\t\t\t\tserviceTotalExecSummForGroup,\r\n\t\t\t\tserviceExecSummListForGroup,\r\n\t\t\t\tonResultRealData2\r\n\t\t\t} = res.data;\r\n\t\t\tlet i;\r\n            let itm;\r\n            for (i=0; i<cpuSummListForHour.length;i++) {\r\n                itm = cpuSummListForHour[i];\r\n                for (let j=0; j<serverNames.length;j++) {\r\n                    itm[serverNames[j]] = parseFloat( itm[serverNames[j]] );\r\n                }\r\n\t\t\t}\r\n\t\t\tfor (i=0; i<serviceExecStatusForToday.length;i++) {\r\n\t\t\t\titm = serviceExecStatusForToday[i];\r\n                for (let j=0; j<serviceExecSummListForGroup.length;j++) {\r\n                    itm[serviceExecSummListForGroup[j].serviceGroupName] = parseInt( itm[serviceExecSummListForGroup[j].serviceGroupName] );\r\n                }\r\n\t\t\t}\r\n            this.setState({\r\n\t\t\t\tonResultRealData2:onResultRealData2,\r\n                cpuSummListForHour:cpuSummListForHour,\r\n\t\t\t\tserviceExecHistory:serviceExecHistory,\r\n\t\t\t\tserviceExecStatusForToday:serviceExecStatusForToday,\r\n\t\t\t\tserviceTodayExecSummForGroup:serviceTodayExecSummForGroup,\r\n\t\t\t\tserviceTotalExecSummForGroup:serviceTotalExecSummForGroup,\r\n\t\t\t\tserviceExecSummListForGroup:serviceExecSummListForGroup\r\n            });\r\n        } else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n\t}\r\n\t/**\r\n\t * Cpu 현황 타입 클릭 핸들러\r\n\t * @param {String} type Cpu 현황 타입\r\n\t */\r\n    onClickTab(type) {\r\n        const {cpuSummListForHour, cpuSummListForDay, cpuSummListForMonth} = this.state;\r\n        let cpuSummList = [];\r\n        if (type === \"time\")\r\n            cpuSummList = cpuSummListForHour;\r\n        else if (type === \"day\")\r\n            cpuSummList = cpuSummListForDay;\r\n        else if (type === \"month\")\r\n            cpuSummList = cpuSummListForMonth;\r\n        this.setState({cpuSummList:cpuSummList,cpuSummType:type});\r\n    }\r\n    render() {\r\n\t\tlet {\r\n            serviceExecStatusForToday,serviceTodayExecSummForGroup,serviceTotalExecSummForGroup,serviceExecHistory,serviceExecSummListForGroup,\r\n            scaleInOutSummary,cpuAvgList,cpuSummListForHour,serverNames,todayCpuAvg,containerInfo,\r\n            serviceExecHistoryColumns,serviceExecSummColumns,cpuSummList,cpuSummType\r\n\t\t} = this.state;\r\n\t\tif (cpuSummList === undefined) cpuSummList = cpuSummListForHour;\r\n\t\tif (cpuSummType === undefined) cpuSummType = \"time\";\r\n\t\tif (containerInfo === undefined) containerInfo = [];\r\n\t\tlet i;\r\n\t\tlet contains = [];\r\n\t\tfor (i=containerInfo.length-1; i>=0; i--) {\r\n\t\t\tcontains.push(<tr><td>{containerInfo[i].role}</td><td>{containerInfo[i].hasContainer}</td></tr>);\r\n\t\t}\r\n\r\n\r\n\t\tconst RealCpuTooltip = ({ active, payload, label }) => {\r\n\t\t\ttry {\r\n\t\t\t\tif (active) {\r\n\t\t\t\t\tlet lblStr = payload[0].payload.receiveDate;\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"custom-tooltip\" style={{border:\"dotted 1px #419efa\",background:\"#FFF\",padding:\"10px\",color:payload[0].color}}>\r\n\t\t\t\t\t\t{lblStr + \" : \" + (isNaN(payload[0].value) ? 0 : payload[0].value) + \"%\"}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {}\r\n\t\t\t\r\n\t\t\treturn null;\r\n\t\t};\r\n\t\t  \r\n\t\tconst CpuUtilizationTooltip = ({ active, payload, label }) => {\r\n\t\t\ttry {\r\n\t\t\t\tif (active) {\r\n\t\t\t\t\tlet tooltips = [<div style={{color:\"#000\",fontWeight:\"bold\"}}>{label + (cpuSummType === \"time\" ? \"시\" : \"\")}</div>];\r\n\t\t\t\t\tfor (let i=0; i<payload.length; i++) {\r\n\t\t\t\t\t\ttooltips.push(<div style={{color:payload[i].color}}>{payload[i].name + \" : \" + (isNaN(payload[i].payload[payload[i].dataKey]) ? 0 : payload[i].payload[payload[i].dataKey]) + \"%\"}</div>);\r\n\t\t\t\t\t}\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"custom-tooltip\" style={{border:\"dotted 1px #CECECE\",background:\"#FFF\",padding:\"10px\",color:payload[0].color}}>\r\n\t\t\t\t\t\t{tooltips}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {}\r\n\t\t\t\r\n\t\t\treturn null;\r\n\t\t};\r\n\t\tconst ServiceExecutionTooltip = ({ active, payload, label }) => {\r\n\t\t\ttry {\r\n\t\t\t\tif (active) {\r\n\t\t\t\t\tlet tooltips = [<div style={{color:\"#000\",fontWeight:\"bold\"}}>{label + \"시 (성공/실패)\"}</div>];\r\n\t\t\t\t\tfor (let i=0; i<payload.length; i++) {\r\n\t\t\t\t\t\ttooltips.push(<div style={{color:payload[i].color}}>{payload[i].name + \" : \" + (isNaN(payload[i].payload[payload[i].dataKey]) ? 0 : payload[i].payload[payload[i].dataKey]) + \" (\" + payload[i].payload[payload[i].dataKey+\"_success\"] + \"/\" + payload[i].payload[payload[i].dataKey+\"_fail\"] + \")\"}</div>);\r\n\t\t\t\t\t}\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"custom-tooltip\" style={{border:\"dotted 1px #CECECE\",background:\"#FFF\",padding:\"10px\",color:payload[0].color}}>\r\n\t\t\t\t\t\t{/* {lblStr + \" : \" + payload[0].value + \"%\"} */}\r\n\t\t\t\t\t\t{tooltips}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {}\r\n\t\t\t\r\n\t\t\treturn null;\r\n\t\t};\r\n\r\n\t\tconst pieData = [{name: 'todayAvg', value: todayCpuAvg}, {name: 'blank', value: 100-todayCpuAvg}];\r\n\t\tlet todayCpuAvgSty = {right:86};\r\n\t\t/*\r\n\t\t\t\tfontsize 40\r\n\t\t\r\n\t\t\t\t1(1)\r\n\t\t\t\t102\t\t\t\t(86+16)\r\n\t\t\r\n\t\t\t\t11(2)\r\n\t\t\t\t93\t\t\t\t(86+7)\r\n\t\t\r\n\t\t\t\t1.1(3)\r\n\t\t\t\t86\r\n\t\t\r\n\t\t\t\t11.1(4)\r\n\t\t\t\t78\t\t\t\t(86-8)\r\n\t\t*/\r\n\t\t// 자리수에 따른 가운데 위치하기위해 스타일 조절\r\n\t\tif (todayCpuAvg.length === 1) todayCpuAvgSty.right = 102;\r\n\t\telse if (todayCpuAvg.length === 2) todayCpuAvgSty.right = 93;\r\n\t\telse if (todayCpuAvg.length === 4) todayCpuAvgSty.right = 78;\r\n\r\n\t\tconst colors = [\"#f4b922\",\"#71b8ff\",\"#07c180\",\"#fc8d27\",\"#8f8dfc\"];\r\n\t\tlet itm;\r\n\t\tlet cpuUtilizationLines = [];\r\n        for (i=0; i<serverNames.length; i++) {\r\n            itm = serverNames[i];\r\n            if (itm === \"Total\")\r\n\t\t\t\tcpuUtilizationLines.push(<Line type=\"linear\" dataKey={itm} fill=\"#FF0000\" stroke={\"#FF0000\"} strokeWidth={2} dot={{r:3}} isAnimationActive={false}/>);\r\n            else\r\n\t\t\t\tcpuUtilizationLines.push(<Line type=\"linear\" dataKey={itm} stroke={colors[i]} fill={colors[i]} dot={{r:3}} isAnimationActive={false}/>);\r\n\t\t}\r\n\t\t\r\n\r\n\r\n\t\tlet serviceExecutionLines = [];\r\n        for (i=0; i<serviceExecSummListForGroup.length; i++) {\r\n            itm = serviceExecSummListForGroup[i];\r\n            serviceExecutionLines.push(<Line type=\"linear\" dataKey={itm.serviceGroupName} stroke={colors[i]} fill={colors[i]} activeDot={{r:3}} isAnimationActive={false}/>);\r\n        }\r\n\t\t\r\n        return <div className=\"dashboard_container\">\r\n            <div className=\"dash_tit\">\r\n                <h3>Resource</h3>\r\n                {this.props.main.state.login ? <div className=\"float\">\r\n                <a href=\"http://61.97.187.199:9900\" target=\"_blank\" className=\"img_link\" alt=\"visualizer\"></a>\r\n                <a href=\"http://61.97.187.199:9000\" target=\"_blank\" className=\"img_link\" alt=\"swarmpit\"></a>\r\n                </div>: null}\r\n            </div>\r\n            <ul className=\"dash_layout dash_layout1\">\r\n\t\t\t\t{/* <!-- Server/Container --> */}\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<ul className=\"inner_layout\">\r\n\t\t\t\t\t\t<li><dl>\r\n\t\t\t\t\t\t\t<dt>Server</dt>\r\n\t\t\t\t\t\t\t<dd>\r\n\t\t\t\t\t\t\t\t<b>{containerInfo.length}</b>\r\n\t\t\t\t\t\t\t\t<p>nodes</p>\r\n\t\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t\t</dl></li>\r\n\t\t\t\t\t\t<li><dl>\r\n\t\t\t\t\t\t\t<dt>Container</dt>\r\n\t\t\t\t\t\t\t<dd> \r\n\t\t\t\t\t\t\t\t<table>\r\n\t\t\t\t\t\t\t\t\t<colgroup>\r\n\t\t\t\t\t\t\t\t\t\t<col style={{width:120}} />\r\n\t\t\t\t\t\t\t\t\t\t<col style={{width:60}} />\r\n\t\t\t\t\t\t\t\t\t</colgroup>\r\n\t\t\t\t\t\t\t\t\t{contains}\r\n\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t\t\t</dl>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</li>\r\n\t\t\t\t{/* <!-- CPU --> */}\r\n\t\t        <li>\r\n          \t\t\t<ul className=\"inner_layout\">\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<dl>\r\n\t\t\t\t\t\t\t<dt>CPU</dt>\r\n\t\t\t\t\t\t\t<dd style={{display:\"flex\",justifyContent:\"center\",marginLeft:20}}>\r\n\t\t\t\t\t\t\t<LineChart width={590} height={210} data={cpuAvgList}\r\n\t\t\t\t\t\t\t\tmargin={{top: 5, right: 30, left: 20, bottom: 5}}>\r\n\t\t\t\t\t\t\t\t<YAxis type=\"number\" domain={[0, 100]} width={10}/>\r\n\t\t\t\t\t\t\t\t<XAxis dataKey=\"receiveDate\"/>\r\n\t\t\t\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\"/>\r\n\t\t\t\t\t\t\t\t<Tooltip content={<RealCpuTooltip />} />\r\n\t\t\t\t\t\t\t\t<Line type=\"monotone\" dataKey=\"cpuAverage\" stroke=\"#419efa\" isAnimationActive={false} dot={false} activeDot={{r: 5}}/>\r\n\t\t\t\t\t\t\t</LineChart>\r\n\t\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t\t</dl>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t<div className=\"graph_wrap\" style={{marginTop: -10,height:220}}>\r\n\t\t\t\t\t\t<dl><dt>Today CPU Avg.</dt></dl>\r\n\t\t\t\t\t\t<PieChart width={220} height={200} >\r\n\t\t\t\t\t\t\t<Pie dataKey={\"value\"}\r\n\t\t\t\t\t\t\t\tdata={pieData} \r\n\t\t\t\t\t\t\t\tcx={70} \r\n\t\t\t\t\t\t\t\tcy={90} \r\n\t\t\t\t\t\t\t\tinnerRadius={50}\r\n\t\t\t\t\t\t\t\touterRadius={70} \r\n\t\t\t\t\t\t\t\tpaddingAngle={0}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Cell fill=\"#419efa\"/>\r\n\t\t\t\t\t\t\t\t<Cell fill=\"#ebedf1\"/>\r\n\t\t\t\t\t\t\t</Pie>\r\n\t\t\t\t\t\t</PieChart>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<span className=\"percent_value\" style={todayCpuAvgSty}>{todayCpuAvg}<sup>%</sup></span>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</li>\r\n\t\t\t\t{/* <!-- Scale In / Out --> */}\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<dl>\r\n\t\t\t\t\t\t<dt>Scale In / Out</dt>\r\n\t\t\t\t\t\t<dd><ScaleInOutGrid gridData={scaleInOutSummary}/></dd>\r\n\t\t\t\t\t</dl>\r\n\t\t\t\t</li>\r\n\t\t\t\t{/* <!-- CPU Utilization --> */}\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<dl>\r\n\t\t\t\t\t\t<dt>CPU Utilization</dt>\r\n\t\t\t\t\t\t<dd>\r\n\t\t\t\t\t\t\t{/* </dd><!-- 시간/일/월 라디오 커스텀 버튼 --> */}\r\n\t\t\t\t\t\t\t<div className=\"ipradio_group\">\r\n\t\t\t\t\t\t\t\t<label className=\"term_radio\">\r\n\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"cp_item\" value=\"시간\" defaultChecked={cpuSummType === \"time\"} onClick={() => this.onClickTab('time')}/>\r\n\t\t\t\t\t\t\t\t<span>시간</span>\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t<label className=\"term_radio\">\r\n\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"cp_item\" value=\"일\" defaultChecked={cpuSummType === \"day\"} onClick={() => this.onClickTab('day')}/>\r\n\t\t\t\t\t\t\t\t<span>일</span>\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t<label className=\"term_radio\">\r\n\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"cp_item\" value=\"월\" defaultChecked={cpuSummType === \"month\"} onClick={() => this.onClickTab('month')}/>\r\n\t\t\t\t\t\t\t\t<span>월</span>\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"graph_wrap\">\r\n\t\t\t\t\t\t\t\t<LineChart width={723} height={240} data={cpuSummList}>\r\n\t\t\t\t\t\t\t\t\t<XAxis dataKey=\"receiveDate\"/>\r\n\t\t\t\t\t\t\t\t\t<YAxis />\r\n\t\t\t\t\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\"/>\r\n\t\t\t\t\t\t\t\t\t<Tooltip content={<CpuUtilizationTooltip />} />\r\n\t\t\t\t\t\t\t\t\t<Legend verticalAlign=\"bottom\" iconType=\"circle\"/>\r\n\t\t\t\t\t\t\t\t\t{cpuUtilizationLines}\r\n\t\t\t\t\t\t\t\t</LineChart>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t</dl>\r\n\t\t\t\t</li>\r\n\t\t\t\t{/* <!-- Sercive Execution --> */}\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<dl>\r\n\t\t\t\t\t\t<dt>Sercive Execution</dt>\r\n\t\t\t\t\t\t<dd>\r\n\t\t\t\t\t\t\t<div className=\"graph_wrap\" style={{marginTop:20}}>\r\n\t\t\t\t\t\t\t\t<LineChart width={952} height={240} data={serviceExecStatusForToday}>\r\n\t\t\t\t\t\t\t\t\t<XAxis dataKey=\"hour\" width={20}/>\r\n\t\t\t\t\t\t\t\t\t<YAxis/>\r\n\t\t\t\t\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\"/>\r\n\t\t\t\t\t\t\t\t\t<Tooltip content={<ServiceExecutionTooltip />} />\r\n\t\t\t\t\t\t\t\t\t<Legend verticalAlign=\"bottom\" iconType=\"circle\"/>\r\n\t\t\t\t\t\t\t\t\t{serviceExecutionLines}\r\n\t\t\t\t\t\t\t\t</LineChart>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t</dl>\r\n\t\t\t\t</li>\r\n\r\n\t\t\t</ul>\r\n\r\n\t\t\t<div className=\"dash_tit\">\r\n\t\t\t\t<h3>Service</h3>\r\n\t\t\t</div>\r\n\r\n\t\t\t<ul className=\"dash_layout dash_layout2\">\r\n        \t\t{/* <!-- Today Execution --> */}\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<dl>\r\n\t\t\t\t\t\t<dt>Today Execution</dt>\r\n\t\t\t\t\t\t<dd>\r\n\t\t\t\t\t\t<table className=\"table_execution\"><tbody>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td colSpan=\"2\">\r\n\t\t\t\t\t\t\t\t<h2>{common.displNum(serviceTodayExecSummForGroup.total)}</h2>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<span className=\"blue\">{common.displNum(serviceTodayExecSummForGroup.success)}</span>\r\n\t\t\t\t\t\t\t\t<p>success</p>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<span className=\"orange\">{common.displNum(serviceTodayExecSummForGroup.fail)}</span>\r\n\t\t\t\t\t\t\t\t<p>fail</p>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</tbody></table>\r\n\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t</dl>\r\n\t\t\t\t</li>\r\n\t\t\t\t{/* <!-- Total Excution --> */}\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<dl>\r\n\t\t\t\t\t\t<dt>Total Excution</dt>\r\n\t\t\t\t\t\t<dd>\r\n\t\t\t\t\t\t<ul className=\"inner_layout\">\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<table className=\"table_execution\">\r\n\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td colSpan=\"2\">\r\n\t\t\t\t\t\t\t\t\t<h3>{common.displNum(serviceTotalExecSummForGroup.total)}</h3>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<span>{common.displNum(serviceTotalExecSummForGroup.success)}</span>\r\n\t\t\t\t\t\t\t\t\t<p>success</p>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<span>{common.displNum(serviceTotalExecSummForGroup.fail)}</span>\r\n\t\t\t\t\t\t\t\t\t<p>fail</p>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className=\"graph_wrap\" style={{marginLeft:14}}>\r\n\t\t\t\t\t\t\t<div className=\"table_type1 table_type3\">\r\n\t\t\t\t\t\t\t\t<GridList columns={serviceExecSummColumns} gridData={serviceExecSummListForGroup} bodyHeight={130} key={Math.random()}/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t</dl>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t<div className=\"graph_wrap\">\r\n\t\t\t\t\t<div className=\"table_type1\">\r\n\t\t\t\t\t\t<GridList columns={serviceExecHistoryColumns} gridData={serviceExecHistory} bodyHeight={160} key={Math.random()}/>\r\n\t\t\t\t\t</div>            \r\n\t\t\t\t</div>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>;\r\n    }\r\n}\r\n/**\r\n * Status 컬럼 랜더러\r\n */\r\nclass StatusRenderer extends Component {\r\n    render() {\r\n\t\tconst {item} = this.props;\r\n\t\tlet cls = item.serviceStatus === \"success\" ? \"staus staus_completion\" : \"staus staus_warning\";\r\n        return <span className={cls} title={item.serviceStatus}></span>;\r\n    }\r\n}\r\nexport default Dashboard;","import React, {Component} from 'react';\r\nimport Grid from '@toast-ui/react-grid';\r\nimport TuiGrid from 'tui-grid';\r\nimport {Pagination, Msg, NameRenderer, common, Validation} from 'comp';\r\nimport {ModelService, ModelReg, ModelDetail} from 'model';\r\n\r\n/**\r\n * 화면명 : 모델 관리\r\n * 화면 경로 : 모델 > 모델 관리\r\n * 화면 코드 : MENU00201\r\n * 참고 : \r\n *      그리드 : https://nhn.github.io/tui.grid/latest/Grid\r\n */\r\nclass ModelManager extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            gridData:[],\r\n            columns:[],\r\n            bodyHeight:200,\r\n            pagesPage:1,\r\n            pagesTotalCount:0,\r\n            pagesPerPage:5\r\n        };\r\n        this.requestData = this.requestData.bind(this);\r\n        this.onResultList = this.onResultList.bind(this);\r\n        this.onClickPageItem = this.onClickPageItem.bind(this);\r\n        this.onClickDel = this.onClickDel.bind(this);\r\n        this.onResultDel = this.onResultDel.bind(this);\r\n        this.onConfirmOkDel = this.onConfirmOkDel.bind(this);\r\n        this.onConfirmCancelDel = this.onConfirmCancelDel.bind(this);\r\n        this.onClickReg = this.onClickReg.bind(this);\r\n        this.onCloseReg = this.onCloseReg.bind(this);\r\n        this.popupModify = this.popupModify.bind(this);\r\n        this.onClickSch = this.onClickSch.bind(this);\r\n        this.onClickGridNameColumn = this.onClickGridNameColumn.bind(this);\r\n        this.onClickTestReq = this.onClickTestReq.bind(this);\r\n        this.onResultTestReq = this.onResultTestReq.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        TuiGrid.setLanguage('ko');\r\n        TuiGrid.applyTheme('clean'); // default, striped, clean\r\n        this.requestData(1);\r\n    }\r\n    /**\r\n\t * 페이지 클릭 이벤트 핸들러\r\n\t * @param {int} page \r\n\t */\r\n    onClickPageItem(page) {\r\n        const {schKey, schType} = this.refs;\r\n        if (schKey.value.length > 0 && schType.value.length > 0)\r\n            this.requestData(page,schType.value,schKey.value);\r\n        else\r\n            this.requestData(page);\r\n\r\n    }\r\n    /**\r\n     * 모델 리스트\r\n     * @param {int} page \r\n     * @param {String} schType \r\n     * @param {String} schKeyword \r\n     */\r\n    requestData(page,schType,schKeyword) {\r\n        if (page === undefined) page = this.state.pagesPage;\r\n        this.props.main.showLoading();\r\n        const parm = {\r\n            page:page\r\n        };\r\n        if (schType !== undefined && schKeyword !== undefined) {\r\n            // Msg.info(\"필터전 : \" + schKeyword);\r\n            schKeyword = Validation.filterSchKeyword(schKeyword);\r\n            // Msg.info(\"필터후 : \" + schKeyword);\r\n            parm.schKey = schKeyword;\r\n            parm.schType = schType;\r\n        }\r\n        ModelService.list(parm,this.onResultList,(err) => Msg.error(err.message));\r\n    }\r\n    /**\r\n     * 모델 리스트 결과 핸들러\r\n     * @param {Object} res \r\n     */\r\n    onResultList(res) {\r\n        this.props.main.hideLoading();\r\n        if (res.result===\"ok\") {\r\n            const pagesInfo = res.data;\r\n            const columns = [\r\n                {name:'modelName',header:'Model Name',minWidth:100,sortable:true,\r\n                    renderer: { type: NameRenderer ,options: {\r\n                        listData:res.list,labelKey:\"modelName\",\r\n                        onClickGridNameColumn:this.onClickGridNameColumn\r\n                    } }\r\n                }\r\n                ,{name:'priorityNm',header:'Priority', width:150,align:\"center\",sortable:true,whiteSpace:\"normal\"}\r\n                ,{name:'limitRuntime',header:'Limit (Min.)', width:150,align:\"center\",sortable:true,whiteSpace:\"normal\"}\r\n                ,{name:'regDate',header:'Update Date',width:200,align:\"center\",sortable:true,whiteSpace:\"normal\"}\r\n                ,{name:'userId',header:'User',width:150,align:\"center\",sortable:true,whiteSpace:\"normal\"}\r\n                ,{name:'testResult',header:'Test Result (CPU/Duration)',width:200,align:\"center\"}\r\n                ,{name:'resourceTest',header:'Resource Test',width:100,align:\"center\",\r\n                    renderer: { type: LinkRenderer ,options: { listData:res.list,onClickTestReq:this.onClickTestReq } }\r\n                }\r\n            ];\r\n            this.setState({gridData:res.list,pagesPage:pagesInfo.page,pagesTotalCount:pagesInfo.totalCount,pagesPerPage:pagesInfo.pageCount,columns:columns});\r\n        } else if (res.result === \"fail\"){\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    /**\r\n\t * 랜더러 클릭 이벤트 핸들러\r\n\t * @param {Object} item 선택 Row 데이터\r\n\t * @param {MouseEvent} e 클릭 이벤트\r\n\t * @param {Object} props 랜더러 Options\r\n\t */\r\n    onClickGridNameColumn(item,e,props) {\r\n        if (this.props.isPopup && this.props.onChangeItem) {\r\n            this.props.onChangeItem(item);\r\n        }\r\n        if (this.props.isPopup) {\r\n            this.props.onSelection();\r\n            this.props.onClose();\r\n        } else {\r\n            try {\r\n                let {userInfo} = this.props.main.state;\r\n                // userInfo.userPermission = \"MODELER\"; // TEST\r\n                // 관리자/등록자는 수정 팝업\r\n                if (userInfo.userPermission === \"ADMIN\" || (item.userId === userInfo.userId)) {\r\n                    ModelService.getModelInfo( item.modelId,(res) => {\r\n                        if (res.result === \"ok\") {\r\n                            this.popupModify(res.data.modelInfo, res.list);\r\n                          }\r\n                          else if (res.result === \"fail\") {\r\n                              Msg.error(res.message);\r\n                          }\r\n                    },(e) => console.log(e) );\r\n                } else {\r\n                    this.setState( {selectionRowKey:e.rowKey,selectionItem:item,selectionColumName:e.columnName,showDetail:true} );\r\n                    const popTitle = \"Model Info.\";\r\n                    this.props.main.showPopup(\r\n                        popTitle,\r\n                        <ModelDetail title={popTitle} main={this.props.main} selectionItem={item} onClose={(e) => this.onCloseDetail(popTitle)} />,\r\n                        {width:735, height:677, closeLabel:\"닫기\",okLabel:\"수정\", contentAppendClass:\"model_content\"},null,null\r\n                    );\r\n                }\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n\t * 검색 클릭 핸들러\r\n\t */\r\n    onClickSch() {\r\n        this.requestData(1, this.refs.schType.value, this.refs.schKey.value );\r\n    }\r\n    /**\r\n     * 삭제 클릭 핸들러\r\n     */\r\n    onClickDel() {\r\n        const popTitle = \"모델 삭제\";\r\n        this.props.main.showPopup(\r\n            popTitle,\r\n            \"모델 삭제하시겠습니까?\",\r\n            {width:300, height:200, headerVisiable:false},() => this.onConfirmOkDel(),null\r\n        );\r\n    }\r\n    /**\r\n     * 모델 삭제 확인 OK\r\n     */\r\n    onConfirmOkDel() {\r\n        // console.log( this.refs.grid.getInstance().getCheckedRows() );\r\n        const chkedModels = this.refs.grid.getInstance().getCheckedRows();\r\n        let delModels = [];\r\n        for (let i=0; i<chkedModels.length; i++) {\r\n            delModels.push( chkedModels[i].modelId );\r\n        }\r\n        ModelService.delete(delModels,this.onResultDel,(e) => console.log(e));\r\n    }\r\n    /**\r\n     * 모델 삭제 확인 취소\r\n     */\r\n    onConfirmCancelDel() {\r\n        // 삭제 확인 취소시\r\n    }\r\n    /**\r\n     * 모델 삭제 결과 핸들러\r\n     * @param {Object} res \r\n     */\r\n    onResultDel(res) {\r\n        this.requestData();\r\n        if (res.result === \"ok\") {\r\n            Msg.ok(\"모델 삭제 되었습니다.\");\r\n        }\r\n        else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    /**\r\n     * 모델 등록 클릭 핸들러\r\n     */\r\n    onClickReg() {\r\n        const {\r\n            modifyModelInfo, modifyModelFiles\r\n        } = this.state;\r\n        // this.setState({showReg:true});\r\n        const popTitle = \"Model Regist\";\r\n        this.props.main.showPopup(\r\n            popTitle,\r\n            <ModelReg title={popTitle} main={this.props.main} modifyFlag={modifyModelInfo !== undefined} modifyModelInfo={modifyModelInfo} modifyModelFiles={modifyModelFiles} onClose={(e) => this.onCloseReg(popTitle)}/> ,\r\n            {width:735, height:530, okLabel:\"등록\", popupBtnAreaVisible:false, contentAppendClass:\"model_content\"},null,null\r\n        );\r\n    }\r\n    /**\r\n     * 모델 수정 팝업\r\n     * @param {Object} modelInfo \r\n     * @param {Array} modelFiles \r\n     */\r\n    popupModify(modelInfo, modelFiles) {\r\n        // this.setState({modifyModelInfo:modelInfo, modifyModelFiles:modelFiles, showDetail:false, showReg:true});\r\n        const popTitle = \"Model Modify\";\r\n        this.props.main.showPopup(\r\n            popTitle,\r\n            <ModelReg main={this.props.main} modifyFlag={modelInfo !== undefined} modifyModelInfo={modelInfo} modifyModelFiles={modelFiles} onClose={(e) => this.onCloseReg(popTitle)}/> ,\r\n            {width:735, height:530, okLabel:\"저장\", popupBtnAreaVisible:false, contentAppendClass:\"model_content\"},null,null\r\n        );\r\n    }\r\n    /**\r\n     * 등록 / 수정 팝업 닫힘 핸들러\r\n     * @param {String} title \r\n     */\r\n    onCloseReg(title) {\r\n        this.requestData(this.state.pagesPage);\r\n        this.setState({modifyModelInfo:undefined, modifyModelFiles:undefined});\r\n        this.props.main.hidePopup(title);\r\n    }\r\n    /**\r\n     * 리스트 평가 버튼 클릭 핸들러\r\n     * @param {Object} item \r\n     * @param {Event} e \r\n     * @param {Object} props \r\n     */\r\n    onClickTestReq(item,e,props) {\r\n        // console.log('onClickTestReq');\r\n        // console.log(item);\r\n        // console.log(e);\r\n        // console.log(props);\r\n        ModelService.modelTestReq(item.modelId,this.onResultTestReq,(err) => Msg.error(err.message));\r\n    }\r\n    /**\r\n     * 평가 결과 핸들러\r\n     * @param {Object} res \r\n     */\r\n    onResultTestReq(res) {\r\n        if (res.result === \"ok\") {\r\n            Msg.ok(res.message);\r\n        }\r\n        else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        let {\r\n            gridData, bodyHeight, columns, \r\n            pagesPage, pagesTotalCount, pagesPerPage\r\n        } = this.state;\r\n        let rh = [];\r\n        return <div className=\"page_layout\">\r\n\r\n\t\t\t<div className=\"layout_contents\">\r\n\t\t\t<div className=\"content_list model_aid_list table_type1\">\r\n\t\r\n\t\t\t\t<div className=\"content_title\">\r\n\t\t\t\t<h3 className=\"tit\">Model Management</h3>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"search_condition marginbottomremove\" >\r\n\t\t\t\t\t<div className=\"ipt_group search_basis\"><div className=\"group_center\">\r\n\t\t\t\t\t\t<select ref=\"schType\" className=\"combobox\" style={{float:\"left\",marginLeft:10}}>\r\n\t\t\t\t\t\t\t<option value=\"modelName\">Model Name</option>\r\n\t\t\t\t\t\t\t<option value=\"user\">User</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t<input ref=\"schKey\" type=\"text\" className=\"ipt_text ml10\" placeholder=\"검색어를 입력해 주세요.\" style={{width:495}} />\r\n\t\t\t\t\t\t<a role=\"button\" className=\"btn btn_black\" onClick={() => this.onClickSch()}>검색</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<a role=\"button\" className=\"btn btn_add btn_blue\" onClick={this.onClickReg}></a>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"content_stitle\">\r\n\t\t\t\t\t<span>Total : {common.displNum(pagesTotalCount)}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Grid ref=\"grid\" rowHeaders={rh} header={{height:50,whiteSpace:\"normal\"}} \r\n\t\t\t\t\tdata={gridData} columnOptions={{resizable: true}}\r\n                    columns={columns}\r\n                    scrollX={false} scrollY={false}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className=\"gridControlArea btn_area\">\r\n\t\t\t\t\t<Pagination ref={'page'}\r\n\t\t\t\t\t\t\t\t\tpage={pagesPage}\r\n\t\t\t\t\t\t\t\t\ttotalCount={pagesTotalCount}\r\n\t\t\t\t\t\t\t\t\tperPage={pagesPerPage}\r\n\t\t\t\t\t\t\t\t\tonClickItem={this.onClickPageItem}/>\r\n\t\t\t\t</div>\r\n\t\t\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>;\r\n    }\r\n}\r\n/**\r\n * 평가 컬럼 랜더러\r\n */\r\nclass LinkRenderer {\r\n    constructor(props) {\r\n        const { onClickTestReq, listData } = props.columnInfo.renderer.options;\r\n        let item = undefined;\r\n        if (listData && listData.length > 0)\r\n        item = listData[props.rowKey];\r\n        if (item === undefined) item = {};\r\n        let el = document.createElement('b');\r\n        // 평가 중이아닐경우 평가 버튼 표시\r\n        // 평가 중일경우 Testing.. 텍스트 표시\r\n        if (item.evaluationStatus === 'tested' || item.evaluationStatus === 'init' ) {\r\n            el = document.createElement('a');\r\n            el.className = \"table_btn btn_lineblue btn_resource gridItemBtn\";\r\n            el.innerText = \"TEST\";\r\n            el.title=\"TEST\";\r\n            el.addEventListener(\"click\",(e) => onClickTestReq(item,e,props));\r\n        } else {\r\n            el.className=\"font_blue\";\r\n            el.innerText = \"Testing..\";\r\n        }\r\n        this.el = el;\r\n    }\r\n    getElement() {\r\n        return this.el;\r\n    }\r\n}\r\nexport default ModelManager;","import http from \"comp/http-common\";\r\n/**\r\n * ModelService\r\n * use Example\r\n *  ModelService.list(function(res) {\r\n    if (res.result === \"ok\") {\r\n        // TODO :: success process\r\n    }\r\n,(err) => Msg.error(err.message));\r\n **/\r\nclass ModelService {\r\n    /**\r\n     * 모델 리스트\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    list(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/model/list\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 모델 등록\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    regist(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        if (process.env.NODE_ENV === \"development\")\r\n            formData.append(\"developing\",\"true\");// 로컬에서 개발중일때\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/model/regist\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 모델명 중복 체크\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    chkModelName(modelName,resFn,errFn) {\r\n        let formData = new FormData();\r\n        formData.append(\"modelName\",modelName);\r\n        return http.post(\"/model/chkModelName\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 모델닉 중복 체크\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    chkModelNick(modelNick,resFn,errFn) {\r\n        let formData = new FormData();\r\n        formData.append(\"modelNick\",modelNick);\r\n        return http.post(\"/model/chkModelNick\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 모델 파일 삭제\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    fileDelete(fileCodes,resFn,errFn) {\r\n        let formData = new FormData();\r\n        formData.append(\"fileCodes\",fileCodes);\r\n        return http.post(\"/file/delete\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 모델 삭제\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    delete(modelIds,resFn,errFn) {\r\n        let formData = new FormData();\r\n        formData.append(\"modelIds\",modelIds);\r\n        return http.post(\"/model/delete\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 모델 정보\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    getModelInfo(modelId,resFn,errFn) {\r\n        let formData = new FormData();\r\n        formData.append(\"modelId\",modelId);\r\n        return http.post(\"/model/modelInfo\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 모델 정보(이력)\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    getModelHistInfo(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        formData.append(\"modelId\",parm.modelId);\r\n        formData.append(\"modelVersion\",parm.version);\r\n        return http.post(\"/model/modelHistInfo\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 모델 등록 이력 리스트\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    regHistory(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/model/regHistory\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 모델 평가\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    modelTestReq(modelId,resFn,errFn) {\r\n        let formData = new FormData();\r\n        formData.append(\"modelId\",modelId);\r\n        return http.post(\"/model/modelTestReq\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n}\r\nexport default new ModelService();"," import http from \"../../http-common\";\r\n\r\nclass UploadFilesService {\r\n  upload(file, onUploadProgress) {\r\n    let formData = new FormData();\r\n\r\n    formData.append(\"file\", file);\r\n\r\n    return http.post( process.env.REACT_APP_WAS_URL + \"/file/upload\", formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      onUploadProgress,\r\n    });\r\n  }\r\n\r\n  getFiles() {\r\n    return http.get(\"/file/files\");\r\n  }\r\n}\r\n\r\nexport default new UploadFilesService();","import React, {Component} from 'react';\r\nimport {CommonCode} from 'main';\r\nimport { Msg, common, Validation } from 'comp';\r\nimport { makeParam } from 'comp/common';\r\nimport UploadService from 'comp/file/services/upload-files.service';\r\nimport ModelService from './ModelService';\r\n\r\n/**\r\n * 화면명 : 모델 등록\r\n * 화면 경로 : 모델 > 모델 관리 > 모델 등록\r\n * 화면 코드 : \r\n * 참고 : 모델 관리 화면에서 사용하는 등록 화면\r\n */\r\nclass ModelReg extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n            nameValid:null,\r\n            nickValid:null,\r\n            modelFileValid:null,\r\n            descLength:0,\r\n            progress:0,\r\n            currentFile:undefined,\r\n            modelFiles:[],\r\n            initModify:false,\r\n\t\t\tinputChange:false,\r\n\t\t\tcheckedPriority:undefined\r\n        };\r\n\t\tthis.onClickReg = this.onClickReg.bind(this);\r\n        this.validationCheck = this.validationCheck.bind(this);\r\n\t\tthis.onChangeName = this.onChangeName.bind(this);\r\n        this.onResultRegist = this.onResultRegist.bind(this);\r\n        this.onChangeDesc = this.onChangeDesc.bind(this);\r\n        this.selectFile = this.selectFile.bind(this);\r\n        this.upload = this.upload.bind(this);\r\n        this.fileValidationCheck = this.fileValidationCheck.bind(this);\r\n\t\tthis.onClose = this.onClose.bind(this);\r\n        this.fileRadioClick = this.fileRadioClick.bind(this);\r\n\t\tthis.onChangePriority = this.onChangePriority.bind(this);\r\n\t\tthis.onClickRadio = this.onClickRadio.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.refs.modelName.focus();\r\n    }\r\n    componentDidUpdate() {\r\n        const { initModify } = this.state;\r\n        let { modifyFlag } = this.props;\r\n        if (modifyFlag && !initModify) {\r\n            this.setState({initModify:true\r\n                , modifyFlag:modifyFlag});   // 수정일경우 처음에 중복확인 PASS\r\n        }\r\n    }\r\n    /**\r\n     * 모델명 변경 핸들러\r\n     */\r\n    onChangeName() {\r\n        this.setState({inputChange:true});\r\n    }\r\n    /**\r\n     * 설명 변경 핸들러\r\n     */\r\n\tonChangeDesc() {\r\n        const maxLen = 100;\r\n        if (this.refs.modelDesc.value.length > maxLen) {\r\n            this.refs.modelDesc.value = this.refs.modelDesc.value.substr(0,maxLen);\r\n        }\r\n        this.setState({descLength:this.refs.modelDesc.value.length,inputChange:true});\r\n    }\r\n    /**\r\n     * 파일 선택\r\n     * @param {FileEvent} event \r\n     */\r\n\tselectFile(event) {\r\n        if (event.target.files.length < 1) return;\r\n        const file = event.target.files[0];\r\n        if (!this.fileValidationCheck(file)) return;\r\n        this.upload( file );\r\n    }\r\n    /**\r\n     * 파일 업로드\r\n     * @param {File} uploadFile \r\n     */\r\n    upload(uploadFile) {\r\n        this.setState({progress:0, currentFile: uploadFile});\r\n        if (uploadFile.size > common.getFileSizeByte(\"10MB\")) {\r\n            Msg.error(\"업로드 가능한 파일사이즈 : 10MB\");\r\n            return;\r\n        }\r\n        this.props.main.showLoading();\r\n        UploadService.upload(uploadFile, (event) => {\r\n            this.setState({progress: Math.round((100 * event.loaded) / event.total)})\r\n        })\r\n        .then((response) => {\r\n            this.props.main.hideLoading();\r\n            const res = response.data;\r\n            if (res.result === \"ok\") {\r\n                let files = [];\r\n                files.push( res.data.file );\r\n                this.setState({modelFiles:files,inputChange:true});\r\n            } else if (res.result === \"fail\"){\r\n                Msg.error(res.message);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            this.props.main.hideLoading();\r\n            Msg.error(\"업로드 실패되었습니다.\");\r\n            this.setState({\r\n                progress: 0,\r\n                message: \"Could not upload the file!\",\r\n                currentFile: undefined,\r\n            });\r\n        });\r\n\t}\r\n\t/**\r\n\t * 파일리스트에 동일한 파일 체크\r\n\t * @param {File}} file \r\n\t */\r\n\tfileValidationCheck(file) {\r\n        const files = this.state.modelFiles;\r\n        for (let i=0; i<files.length; i++) {\r\n            if (files[i].fileName === file.name && Number(files[i].fileSize) === file.size) {\r\n                Msg.warn(\"이미 동일한 파일이 추가되어 있습니다.\");\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n\t}\r\n\t/**\r\n\t * 모델 등록 클릭 핸들러\r\n\t */\r\n\tonClickReg() {\r\n        if (!this.validationCheck()) return;\r\n        const {checkedPriority} = this.state;\r\n        let parm = makeParam(this);\r\n        let modelFileCodes = [];\r\n        let file;\r\n        let ext = \"\";\r\n        for (let i=0; i<this.state.modelFiles.length;i++) {\r\n            file = this.state.modelFiles[i];\r\n            modelFileCodes.push( file.fileCode );\r\n\t\t\tif (file.fileName.indexOf(\".\") > -1)\r\n\t\t\t\text = file.fileName.substr(file.fileName.lastIndexOf(\".\")+1,file.fileName.length).toUpperCase();\r\n\t\t\telse\r\n\t\t\t\text = \"\";\r\n        }\r\n        parm.modelFiles = modelFileCodes;\r\n        parm.baseImage = ext;\r\n        parm.priority = checkedPriority;\r\n        ModelService.regist(parm,this.onResultRegist,(e) => console.log(e));\r\n\t}\r\n\t/**\r\n\t * 모델 등록전 입력값 확인\r\n\t * @return {Boolean} 확인결과\r\n\t */\r\n    validationCheck() {\r\n        const {inputChange, checkedPriority,\r\n            // isNameChk, isNickChk, \r\n            modelFiles} = this.state;\r\n        let chkState = {};\r\n        if (!inputChange) {\r\n            Msg.warn(\"변경된 사항이 없습니다.\");\r\n            return false;\r\n        }\r\n        // 초기화\r\n        this.setState({nameValid:null,nickValid:null,modelFileValid:null,priorityValid:null});\r\n        // 모델명\r\n        let chkVal = this.refs.modelName.value;\r\n        let valiRes = Validation.chkModelName(chkVal);\r\n        chkState.validName = true;\r\n        if (!valiRes.result) {\r\n            Msg.error(valiRes.errMsg);\r\n            chkState.validName = false;\r\n            this.setState(chkState);\r\n            return false;\r\n        }\r\n\r\n\t\tchkState.priorityValid = true;\r\n\t\t\r\n        if (checkedPriority === null) {\r\n            Msg.error(\"우선순위를 선택해 주세요.\");\r\n            chkState.priorityValid = false;\r\n            this.setState(chkState);\r\n            return false;\r\n\t\t}\r\n\t\t\r\n\t\t// Limit\r\n        chkVal = this.refs.limitRuntime.value;\r\n        if (chkVal.length < 1) {\r\n            Msg.error(\"Limit 입력해 주세요.\");\r\n            this.setState(chkState);\r\n            return false;\r\n\t\t} else if (isNaN(chkVal)) {\r\n\t\t\tMsg.error(\"Limit 잘못된 입력입니다.\");\r\n            this.setState(chkState);\r\n            return false;\r\n\t\t}\r\n\t\t\r\n        chkState.modelFileValid = true;\r\n        if (modelFiles.length < 1) {\r\n            Msg.error(\"모델파일은 필수 입니다.\");\r\n            chkState.modelFileValid = false;\r\n            this.setState(chkState);\r\n            return false;\r\n        }\r\n\r\n        this.setState(chkState);\r\n        return true;\r\n\t}\r\n\t/**\r\n\t * 등록 결과 핸들러\r\n\t * @param {Object} res \r\n\t */\r\n\tonResultRegist(res) {\r\n        this.setState(this.defaultState);\r\n        if (res.result === \"ok\") {\r\n            Msg.ok(\"등록 완료되었습니다.\");\r\n            this.props.onClose();\r\n        } else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n\t}\r\n\t/**\r\n\t * 등록 팝업 닫기\r\n\t */\r\n\tonClose() {\r\n        try {\r\n        if (!this.state.modifyFlag) {\r\n            let delFiles = [];\r\n            let file;\r\n            for (let i=0; i<this.state.modelFiles.length; i++) {\r\n                file = this.state.modelFiles[i];\r\n                delFiles.push(file.fileCode);\r\n            }\r\n            ModelService.fileDelete(delFiles);\r\n        }\r\n        } catch (err) {}\r\n        setTimeout((e) => this.props.onClose(),100);\r\n\t}\r\n\t/**\r\n\t * 파일 Radio Button 클릭 핸들러\r\n\t * @param {String}} selFileCode \r\n\t */\r\n    fileRadioClick(selFileCode) {\r\n        let itm;\r\n        let {modelFiles} = this.state;\r\n        for (let i=0; i<modelFiles.length; i++) {\r\n            itm = modelFiles[i];\r\n            itm.mainYn = selFileCode === itm.fileCode ? \"Y\" : \"N\";\r\n        }\r\n        this.setState({modelFiles:modelFiles,inputChange:true});\r\n\t}\r\n\t/**\r\n\t * 우선순위 변경 핸들러\r\n\t */\r\n    onChangePriority() {\r\n        try {\r\n            let {modifyModelInfo} = this.props;\r\n            modifyModelInfo.priority = this.refs.priority.value;\r\n            this.setState({inputChange:true});\r\n        } catch (err) {}\r\n\t}\r\n\t/**\r\n\t * 모델 우선순위 Radio 클릭 이벤트 핸들러\r\n\t * @param {MouseEvent} e \r\n\t */\r\n\tonClickRadio(e) {\r\n\t\tthis.setState({checkedPriority:e.currentTarget.value, inputChange:true});\r\n\t}\r\n\r\n    render() {\r\n        let {\r\n            // selectedFiles,progress,\r\n            modelFiles,initModify,checkedPriority,\r\n\t\t\tdescLength } = this.state;\r\n\t\tlet { modifyFlag,modifyModelInfo,modifyModelFiles } = this.props;\r\n\t\tif (modifyModelInfo === undefined) modifyModelInfo = {};\r\n        if (!initModify && (modelFiles && modifyModelFiles) && (modelFiles.length !== modifyModelFiles.length))\r\n            this.setState({modelFiles:modifyModelFiles});\r\n\t\tif (!checkedPriority) {\r\n            if (modifyModelInfo.priority !== undefined) {\r\n                checkedPriority = String(modifyModelInfo.priority);\r\n            } else {\r\n                checkedPriority = \"3\";// LOW (Default Value)\r\n            }\r\n            this.setState({checkedPriority:checkedPriority});\r\n        }\r\n\r\n        let modelFileName = \"\";\r\n        if (modelFiles && modelFiles.length > 0)\r\n            modelFileName = modelFiles[0].fileName + \"(\" + common.getDisplFileSize(Number(modelFiles[0].fileSize)) + \")\";\r\n\t\t\r\n\t\tlet radios = [];\r\n\t\tconst prioritys = CommonCode.getCodeList(\"MODEL_PRIORITY\");\r\n\t\tlet priority;\r\n\t\tfor (let i=0; i<prioritys.length; i++) {\r\n\t\t\tpriority = prioritys[i];\r\n\t\t\tradios.push( <input id={priority.code} type=\"radio\" name=\"priority\" value={priority.value}\r\n\t\t\t\tchecked={checkedPriority === priority.value} onClick={(e) => this.onClickRadio(e)}/>);\r\n\t\t\tradios.push( <label for={priority.code}>{priority.codeName}</label> );\r\n\t\t}\r\n\r\n        if (descLength === 0 && modifyModelInfo.modelDesc !== null && modifyModelInfo.modelDesc !== undefined && modifyModelInfo.modelDesc.length > 0)\r\n            descLength = modifyModelInfo.modelDesc.length;\r\n\r\n\r\n        return <div className=\"table_type2\">\r\n        {modifyFlag ? \r\n            <input type=\"text\" ref=\"modelId\" style={{display:\"none\"}} id=\"inputId\" defaultValue={modifyModelInfo.modelId} disabled/>\r\n        : null}\r\n        <table>\r\n          <tbody>\r\n\t\t\t<tr>\r\n\t\t\t\t<th>Model Name <span className=\"necessary\">*</span></th>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<div className=\"ipt_group\">\r\n\t\t\t\t\t\t<input ref=\"modelName\" type=\"text\" className=\"ipt_text\" placeholder=\"한글,영문 최대 50자\" style={{width:430}}\r\n\t\t\t\t\t\tonChange={(e) => {this.onChangeName()}}\r\n\t\t\t\t\t\tmaxLength=\"50\" defaultValue={modifyModelInfo.modelName}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n            <tr>\r\n              <th>Model File<span className=\"necessary\">*</span>\r\n              </th>\r\n              <td>\r\n                <div className=\"ipt_group\">\r\n                  <label className=\"ipt_file\" for=\"iptFile\" style={{width:\"100%\"}}>\r\n                    <input type=\"text\" className=\"ipt_text\" readonly=\"readonly\" style={{width: \"calc(100% - 67px)\",paddingLeft: 44}} placeholder=\"업로드 제한 : 10M이하 / 파일명 최대 길이 90자\"\r\n                    defaultValue={modelFileName} title={modelFileName}/>\r\n                    <span className=\"btn btn_blue btn_file\"></span>\r\n                    <input type=\"file\" id=\"iptFile\" onChange={this.selectFile}/>\r\n                  </label>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n\t\t\t<tr>\r\n\t\t\t\t<th>Priority <span className=\"necessary\">*</span></th>\r\n\t\t\t\t<td><div className=\"radio_group\">{radios}</div></td>\r\n\t\t\t</tr>\r\n            <tr>\r\n              <th>Limit <span className=\"necessary\">*</span></th>\r\n              <td><div style={{display:\"flex\",alignItems:\"center\"}}>\r\n\t\t\t  \t<input ref=\"limitRuntime\" type=\"number\" className=\"ipt_number\" style={{width:90}} defaultValue={modifyModelInfo.limitRuntime} min={0} max={99999} step={1}\r\n                  onChange={(e) => this.setState({inputChange:true})}/>&nbsp;분 <span class=\"font_blue\">(제한없는 경우, 0 입력)</span>\r\n\t\t\t  </div></td>\r\n            </tr>\r\n            <tr>\r\n              <th>Description</th>\r\n              <td style={{textAlign:\"right\"}}>\r\n\t\t\t\t  <textarea ref=\"modelDesc\" rows=\"3\" cols=\"100\" maxlength=\"100\" onChange={(e) => this.onChangeDesc()} defaultValue={modifyModelInfo.modelDesc}></textarea>\r\n                  <span className=\"font_gray\" style={{paddingRight:5}}>(<span style={{color:\"#ff7272\"}}>{descLength}</span> / 100)</span>\r\n\t\t\t  </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <div className=\"popupBtnArea btn_area addbtnarea\"><p className=\"btn2\">\r\n            <button className=\"btn btn_white\" onClick={() => this.props.onClose()}>취소</button>\r\n            <button className=\"btn btn_black\" onClick={(e) => this.onClickReg()}>저장</button>\r\n        </p></div>\r\n      </div>;\r\n    }\r\n}\r\nexport default ModelReg;","import React, {Component} from 'react';\r\nimport {CommonCode} from 'main';\r\nimport { Msg, common } from 'comp';\r\nimport { ModelService } from 'model';\r\n\r\n/**\r\n * 모델 상세\r\n */\r\nclass ModelDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modelInfo:undefined,\r\n            files:[]\r\n        };\r\n        this.onResultInfo = this.onResultInfo.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.props.main.showLoading();\r\n        ModelService.getModelInfo( this.props.selectionItem.modelId,this.onResultInfo,(e) => console.log(e) );\r\n    }\r\n    /**\r\n     * 모델 정보 결과 핸들러\r\n     * @param {Object} res \r\n     */\r\n    onResultInfo(res) {\r\n        this.props.main.hideLoading();\r\n        if (res.result === \"ok\") {\r\n          this.setState({modelInfo:res.data.modelInfo,files:res.list});\r\n        }\r\n        else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    render() {\r\n        let {modelInfo, files} = this.state;\r\n        let modelFileItems = [];\r\n        if (modelInfo === undefined) modelInfo = {};\r\n        let itm;\r\n        if (files.length < 1) {\r\n\t\t\tmodelFileItems.push(<tr><td colSpan={4} style={{textAlign:\"center\"}}><span className=\"font_gray\">파일이 없습니다.</span></td></tr>);\r\n\t\t}\r\n        for (let i=0;i<files.length;i++) {\r\n            itm = files[i];\r\n            modelFileItems.push( <FileRow file={itm}/> );\r\n        }\r\n        const optsPriority = CommonCode.getCodeSelectList(\"MODEL_PRIORITY\",\"value\");\r\n\t\tlet defaultValuePriority = undefined;\r\n\t\tfor (let i=0; i<optsPriority.length; i++) {\r\n            if (optsPriority[i].value === String(modelInfo.priority)) {\r\n                defaultValuePriority = optsPriority[i];\r\n                break;\r\n            }\r\n\t\t}\r\n\r\n        return <div className=\"table_type2\">\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <th>모델명</th>\r\n              <td>\r\n                <div className=\"ipt_group\">\r\n                    <span className=\"txt\">{modelInfo.modelName}</span>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>모델 파일</th>\r\n              <td>\r\n                <fieldset id=\"modelMain\">\r\n\t\t\t\t<table className=\"fileTable\">\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>파일명</th>\r\n\t\t\t\t\t\t<th style={{width:80}}>사이즈</th>\r\n\t\t\t\t\t\t<th style={{width:80}}>타입</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t{modelFileItems}\r\n\t\t\t\t</table>\r\n\t\t\t\t</fieldset>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>Priority</th>\r\n                <td><span className=\"txt\">{defaultValuePriority ? defaultValuePriority.label : ''}</span>\r\n\t\t\t  </td>\r\n            </tr>\r\n            <tr>\r\n              <th>Limit</th>\r\n              <td><div style={{display:\"flex\",alignItems:\"center\"}}>\r\n                <span className=\"txt\">{modelInfo.limitRuntime ? modelInfo.limitRuntime : '0'}</span>\r\n                <span className=\"font_gray\" style={{paddingLeft:10}}>분 (제한없는경우 0)</span>\r\n\t\t\t  </div></td>\r\n            </tr>\r\n            <tr>\r\n              <th>설명 (최대 100자)</th>\r\n                <td><textarea ref=\"modelDesc\" rows=\"2\" cols=\"100\" maxlength=\"100\" disabled defaultValue={modelInfo.modelDesc}>{modelInfo.modelDesc}</textarea></td>\r\n            </tr>\r\n            <tr>\r\n              <th>CPU Cores</th>\r\n              <td>\r\n                <div className=\"ipt_group\">\r\n                    <span className=\"txt\">{modelInfo.cpuCores}</span>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>Memory</th>\r\n              <td>\r\n                <div className=\"ipt_group\">\r\n                    <span className=\"txt\">{modelInfo.mem}</span>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>수행시간</th>\r\n              <td>\r\n                <div className=\"ipt_group\">\r\n                    <span className=\"txt\">{modelInfo.elapsed}</span>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\t\t<div className=\"popupBtnArea btn_area addbtnarea\"><p className=\"btn2\">\r\n            <button className=\"btn btn_white\" onClick={() => this.props.main.hidePopup(this.props.title)}>닫기</button>\r\n\t\t</p></div>\r\n      </div>;\r\n    }\r\n}\r\n\r\n/**\r\n * 파일리스트 Row\r\n */\r\nclass FileRow extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tmainYn:\"N\"\r\n\t\t};\r\n\t}\r\n\trender() {\r\n\t\tconst {file} = this.props;\r\n\t\tconst {fileName, fileSize, fileExt} = file;\r\n\t\treturn <tr>\r\n\t\t\t<td>{fileName}</td>\r\n\t\t\t<td>{common.getDisplFileSize(fileSize)}</td>\r\n\t\t\t<td>{fileExt && fileExt.length > 0 ? fileExt.toUpperCase() : \"\"}</td>\r\n\t\t</tr>;\r\n\t}\r\n}\r\nexport default ModelDetail;\r\n","import React, {Component} from 'react';\r\nimport { ModelService } from 'model';\r\nimport { common, Msg } from 'comp';\r\nimport {CommonCode} from 'main';\r\n/**\r\n * 화면명 : 이력 모델 상세\r\n * 화면 경로 : 모델 > 모델 관리 > 모델 상세\r\n * 화면 코드 : \r\n * 참고 : 모델 관리 화면에서 사용하는 등록 화면\r\n */\r\nclass ModelHistDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modelInfo:undefined,\r\n            files:[]\r\n        };\r\n        this.onResultInfo = this.onResultInfo.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.props.main.showLoading();\r\n        ModelService.getModelHistInfo( this.props.selectionItem,this.onResultInfo,(e) => this.props.main.hideLoading() );\r\n    }\r\n    onResultInfo(res) {\r\n        this.props.main.hideLoading();\r\n        if (res.result === \"ok\") {\r\n            this.setState({modelInfo:res.data.modelInfo,files:res.list});\r\n        }\r\n        else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    render(){\r\n        let {modelInfo, files} = this.state;\r\n        let modelFileItems = [];\r\n        if (modelInfo === undefined) modelInfo = {};\r\n        let itm;\r\n        if (files.length < 1) {\r\n\t\t\tmodelFileItems.push(<tr><td colSpan={4} style={{textAlign:\"center\"}}><span className=\"font_gray\">파일이 없습니다.</span></td></tr>);\r\n\t\t}\r\n        for (let i=0;i<files.length;i++) {\r\n            itm = files[i];\r\n            modelFileItems.push( <FileRow file={itm}/> );\r\n        }\r\n        return <div className=\"table_type2\">\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <th>모델명</th>\r\n              <td>\r\n                <div className=\"ipt_group\">\r\n                    <span className=\"txt\">{modelInfo.modelName}</span>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>모델 파일</th>\r\n              <td>\r\n                <fieldset id=\"modelMain\">\r\n\t\t\t\t<table className=\"fileTable\">\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>파일명</th>\r\n\t\t\t\t\t\t<th style={{width:80}}>사이즈</th>\r\n\t\t\t\t\t\t<th style={{width:80}}>타입</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t{modelFileItems}\r\n\t\t\t\t</table>\r\n\t\t\t\t</fieldset>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>Priority</th>\r\n                <td><span className=\"txt\">{modelInfo.priorityNm}</span>\r\n\t\t\t  </td>\r\n            </tr>\r\n            <tr>\r\n              <th>Limit</th>\r\n              <td><div style={{display:\"flex\",alignItems:\"center\"}}>\r\n                <span className=\"txt\">{modelInfo.limitRuntime ? modelInfo.limitRuntime : '0'}</span>\r\n                <span className=\"font_gray\" style={{paddingLeft:10}}>분 (제한없는경우 0)</span>\r\n\t\t\t  </div></td>\r\n            </tr>\r\n            <tr>\r\n              <th>설명</th>\r\n                <td><textarea ref=\"modelDesc\" rows=\"2\" cols=\"100\" maxlength=\"100\" disabled defaultValue={modelInfo.modelDesc}>{modelInfo.modelDesc}</textarea></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\t\t<div className=\"popupBtnArea btn_area addbtnarea\"><p className=\"btn2\">\r\n            <button className=\"btn btn_white\" onClick={() => this.props.main.hidePopup(this.props.title)}>닫기</button>\r\n\t\t</p></div>\r\n      </div>;\r\n    }\r\n}\r\nclass FileRow extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tmainYn:\"N\"\r\n\t\t};\r\n\t}\r\n\trender() {\r\n\t\tconst {file} = this.props;\r\n\t\tconst {fileName, fileSize, fileExt} = file;\r\n\t\treturn <tr>\r\n\t\t\t<td>{fileName}</td>\r\n\t\t\t<td>{common.getDisplFileSize(fileSize)}</td>\r\n\t\t\t<td>{fileExt && fileExt.length > 0 ? fileExt.toUpperCase() : \"\"}</td>\r\n\t\t</tr>;\r\n\t}\r\n}\r\nexport default ModelHistDetail;","import http from \"comp/http-common\";\r\n/**\r\n* ServiceService\r\n* use Example\r\n*  ServiceService.list(function(res) {\r\n   if (res.result === \"ok\") {\r\n       // TODO :: success process\r\n   }\r\n,(err) => Msg.error(err.message));\r\n**/\r\nclass ServiceService {\r\n    list(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/service/list\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    create(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        // if (process.env.NODE_ENV === \"development\")\r\n            formData.append(\"developing\",\"true\");// 로컬에서 개발중일때\r\n        return http.post(\"/service/create\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    chkServiceName(serviceName,resFn,errFn) {\r\n        let formData = new FormData();\r\n        formData.append(\"serviceName\",serviceName);\r\n        return http.post(\"/service/chkServiceName\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    getServiceInfo(serviceId,resFn,errFn) {\r\n        let formData = new FormData();\r\n        formData.append(\"serviceId\",serviceId);\r\n        return http.post(\"/service/serviceInfo\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    getServiceHistInfo(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        formData.append(\"serviceId\",parm.serviceId);\r\n        formData.append(\"version\",parm.version);\r\n        return http.post(\"/service/serviceHistInfo\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    delete(serviceIds,resFn,errFn) {\r\n        let formData = new FormData();\r\n        formData.append(\"serviceIds\",serviceIds);\r\n        return http.post(\"/service/delete\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    kill(serviceId,resFn,errFn) {\r\n        let formData = new FormData();\r\n        formData.append(\"serviceId\",serviceId);\r\n        return http.post(\"/service/kill\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n}\r\nexport default new ServiceService();","import http from \"comp/http-common\";\r\n// import airflow from \"comp/http-airflow\";\r\n\r\nclass AdminService {\r\n    /**\r\n     * 사용자 로그인 이력\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    userLoginHistory(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/admin/userLoginHistory\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    /**\r\n     * 아이디 찾기\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    searchId(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/admin/searchId\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    /**\r\n     * 비밀번호 찾기\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    searchPw(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/admin/searchPw\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    /**\r\n     * 사용자 리스트\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    userList(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/admin/userList\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    /**\r\n     * 사용자 저장\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    save(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/admin/save\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    /**\r\n     * Service 저장 이력\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    serviceCreHistory(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/admin/serviceCreHistory\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    /**\r\n     * Service 실행 이력\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    serviceExecHistory(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/admin/serviceExecHistory\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    /**\r\n     * REST 실행 이력 리스트\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    restExecHistory(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/admin/restExecHistory\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    /**\r\n     * 자원 그룹 리스트\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    resourceGroupList(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/admin/resourceGroupList\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    /**\r\n     * Scale In/Out 이력 리스트\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    scaleHistory(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/admin/scaleHistory\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    /**\r\n     * 자원 그룹 생성\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    createResourceGroup(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        if (process.env.NODE_ENV === \"development\")\r\n            formData.append(\"developing\",\"true\");// 로컬에서 개발중일때\r\n        return http.post(\"/admin/createResourceGroup\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    /**\r\n     * 자원 그룹 정보\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    resourceGroupInfo(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/admin/resourceGroupInfo\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    /**\r\n     * 자원 그룹 삭제\r\n     * @param {String} resourceIds \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    deleteResourceGroup(resourceIds,resFn,errFn) {\r\n        let formData = new FormData();\r\n        formData.append(\"resourceIds\",resourceIds);\r\n        return http.post(\"/admin/deleteResourceGroup\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    // dagRuns(parm,resFn,errFn) {\r\n    //     let formData = new FormData();\r\n    //     for (let k in parm) {\r\n    //         formData.append(k,parm[k]);\r\n    //     }\r\n    //     return airflow.post(\"/api/experimental/dags/tutorial/dag_runs\",formData).then(function (res) {\r\n    //         if (resFn) {\r\n    //             resFn(res.data);\r\n    //         }\r\n    //     })\r\n    //     .catch(function (err) {\r\n    //         if (errFn) {\r\n    //             errFn(err);\r\n    //         }\r\n    //     });\r\n    // }\r\n    /**\r\n     * Scale In/Out 요청\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    scaleInOut(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        let url = \"/admin/scale\";\r\n        if (parm.req_type === \"user_start\")\r\n            url += \"Out\";\r\n        else if (parm.req_type === \"user_stop\")\r\n            url += \"In\";\r\n        if (process.env.NODE_ENV === \"development\")\r\n            formData.append(\"developing\",\"true\");// 로컬에서 개발중일때\r\n        return http.post(url,formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 장비 리스트\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    deviceList(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            if (parm[k])\r\n                formData.append(k,parm[k]);\r\n        }\r\n        let url = \"/admin/deviceList\";\r\n        if (process.env.NODE_ENV === \"development\")\r\n            formData.append(\"developing\",\"true\");// 로컬에서 개발중일때\r\n        return http.post(url,formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 공통 코드 그룹 리스트\r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    commonGroupList(resFn,errFn) {\r\n        let formData = new FormData();\r\n        const parm = {};\r\n        for (let k in parm) {\r\n            if (parm[k])\r\n                formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/code/groupList\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 공통 코드 리스트\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    commonCodeList(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            if (parm[k])\r\n                formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/code/list\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 공통 코드 그룹 저장\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    saveCodeGroup(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            if (parm[k])\r\n                formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/code/saveCodeGroup\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 공통 코드 저장\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    saveCode(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            if (parm[k])\r\n                formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/code/saveCode\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 공통 코드 그룹 삭제\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    deleteCodeGroup(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            if (parm[k])\r\n                formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/code/deleteCodeGroup\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 공통 코드 삭제\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    deleteCode(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            if (parm[k])\r\n                formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/code/deleteCode\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Service Group 리스트\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    serviceGroupList(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/admin/serviceGroupList\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    /**\r\n     * Service Group 정보\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    serviceGroupInfo(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/admin/serviceGroupInfo\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    /**\r\n     * Service Group 저장\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    createServiceGroup(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        if (process.env.NODE_ENV === \"development\")\r\n            formData.append(\"developing\",\"true\");// 로컬에서 개발중일때\r\n        return http.post(\"/admin/createServiceGroup\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    /**\r\n     * Service Group Name 중복 체크\r\n     * @param {String} serviceGroupoName \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    chkServiceGroupName(serviceGroupoName,resFn,errFn) {\r\n        let formData = new FormData();\r\n        formData.append(\"serviceGroupName\",serviceGroupoName);\r\n        return http.post(\"/admin/chkServiceGroupName\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Service Group 삭제\r\n     * @param {String} serviceGroupNames \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    deleteServiceGroup(serviceGroupNames,resFn,errFn) {\r\n        let formData = new FormData();\r\n        formData.append(\"serviceGroupNames\",serviceGroupNames);\r\n        return http.post(\"/admin/deleteServiceGroup\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Service 실행 이력 결과\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    serviceExecHistoryResult(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/admin/serviceExecHistoryResult\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    /**\r\n     * Scale Out Rule 저장\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    saveScaleOutRule(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/admin/saveScaleOutRule\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    /**\r\n     * Scale Out Rule 데이터 가져오기\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    scaleInOutRuleInfo(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/admin/scaleInOutRuleInfo\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    /**\r\n     * Scale Out Rule 저장\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    saveScaleInOutRule(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/admin/saveScaleInOutRule\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport default new AdminService();","import React,{Component} from 'react';\r\n/**\r\n * 화면명 : 공통 코드 관련 유틸\r\n * 화면 경로 :\r\n * 화면 코드 :\r\n * 참고 : \r\n */\r\nclass CommonCode extends Component {\r\n    data = [];\r\n    map = {};\r\n\r\n    /**\r\n     * 공통 코드 메모리 저장\r\n     * @param {Object} data {groupCode,code,value}\r\n     */\r\n    setData(data) {\r\n        let itm;\r\n        for (let i=0; i<data.length; i++) {\r\n            itm = data[i];\r\n            if (!this.map[itm.groupCode])\r\n                this.map[itm.groupCode] = [];\r\n            this.map[itm.groupCode].push(itm);\r\n        }\r\n    }\r\n    /**\r\n     * 공통코드 Value값 반환\r\n     * @param {String} groupCode 그룹 코드\r\n     * @param {String} commonCode 코드\r\n     * @return {String} Value값\r\n     */\r\n    getValue(groupCode,commonCode) {\r\n        let ret = undefined;\r\n        const arr = this.map[groupCode];\r\n        if (arr && arr.length > 0) {\r\n            for (let i=0;i<arr.length;i++) {\r\n                if (arr[i].code === commonCode)\r\n                    ret = arr[i].value;\r\n            }\r\n        } else {\r\n            return undefined;\r\n        }\r\n        return ret;\r\n    }\r\n    /**\r\n     * select에 셋팅할 option 리스트 반환\r\n     * @param {String} groupCode 그룹 코드\r\n     * @param {String} valueKey [value로 설정할 키값]\r\n     * @param {String} labelKey [label로 설정할 키값]\r\n     * @param {*} selectedValue [선택값]\r\n     * @param {Boolean} allFlag [All option 추가여부]\r\n     * @param {String} allLabel [All 대신 보여줄 라벨]\r\n     * @return {Array} [<option />,<option />...]\r\n     */\r\n    makeOptions(groupCode, valueKey, labelKey, selectedValue, allFlag, allLabel) {\r\n        if (!valueKey) valueKey = \"code\";\r\n        if (!labelKey) labelKey = \"codeName\";\r\n        let opts = [];\r\n        if (allFlag) {\r\n            if (!allLabel) allLabel = \"All\";\r\n            opts.push( <option value=\"all\" key={Math.random()} >{allLabel}</option> );\r\n        }\r\n        const arr = this.map[groupCode];\r\n        if (arr === null || arr === undefined) arr = [];\r\n        for (let i=0; i<arr.length; i++) {\r\n            opts.push( <option value={arr[i][valueKey]} key={Math.random()} selected={arr[i][valueKey] === String(selectedValue)}>{arr[i][labelKey]}</option> );\r\n        }\r\n        return opts;\r\n    }\r\n    /**\r\n     * select에 셋팅할 option data 반환\r\n     * @param {String} groupCode 그룹 코드\r\n     * @param {String} valueKey value로 설정할 키값\r\n     * @param {String} labelKey label로 설정할 키값\r\n     * @return {Array} [{label,value}...]\r\n     */\r\n    getCodeSelectList(groupCode, valueKey, labelKey) {\r\n        if (!valueKey) valueKey = \"code\";\r\n        if (!labelKey) labelKey = \"codeName\";\r\n        let ret = [];\r\n        const arr = this.map[groupCode];\r\n        for (let i=0; i<arr.length; i++) {\r\n            ret.push( {label:arr[i][labelKey],value:arr[i][valueKey]} );\r\n        }\r\n        return ret;\r\n    }\r\n    /**\r\n     * 공통 코드 리스트 반환\r\n     * @param {String} groupCode \r\n     * @return {Array} 코드 리스트\r\n     */\r\n    getCodeList(groupCode) {\r\n        return this.map[groupCode];\r\n    }\r\n}\r\nexport default new CommonCode();","import React, {Component} from 'react';\r\nimport CommonCode from 'main/CommonCode';\r\nimport {Msg, common, Validation} from 'comp';\r\nimport AdminService from './AdminService';\r\n\r\n/**\r\n * 화면명 : 사용자 등록\r\n * 화면 경로 : Admin > User Management > 사용자 등록\r\n * 화면 코드 : \r\n * 참고 : \r\n */\r\nclass UserReg extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputChange:false\r\n\t\t};\r\n\t\tthis.onClickSave = this.onClickSave.bind(this);\r\n\t\tthis.validationCheck = this.validationCheck.bind(this);\r\n\t\tthis.onResultSave = this.onResultSave.bind(this);\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tthis.refs.userId.focus();\r\n\t}\r\n\r\n/**************************************************************************/\r\n/* 기능 */\r\n/**************************************************************************/\r\n\r\n/**************************************************************************/\r\n/* 핸들러 */\r\n/**************************************************************************/\r\n\t/**\r\n\t * 저장 버튼 클릭 핸들러\r\n\t */\r\n\tonClickSave() {\r\n\t\tconst {modifyFlag} = this.props;\r\n        if (!this.validationCheck()) return;\r\n\t\tlet param = common.makeParam(this);\r\n\t\tparam.schType = modifyFlag ? \"modi\" : \"new\";\r\n        console.log(param);\r\n        AdminService.save(param,this.onResultSave,(err) => Msg.error(err.message));\r\n\t}\r\n\t/**\r\n\t * 저장 전 값 체크\r\n\t */\r\n\tvalidationCheck() {\r\n        const {modifyFlag} = this.props;\r\n        // 초기화\r\n        // this.initValids();\r\n\t\tlet chkState = {};\r\n\r\n\t\t// 아이디\r\n\t\tlet chkVal = this.refs.userId.value;\r\n\t\tlet valiRes = Validation.chkId(chkVal);\r\n\t\tchkState.validId = true;\r\n\t\tif (!valiRes.result) {\r\n\t\t\tMsg.error(valiRes.errMsg);\r\n\t\t\tchkState.validId = false;\r\n\t\t\tthis.setState(chkState);\r\n\t\t\tthis.refs.userId.focus();\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n        // 이름\r\n\t\tchkVal = this.refs.userName.value;\r\n\t\t// 입력했을경우 체크\r\n\t\tif (chkVal.length > 0) {\r\n\t\t\tchkState.validName = true;\r\n\t\t\tif (chkVal.length < 2 || chkVal.length > 10) {\r\n\t\t\t\tMsg.error(\"이름의 입력가능 자릿수는 2~10 입니다.\");\r\n\t\t\t\tchkState.validName = false;\r\n\t\t\t\tthis.setState(chkState);\r\n\t\t\t\tthis.refs.userName.focus();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!modifyFlag || (modifyFlag && (this.refs.pw.value.length > 0))) {\r\n\t\t\t// 비밀번호\r\n            chkVal = this.refs.pw.value;\r\n            valiRes = Validation.chkPw(chkVal);\r\n            chkState.validPw = true;\r\n            if (!valiRes.result) {\r\n                Msg.error(valiRes.errMsg);\r\n                chkState.validPw = false;\r\n                this.setState(chkState);\r\n                return false;\r\n            }\r\n            let chkVal2 = this.refs.pwchk.value;\r\n            if (chkVal !== chkVal2) {\r\n                Msg.error(\"비밀번호가 동일하지 않습니다.\");\r\n                chkState.validPw = false;\r\n                this.setState(chkState);\r\n                return false;\r\n            }\r\n\t\t}\r\n\r\n\t\t// 이메일 : emailfirst + emaillast\r\n        chkVal = this.refs.userEmail.value;\r\n        valiRes = Validation.chkEmail(chkVal);\r\n        chkState.validEmail = true;\r\n        if (!valiRes.result) {\r\n            Msg.error(valiRes.errMsg);\r\n            chkState.validEmail = false;\r\n            this.setState(chkState);\r\n            return false;\r\n        }\r\n\r\n        this.setState(chkState);\r\n        return true;\r\n\t}\r\n\t/**\r\n\t * 저장 결과 핸들러\r\n\t * @param {Object} res {result:ok|fail,message}\r\n\t */\r\n\tonResultSave(res) {\r\n        if (res.result === \"ok\") {\r\n            Msg.ok(res.message);\r\n            // this.initForm();\r\n            // this.initValids();\r\n\t\t\t// this.requestData(1);\r\n\t\t\tthis.props.onClose();\r\n        } else {\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    render() {\r\n\t\tlet {modifyUserInfo} = this.props;\r\n\t\tif (!modifyUserInfo) modifyUserInfo = {};\r\n\t\tif (modifyUserInfo.activate && (modifyUserInfo.activate === \"Y\" || modifyUserInfo.activate === \"N\")) {\r\n\t\t\tmodifyUserInfo.activate = modifyUserInfo.activate === \"Y\" ? \"1\" : \"0\";\r\n\t\t}\r\n\t\tconsole.log(\"modifyUserInfo\");\r\n\t\tconsole.log(modifyUserInfo);\r\n\t\tconst userPermissionOptions = CommonCode.makeOptions(\"PERMISSION\",null,null,modifyUserInfo.userPermission);\r\n\t\tconst userActiveOptions = CommonCode.makeOptions(\"USER_ACTIVE\",null,null,modifyUserInfo.activate);\r\n        return <div className=\"table_type2\">\r\n\t\t\t<table>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>User ID\r\n\t\t\t\t\t\t\t<span className=\"necessary\">*</span></th>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<div className=\"ipt_group\">\r\n\t\t\t\t\t\t\t<input ref=\"userId\" type=\"text\" className=\"ipt_text\" placeholder=\"영문자, 숫자 최대 20자리\" disabled={modifyUserInfo.userId !== undefined}\r\n\t\t\t\t\t\t\t\tmaxLength=\"20\" defaultValue={modifyUserInfo.userId}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>User Name\r\n\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<div className=\"ipt_group\">\r\n\t\t\t\t\t\t\t<input ref=\"userName\" type=\"text\" className=\"ipt_text\" placeholder=\"최대 길이 10자리\" \r\n\t\t\t\t\t\t\t\tmaxLength=\"10\" defaultValue={modifyUserInfo.userName}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>User Group\r\n\t\t\t\t\t\t\t<span className=\"necessary\">*</span>\r\n\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<div className=\"ipt_group\">\r\n\t\t\t\t\t\t\t<select ref=\"userPermission\" className=\"combobox\">\r\n\t\t\t\t\t\t\t\t{userPermissionOptions}\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Password\r\n\t\t\t\t\t\t\t<span className=\"necessary\">*</span>\r\n\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<div className=\"ipt_group\">\r\n\t\t\t\t\t\t\t<input type=\"password\" className=\"ipt_text\" ref=\"pw\" placeholder=\"영문자,특수문자 조합해서 4자리에서 12자리\"/>\r\n\t\t\t\t\t\t\t<input type=\"password\" className=\"ipt_text\" ref=\"pwchk\" placeholder=\"확인\" style={{marginTop: 4}}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Email\r\n\t\t\t\t\t\t\t<span className=\"necessary\">*</span>\r\n\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<div className=\"ipt_group\">\r\n\t\t\t\t\t\t\t<input ref=\"userEmail\" type=\"text\" className=\"ipt_text\" placeholder=\"\" maxLength={100} defaultValue={modifyUserInfo.userEmail}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Activate\r\n\t\t\t\t\t\t\t<span className=\"necessary\">*</span>\r\n\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<div className=\"ipt_group\">\r\n\t\t\t\t\t\t\t<select ref=\"activate\" className=\"combobox\">\r\n\t\t\t\t\t\t\t\t{userActiveOptions}\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t\t<div className=\"popupBtnArea btn_area addbtnarea\"><p className=\"btn2\">\r\n\t\t\t\t<button className=\"btn btn_white\" onClick={() => this.props.onClose()}>취소</button>\r\n\t\t\t\t<button className=\"btn btn_black\" onClick={(e) => this.onClickSave()}>저장</button>\r\n\t\t\t</p></div>\r\n        </div>;\r\n    }\r\n}\r\nexport default UserReg;","import React, {Component} from 'react';\r\nimport Grid from '@toast-ui/react-grid';\r\nimport {Pagination, Msg, NameRenderer, common} from 'comp';\r\nimport TuiGrid from 'tui-grid';\r\nimport AdminService from './AdminService';\r\nimport UserReg from './UserReg';\r\nimport { CommonCode } from 'main';\r\n\r\n/**\r\n * 화면명 : User Management\r\n * 화면 경로 : Admin > User Management\r\n * 화면 코드 : MENU0040502\r\n * 참고 : \r\n */\r\nclass UserManager extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            gridData:[],\r\n            columns:[],\r\n            bodyHeight:200,\r\n            pagesPage:1,\r\n            pagesTotalCount:0,\r\n\t\t\tpagesPerPage:5,\r\n\t\t\tschInfo:{}\r\n        };\r\n        this.requestData = this.requestData.bind(this);\r\n        this.onResultList = this.onResultList.bind(this);\r\n        this.onClickPageItem = this.onClickPageItem.bind(this);\r\n        this.onClickGridNameColumn = this.onClickGridNameColumn.bind(this);\r\n        this.onClickSch = this.onClickSch.bind(this);\r\n        this.onClickReg = this.onClickReg.bind(this);\r\n        this.onClickChangeActivate = this.onClickChangeActivate.bind(this);\r\n        this.onResultChangeActivate = this.onResultChangeActivate.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        TuiGrid.setLanguage('ko');\r\n        TuiGrid.applyTheme('clean'); // default, striped, clean\r\n        this.requestData(1);\r\n    }\r\n/**************************************************************************/\r\n/* 기능 */\r\n/**************************************************************************/\r\n\t/**\r\n\t * 사용자 리스트\r\n\t */\r\n\trequestData(page,schKeyword) {\r\n\t\tconst {userPermission} = this.refs;\r\n\t\tif (page === undefined) page = this.state.pagesPage;\r\n\t\tthis.props.main.showLoading();\r\n\t\tlet parm = {\r\n\t\t\tpage:page\r\n\t\t};\r\n\t\tif (userPermission.value !== \"all\") {\r\n            parm.userPermission = userPermission.value;\r\n        }\r\n\t\tif (schKeyword !== undefined)\r\n\t\t\tparm.schKey = schKeyword;\r\n\t\tthis.setState({schInfo:parm});\r\n\t\tAdminService.userList(parm,this.onResultList,(err) => Msg.error(err.message));\r\n    }\r\n    /**\r\n     * 사용자 Activate 변경\r\n     */\r\n    onClickChangeActivate(item,e,props) {\r\n        let parm = {};\r\n        parm.userId = item.userId;\r\n        parm.activate = item.activate === \"Y\" ? \"0\" : \"1\";\r\n        parm.schType = \"modi\";\r\n        AdminService.save(parm,this.onResultChangeActivate, (err) => Msg.error(err.message));\r\n\t}\r\n\t/**\r\n\t * 조회 버튼 클릭 이벤트 핸들러\r\n\t */\r\n    onClickSch() {\r\n        this.requestData(this.state.pagesPage, this.refs.schKey.value );\r\n\t}\r\n\t/**\r\n\t * 추가 버튼 클릭 이벤트 핸들러\r\n\t */\r\n    onClickReg() {\r\n        const {\r\n            modifyUserInfo\r\n        } = this.state;\r\n        const popTitle = \"User Regist\";\r\n        this.props.main.showPopup(\r\n            popTitle,\r\n            <UserReg title={popTitle} main={this.props.main} modifyFlag={modifyUserInfo !== undefined} modifyUserInfo={modifyUserInfo} onClose={(e) => this.onCloseReg(popTitle)}/> ,\r\n                {width:600, height:540, popupBtnAreaVisible:false, contentAppendClass:\"model_content\"},null,null\r\n        );\r\n\t}\r\n\r\n/**************************************************************************/\r\n/* 핸들러 */\r\n/**************************************************************************/\r\n\t/**\r\n\t * 사용자 리스트 결과 핸들러\r\n\t */\r\n    onResultList(res) {\r\n        this.props.main.hideLoading();\r\n        if (res.result===\"ok\") {\r\n\t\t\tconst pagesInfo = res.data;\r\n            const columns = [\r\n                {name:'userId',header:'User ID',minWidth:100,sortable:true,\r\n                    renderer: { type: NameRenderer ,options: {\r\n                        listData:res.list,labelKey:\"userId\",\r\n                        onClickGridNameColumn:this.onClickGridNameColumn\r\n                    } }\r\n                }\r\n                ,{name:'userName',header:'User Name', width:200, align:\"center\",sortable:true}\r\n                ,{name:'userGroup',header:'User Group',width:200,align:\"center\",sortable:true}\r\n\t\t\t\t,{name:'signupDate',header:'Create Date',width:200,align:\"center\",sortable:true}\r\n\t\t\t\t,{name:'loginDate',header:'Recent Login',width:250,align:\"center\",sortable:true}\r\n                ,{name:'activate',header:'Activate',width:100,align:\"center\",sortable:true,\r\n                    renderer: { type: ActivateRenderer ,options: { listData:res.list,onClickChangeActivate:this.onClickChangeActivate } }\r\n                }\r\n            ]\r\n            this.setState({gridData:res.list,pagesPage:pagesInfo.page,pagesTotalCount:pagesInfo.totalCount,pagesPerPage:pagesInfo.pageCount,formCover:true,columns:columns});\r\n        } else if (res.result === \"fail\"){\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    /**\r\n     * 사용자 Activate 변경 결과 핸들러\r\n     */\r\n    onResultChangeActivate(res) {\r\n        if (res.result === \"ok\") {\r\n            Msg.ok(res.message);\r\n            this.requestData(1);\r\n        }\r\n        else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n\t}\r\n\t/**\r\n\t * 페이지 클릭 인벤트 핸들러\r\n\t */\r\n    onClickPageItem(page) {\r\n        this.requestData(page, this.state.schKeyword);\r\n\t}\r\n\t/**\r\n\t * 랜더러 클릭 이벤트 핸들러\r\n\t * @param {Object} item 선택 Row 데이터\r\n\t * @param {MouseEvent} e 클릭 이벤트\r\n\t * @param {Object} props 랜더러 Options\r\n\t */\r\n    onClickGridNameColumn(item,e,props) {\r\n        try {\r\n            const popTitle = \"User Modify\";\r\n            this.props.main.showPopup(\r\n                popTitle,\r\n                <UserReg title={popTitle} main={this.props.main} modifyFlag={item !== undefined} modifyUserInfo={item} onClose={(e) => this.onCloseReg(popTitle)}/> ,\r\n                    {width:600, height:540, popupBtnAreaVisible:false, contentAppendClass:\"model_content\"},null,null\r\n            );\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n\t}\r\n\t\r\n\t/**\r\n\t * 추가 팝업 닫기시 실행\r\n\t */\r\n    onCloseReg(title) {\r\n        this.requestData(1);\r\n        this.setState({modifyModelInfo:undefined, modifyModelFiles:undefined});\r\n        this.props.main.hidePopup(title);\r\n    }\r\n    render() {\r\n        let {\r\n            gridData, columns, schInfo,\r\n            pagesPage, pagesTotalCount, pagesPerPage\r\n\t\t} = this.state;\r\n\t\tlet permissionOpts = CommonCode.makeOptions(\"PERMISSION\",null,null,schInfo.userPermission,true);\r\n        return <div className=\"page_layout\"><div className=\"layout_contents\">\r\n            <div className=\"content_list model_aid_list table_type1\">\r\n  \r\n            <div className=\"content_title\">\r\n                <h3 className=\"tit\">User Management</h3>\r\n            </div>\r\n\r\n            <div className=\"search_condition\">\r\n                <div className=\"ipt_group search_basis search_basis2\"><div class=\"group_center\">\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<span className=\"tit\">User Group</span>\r\n\t\t\t\t\t\t<select ref=\"userPermission\" className=\"ml5\" style={{float:\"left\",width: 100,height: 32,marginLeft: 10,outline:\"none\",border:\"1px solid #CECECE\"}}>\r\n\t\t\t\t\t\t\t{permissionOpts}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<span className=\"tit\">User Name / ID</span> \r\n\t\t\t\t\t\t<input ref=\"schKey\" type=\"text\" className=\"ipt_text ml5\" style={{width:350}} defaultValue={schInfo.schKey} />\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n                    <a role=\"button\" className=\"btn btn_black\" onClick={() => this.onClickSch()}>검색</a>\r\n                    </div>\r\n                </div>\r\n                <a role=\"button\" className=\"btn btn_add btn_blue\" onClick={this.onClickReg}></a>\r\n            </div>\r\n\r\n            <div className=\"content_stitle\">\r\n                <span>Total : {pagesTotalCount}</span>\r\n            </div>\r\n            <Grid ref=\"grid\"\r\n                data={gridData} columnOptions={{resizable: true}}\r\n                columns={columns}\r\n                scrollX={false} scrollY={false}\r\n            />\r\n            <div className=\"gridControlArea btn_area\">\r\n                <div></div>\r\n                <Pagination ref={'page'}\r\n                                page={pagesPage}\r\n                                totalCount={pagesTotalCount}\r\n                                perPage={pagesPerPage}\r\n                                onClickItem={this.onClickPageItem}/>\r\n            </div>\r\n\r\n            </div>\r\n        </div></div>;\r\n    }\r\n}\r\n\r\n/**\r\n * Activate 컬럼 랜더러\r\n */\r\nclass ActivateRenderer {\r\n    constructor(props) {\r\n        const { onClickChangeActivate, listData } = props.columnInfo.renderer.options;\r\n        let item = undefined;\r\n        if (listData && listData.length > 0)\r\n        item = listData[props.rowKey];\r\n        if (item === undefined) item = {};\r\n        let el = document.createElement('a');\r\n\t\tel.className = \"table_btn btn_lineblue btn_resource gridItemBtn\";\r\n        el.innerText = item.activate === \"Y\" ? \"중지\" : \"사용재개\";\r\n        el.title = item.activate === \"Y\" ? \"중지\" : \"사용재개\";\r\n        el.addEventListener(\"click\",(e) => onClickChangeActivate(item,e,props));\r\n        this.el = el;\r\n    }\r\n    getElement() {\r\n        return this.el;\r\n    }\r\n}\r\nexport default UserManager;","import React, {Component} from 'react';\r\nimport {Msg, common} from 'comp';\r\nimport Grid from '@toast-ui/react-grid';\r\nimport TuiGrid from 'tui-grid';\r\nimport {AdminService} from 'admin';\r\n\r\n/**\r\n * 화면명 : Scale In/Out Management\r\n * 화면 경로 : Admin > Management\r\n * 화면 코드 : MENU00403\r\n * 참고 : \r\n */\r\nclass ScaleInOutManager extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            gridData:[],\r\n            columns:[],\r\n            bodyHeight:300,\r\n            pagesPage:1,\r\n            pagesTotalCount:0,\r\n            pagesPerPage:5,\r\n            showDetail:false,\r\n            selectionItem:{},\r\n            selectionColumName:'',\r\n\t\t\tselectionRowKey:-1,\r\n\t\t\tscaleOutRuleModifyMode:false,\r\n            scaleOutRuleEnable:true,\r\n\t\t\tscaleOutCpuPercent:undefined,\r\n\t\t\tscaleOutDurationMin:undefined,\r\n\t\t\tscaleInRuleModifyMode:false,\r\n\t\t\tscaleInRuleEnable:true,\r\n\t\t\tscaleInCpuPercent:undefined,\r\n\t\t\tscaleInDurationMin:undefined\r\n        }\r\n        this.requestData = this.requestData.bind(this);\r\n        this.onResultDeviceList = this.onResultDeviceList.bind(this);\r\n\t\tthis.onClickScaleInOut = this.onClickScaleInOut.bind(this);\r\n\t\tthis.onResultScaleInOut = this.onResultScaleInOut.bind(this);\r\n\t\tthis.onClickScaleOutRuleModify = this.onClickScaleOutRuleModify.bind(this);\r\n\t\tthis.onClickSaveScaleOutRule = this.onClickSaveScaleOutRule.bind(this);\r\n\t\tthis.onResultScaleInOutRuleInfo = this.onResultScaleInOutRuleInfo.bind(this);\r\n\t\tthis.onResultSaveScaleInOutRule = this.onResultSaveScaleInOutRule.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        TuiGrid.setLanguage('ko');\r\n        TuiGrid.applyTheme('clean'); // default, striped, clean\r\n\t\tAdminService.scaleInOutRuleInfo({},this.onResultScaleInOutRuleInfo,(err) => Msg.error(err.message));\r\n        this.requestData();\r\n    }\r\n/**************************************************************************/\r\n/* 기능 */\r\n/**************************************************************************/\r\n\t/**\r\n\t * 리스트\r\n\t */\r\n    requestData() {\r\n        this.props.main.showLoading(true);\r\n        AdminService.deviceList({},this.onResultDeviceList,(err) => Msg.error(err.message));\r\n\t}\r\n\t/**\r\n\t * Scale In/Out\r\n\t * @param {Object} item \r\n\t * @param {Event} e \r\n\t * @param {Object} props \r\n\t */\r\n\tonClickScaleInOut(item,e,props) {\r\n        let param = {};\r\n        param.server = item.serverName;\r\n        param.req_type = item.scaleState === \"on\" ? \"user_stop\" : \"user_start\";\r\n        AdminService.scaleInOut(param,this.onResultScaleInOut,(err) => Msg.error(err.message));\r\n    }\r\n/**************************************************************************/\r\n/* 핸들러 */\r\n/**************************************************************************/\r\n\t/**\r\n     * 리스트 결과 핸들러\r\n     * @param {Object} res {result:ok|fail,list:그룹코드리스트}\r\n     */\r\n    onResultDeviceList(res) {\r\n        this.props.main.hideLoading();\r\n        if (res.result === \"ok\") {\r\n\t\t\tlet item;\r\n\t\t\tfor (let i=0; i<res.list.length; i++) {\r\n\t\t\t\titem = res.list[i];\r\n\t\t\t\titem.nodeName = item.serverName === \"manager\" ? \"master\" : item.serverName;\r\n\t\t\t}\r\n            const cols = [\r\n\t\t\t\t{name:'nodeName',header:'Node Name', minWidth:100}\r\n\t\t\t\t,{name:'role',header:'Node Type', width:200,align:\"center\"}\r\n\t\t\t\t,{name:'useCpu',header:'CPU',width:200,align:\"center\"}\r\n\t\t\t\t,{name:'hasContainer',header:'Container',width:200,align:\"center\"}\r\n\t\t\t\t,{name:'scaleinout',header:'Scale In/Out',width:150,align:\"center\",\r\n\t\t\t\t\trenderer: {\r\n\t\t\t\t\t\ttype: CustomButtonRenderer\r\n\t\t\t\t\t\t,options: {\r\n\t\t\t\t\t\t\tlistData:res.list,\r\n\t\t\t\t\t\t\tonClickScaleInOut:this.onClickScaleInOut\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t];\r\n            this.setState({gridData:res.list,columns:cols});\r\n        } else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n\t}\r\n\t/**\r\n\t * \r\n\t * @param {Object} res \r\n\t */\r\n\tonResultScaleInOutRuleInfo(res) {\r\n\t\tif (res.result === \"ok\") {\r\n\t\t\tconst SCALE_IN_RULE = \"scaleInRule\";\r\n\t\t\tconst SCALE_OUT_RULE = \"scaleOutRule\";\r\n\r\n\t\t\tlet list;\r\n\t\t\tlet map = {scaleInRule:{cpuPercent:\"0\",durationMin:\"0\",ruleEnable:true}\r\n\t\t\t\t,scaleOutRule:{cpuPercent:\"0\",durationMin:\"0\",ruleEnable:true}};\r\n\t\t\tconst listKeys = [SCALE_IN_RULE,SCALE_OUT_RULE];\r\n            // for listKeys\r\n            for (let j=0; j<listKeys.length;j++) {\r\n\t\t\t\tlist = res.data[listKeys[j]];\r\n\t\t\t\tfor (let i=0; i<list.length; i++) {\r\n\t\t\t\t\tif (\"CPU_PERCENT\" === list[i].code) map[listKeys[j]].cpuPercent = list[i].value;\r\n\t\t\t\t\telse if (\"DURATION_MIN\" === list[i].code) map[listKeys[j]].durationMin = list[i].value;\r\n\t\t\t\t\telse if (\"RULE_ENABLE\" === list[i].code) map[listKeys[j]].ruleEnable = list[i].value === \"Y\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.setState({\r\n\t\t\t\tscaleInCpuPercent:map[SCALE_IN_RULE].cpuPercent,scaleInDurationMin:map[SCALE_IN_RULE].durationMin,scaleInRuleEnable:map[SCALE_IN_RULE].ruleEnable\r\n\t\t\t\t,scaleOutCpuPercent:map[SCALE_OUT_RULE].cpuPercent,scaleOutDurationMin:map[SCALE_OUT_RULE].durationMin,scaleOutRuleEnable:map[SCALE_OUT_RULE].ruleEnable\r\n\t\t\t});\r\n\t\t} else if (res.result === \"fail\") {\r\n\t\t\tMsg.error( res.message );\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Scale In/Out 결과 핸들러\r\n\t * @param {Object} res {result:ok|fail,message:메세지}\r\n\t */\r\n    onResultScaleInOut(res) {\r\n        if (res.result === \"ok\") {\r\n            Msg.ok(\"성공했습니다.\");\r\n            this.requestData(this.state.schKeyword);\r\n        } else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n\t}\r\n\t/**\r\n\t * Scale Out Rule 수정 버튼 클릭 핸들러\r\n\t */\r\n\tonClickScaleOutRuleModify() {\r\n\t\tconst {scaleOutRuleModifyMode} = this.state;\r\n\t\tthis.setState({scaleOutRuleModifyMode:!scaleOutRuleModifyMode});\r\n\t}\r\n\t/**\r\n\t * Scale Out Rule 저장 버튼 클릭 핸들러\r\n\t */\r\n\tonClickSaveScaleOutRule() {\r\n\t\tconst parm = common.makeParam(this);\r\n\t\tconst p = { type:\"scaleOut\", cpuPercent:parm.scaleOutCpuPercent, durationMin:parm.scaleOutDurationMin, ruleEnable:parm.scaleOutRuleEnable };\r\n\t\tAdminService.saveScaleInOutRule(p,this.onResultSaveScaleInOutRule,(err) => Msg.error(err.message));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Scale In Rule 수정 버튼 클릭 핸들러\r\n\t */\r\n\tonClickScaleInRuleModify() {\r\n\t\tconst {scaleInRuleModifyMode} = this.state;\r\n\t\tthis.setState({scaleInRuleModifyMode:!scaleInRuleModifyMode});\r\n\t}\r\n\t/**\r\n\t * Scale Out Rule 저장 버튼 클릭 핸들러\r\n\t */\r\n\tonClickSaveScaleInRule() {\r\n\t\tconst parm = common.makeParam(this);\r\n\t\tconst p = { type:\"scaleIn\", cpuPercent:parm.scaleInCpuPercent, durationMin:parm.scaleInDurationMin, ruleEnable:parm.scaleInRuleEnable };\r\n\t\tAdminService.saveScaleInOutRule(p,this.onResultSaveScaleInOutRule,(err) => Msg.error(err.message));\r\n\t}\r\n\t/**\r\n\t * Scale Out Rule 저장 결과 핸들러\r\n\t * @param {Object} res {result:ok|fail,message:메세지}\r\n\t */\r\n\tonResultSaveScaleInOutRule(res) {\r\n\t\tif (res.result === \"ok\") {\r\n\t\t\tMsg.ok(\"저장되었습니다.\");\r\n\t\t\tthis.requestData();\r\n\t\t\tthis.setState({scaleOutRuleModifyMode:false,scaleInRuleModifyMode:false});\r\n\t\t}\r\n\t\telse if (res.result === \"fail\") {\r\n\t\t\tMsg.error(res.message);\r\n\t\t}\r\n\t}\r\n    render() {\r\n        let {\r\n\t\t\tgridData, columns, pagesTotalCount,\r\n\t\t\tscaleOutRuleModifyMode,scaleOutCpuPercent,scaleOutDurationMin,scaleOutRuleEnable,\r\n\t\t\tscaleInRuleModifyMode,scaleInCpuPercent,scaleInDurationMin,scaleInRuleEnable\r\n\t\t} = this.state;\r\n        return <div className=\"page_layout\"><div className=\"layout_contents\">\r\n          <div className=\"content_list model_aid_list table_type1\">\r\n  \r\n            <div className=\"content_title\">\r\n              <h3 className=\"tit\">Scale In/Out Management</h3>\r\n            </div>\r\n\r\n            <div className=\"search_condition\" style={{height:135}}>\r\n            <div className=\"ipt_group search_basis search_basis2 search_basis_wide\">\r\n              <div className=\"group_between\">\r\n                <ul>\r\n                  <li>\r\n                    <span className=\"tit\">Scale Out Rule</span>\r\n                      <label className=\"switch ml15\">\r\n\t\t\t\t\t  \t<input ref=\"scaleOutRuleEnable\" type=\"checkbox\" checked={scaleOutRuleEnable} onClick={() => this.setState({scaleOutRuleEnable:!scaleOutRuleEnable})} disabled={!scaleOutRuleModifyMode}/>\r\n                        <span className=\"slider\"></span>\r\n                      </label>\r\n                  </li>\r\n                  <li>\r\n                    <p className=\"sentence\">\r\n\t\t\t\t\t\t<span className=\"txt\">More than</span> <input ref=\"scaleOutCpuPercent\" type=\"text\" defaultValue={scaleOutCpuPercent} className=\"ipt_text\" style={{width:60}} disabled={!scaleOutRuleModifyMode}/>\r\n\t\t\t\t\t\t<span className=\"txt\">% of CPU Utilization last </span><input ref=\"scaleOutDurationMin\" type=\"text\" defaultValue={scaleOutDurationMin} className=\"ipt_text\" style={{width:60}} disabled={!scaleOutRuleModifyMode} /> <span className=\"txt\">min.</span>\r\n                    </p> \r\n                  </li>\r\n                </ul>\r\n\r\n                <div className=\"float\">\r\n\t\t\t\t\t{scaleOutRuleModifyMode ? <a role=\"button\" class=\"btn btn_white\" onClick={() => this.setState({scaleOutRuleModifyMode:false})}>취소</a> : null}\r\n\t\t\t\t\t{scaleOutRuleModifyMode\r\n\t\t\t\t\t\t? <a role=\"button\" className=\"btn btn_black\" onClick={() => this.onClickSaveScaleOutRule()}>저장</a>\r\n\t\t\t\t\t\t: <a role=\"button\" className=\"btn btn_black\" onClick={() => this.onClickScaleOutRuleModify()}>수정</a>\r\n\t\t\t\t\t}\r\n                </div>\r\n\r\n              </div>\r\n              <div className=\"group_between\" style={{marginTop: 16}}>\r\n                <ul>\r\n                  <li>\r\n                    <span className=\"tit\" style={{width:88}}>Scale In Rule</span>\r\n                      <label className=\"switch ml15\">\r\n\t\t\t\t\t  \t<input ref=\"scaleInRuleEnable\" type=\"checkbox\" checked={scaleInRuleEnable} onClick={() => this.setState({scaleInRuleEnable:!scaleInRuleEnable})} disabled={!scaleInRuleModifyMode}/>\r\n                        <span className=\"slider\"></span>\r\n                      </label>\r\n                  </li>\r\n                  <li>\r\n                    <p className=\"sentence\">\r\n\t\t\t\t\t\t<span className=\"txt\">Less than</span> <input ref=\"scaleInCpuPercent\" type=\"text\" defaultValue={scaleInCpuPercent} className=\"ipt_text\" style={{width:60}} disabled={!scaleInRuleModifyMode}/>\r\n\t\t\t\t\t\t<span className=\"txt\">% of CPU Utilization last </span><input ref=\"scaleInDurationMin\" type=\"text\" defaultValue={scaleInDurationMin} className=\"ipt_text\" style={{width:60}} disabled={!scaleInRuleModifyMode} /> <span className=\"txt\">min.</span>\r\n                    </p> \r\n                  </li>\r\n                </ul>\r\n\r\n                <div className=\"float\">\r\n\t\t\t\t\t{scaleInRuleModifyMode ? <a role=\"button\" class=\"btn btn_white\" onClick={() => this.setState({scaleInRuleModifyMode:false})}>취소</a> : null}\r\n\t\t\t\t\t{scaleInRuleModifyMode\r\n\t\t\t\t\t\t? <a role=\"button\" className=\"btn btn_black\" onClick={() => this.onClickSaveScaleInRule()}>저장</a>\r\n\t\t\t\t\t\t: <a role=\"button\" className=\"btn btn_black\" onClick={() => this.onClickScaleInRuleModify()}>수정</a>\r\n\t\t\t\t\t}\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n            <div className=\"content_stitle\">\r\n                <span>Total : {common.displNum(pagesTotalCount)}</span>\r\n            </div>\r\n            <Grid ref={'grid'}\r\n                data={gridData} columnOptions={{resizable: true}}\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tscrollX={false} scrollY={false}\r\n            />\r\n    \r\n          </div>\r\n        </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nclass CustomButtonRenderer {\r\n    constructor(props) {\r\n\t\tconst item = props.columnInfo.renderer.options.listData[props.rowKey];\r\n        let el = document.createElement('div');\r\n\t\tif (item.role !== \"master\" && item.role !== \"manager\" \r\n\t\t\t&& item.role !== \"worker1\" && item.role !== \"worker2\"\r\n\t\t\t&& item.scaleState !== \"MGR_CONN_FAIL\") {\r\n\t\t\tel = document.createElement('a');\r\n\t\t\tel.role = \"button\";\r\n\t\t\tif (item.scaleState === \"on\") {\r\n\t\t\t\tel.className = \"table_btn btn_green btn_resource\";\r\n\t\t\t\tel.innerText = \"ScaleIn\";\r\n\t\t\t} else {\r\n\t\t\t\tel.className = \"table_btn btn_orange btn_resource\";\r\n\t\t\t\tel.innerText = \"ScaleOut\";\r\n\t\t\t}\r\n\t\t\tconst { onClickScaleInOut } = props.columnInfo.renderer.options;\r\n\t\t\tel.addEventListener(\"click\",(e) => onClickScaleInOut(item,e,props));\r\n        } else if (item.scaleState === \"MGR_CONN_FAIL\") {\r\n\t\t\tel.innerText = item.scaleState;\r\n\t\t}\r\n\r\n        this.el = el;\r\n    }\r\n\r\n    getElement() {\r\n        return this.el;\r\n    }\r\n\r\n}\r\nexport default ScaleInOutManager;","import React, {Component} from 'react';\r\nimport {Pagination, Msg, common, NameRenderer, Validation} from 'comp';\r\nimport Grid from '@toast-ui/react-grid';\r\nimport TuiGrid from 'tui-grid';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport 'react-day-picker/lib/style.css';\r\nimport dateFnsFormat from 'date-fns/format';\r\nimport dateFnsParse from 'date-fns/parse';\r\nimport {add, sub} from 'date-fns';\r\nimport { CommonCode } from 'main';\r\nimport {ModelHistDetail, ModelService} from 'model';\r\n/**\r\n * 화면명 : 모델 이력\r\n * 화면 경로 : Admin > Model History\r\n * 화면 코드 : MENU0040501\r\n * 참고 : \r\n */\r\nclass HistoryModelReg extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            gridData:[],\r\n            columns:[],\r\n            bodyHeight:300,\r\n            pagesPage:1,\r\n            pagesTotalCount:0,\r\n            pagesPerPage:5,\r\n            showDetail:false,\r\n            selectionItem:{},\r\n            selectionColumName:'',\r\n            selectionRowKey:-1,\r\n            schInfo:undefined,\r\n\t\t\tstDt:undefined,\r\n            edDt:undefined\r\n        }\r\n        this.requestData = this.requestData.bind(this);\r\n        this.onResultList = this.onResultList.bind(this);\r\n        this.onClickPageItem = this.onClickPageItem.bind(this);\r\n        this.onClickSch = this.onClickSch.bind(this);\r\n        this.formatDate = this.formatDate.bind(this);\r\n\t\tthis.parseDate = this.parseDate.bind(this);\r\n        this.onChangeStDt = this.onChangeStDt.bind(this);\r\n        this.onChangeEdDt = this.onChangeEdDt.bind(this);\r\n        this.onClickGridNameColumn = this.onClickGridNameColumn.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        TuiGrid.setLanguage('ko');\r\n        TuiGrid.applyTheme('clean'); // default, striped, clean\r\n        this.requestData(1);\r\n    }\r\n/**************************************************************************/\r\n/* 기능 */\r\n/**************************************************************************/\r\n\t/**\r\n\t * 리스트\r\n\t * @param {int} page 페이지\r\n\t * @param {String} schKeyword Model ID, Model Name 검색어\r\n\t */\r\n\trequestData(page,schKeyword) {\r\n\t\tconst {action} = this.refs;\r\n\t\tif (page === undefined) page = this.state.pagesPage;\r\n\t\tlet {stDt, edDt} = this.state;\r\n\t\tthis.props.main.showLoading();\r\n\t\tconst parm = {\r\n\t\t\tpage:page\r\n\t\t};\r\n\t\tif (action.value !== \"all\") {\r\n\t\t\tparm.action = action.value;\r\n\t\t}\r\n\t\tif (schKeyword !== undefined)\r\n\t\t\tparm.schKey = schKeyword;\r\n\t\tif (edDt === undefined) {\r\n\t\t\tedDt = new Date();\r\n\t\t}\r\n\t\tif (stDt === undefined) {\r\n\t\t\tstDt = sub(edDt, {months:1});// 1달전\r\n\t\t}\r\n\t\tconst format = \"yyyyMMdd\";\r\n\t\tconst locale = undefined;\r\n\t\tparm.endDate = dateFnsFormat(edDt, format, { locale });\r\n\t\tparm.startDate = dateFnsFormat(stDt, format, { locale });\r\n\t\tthis.setState({schInfo:parm,stDt:stDt,edDt:edDt});\r\n\t\tModelService.regHistory(parm,this.onResultList,(err) => Msg.error(err.message));\r\n\t}\r\n/**************************************************************************/\r\n/* 핸들러 */\r\n/**************************************************************************/\r\n    /**\r\n\t * 리스트 결과 핸들러\r\n\t * @param {Object} res {result:ok|fail,list:리스트}\r\n\t */\r\n    onResultList(res) {\r\n        this.props.main.hideLoading();\r\n        if (res.result===\"ok\") {\r\n            const pagesInfo = res.data;\r\n            const columns = [\r\n                {name:'regDate',header:'Date',width:200,align:\"center\"}\r\n                ,{name:'modelName',header:'Model Name', minWidth:100,\r\n                    renderer: { type: NameRenderer ,options: {\r\n                        listData:res.list,labelKey:\"modelName\",\r\n                        onClickGridNameColumn:this.onClickGridNameColumn\r\n                    } }\r\n                }\r\n                ,{name:'modelId',header:'Model ID', minWidth:100,align:\"center\"}\r\n                ,{name:'action',header:'Action', width:150,align:\"center\"}\r\n                ,{name:'priorityNm',header:'Priority',width:150,align:\"center\"}\r\n                ,{name:'userId',header:'User ID',width:200,align:\"center\"}\r\n            ]\r\n            this.setState({gridData:res.list,pagesPage:pagesInfo.page,pagesTotalCount:pagesInfo.totalCount,pagesPerPage:pagesInfo.pageCount,columns:columns});\r\n        } else if (res.result === \"fail\"){\r\n            Msg.error(res.message);\r\n        }\r\n\t}\r\n\t/**\r\n\t * 랜더러 클릭 이벤트 핸들러\r\n\t * @param {Object} item 선택 Row 데이터\r\n\t * @param {MouseEvent} e 클릭 이벤트\r\n\t * @param {Object} props 랜더러 Options\r\n\t */\r\n    onClickGridNameColumn(item,e,props) {\r\n        if (this.props.isPopup && this.props.onChangeItem) {\r\n            this.props.onChangeItem(item);\r\n        }\r\n        if (this.props.isPopup) {\r\n            this.props.onSelection();\r\n            this.props.onClose();\r\n        } else {\r\n            try {\r\n                this.setState( {selectionRowKey:e.rowKey,selectionItem:item,selectionColumName:e.columnName,showDetail:true} );\r\n                const popTitle = \"Model Info.\";\r\n                this.props.main.showPopup(\r\n                    popTitle,\r\n                    <ModelHistDetail title={popTitle} main={this.props.main} selectionItem={item} onClose={(e) => this.onCloseDetail(popTitle)} onClickModify={this.onClickModify} />,\r\n                    {width:735, height:522, popupBtnAreaVisible:false},null,null\r\n                );\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n\t}\r\n\t/**\r\n\t * 페이지 클릭 이벤트 핸들러\r\n\t * @param {int} page \r\n\t */\r\n    onClickPageItem(page) {\r\n        const {schKey} = this.refs;\r\n        if (schKey.value.length > 0)\r\n            this.requestData(page,schKey.value);\r\n        else\r\n            this.requestData(page);\r\n\r\n\t}\r\n\t/**\r\n\t * 검색 클릭 핸들러\r\n\t */\r\n    onClickSch() {\r\n        this.requestData(1, this.refs.schKey.value );\r\n    }\r\n\r\n\tformatDate(date, format, locale) {\r\n\t\treturn dateFnsFormat(date, format, { locale });\r\n\t}\r\n\tparseDate(str, format, locale) {\r\n\t\tconst parsed = dateFnsParse(str, format, new Date(), { locale });\r\n\t\t\treturn parsed;\r\n\t}\r\n\t/**\r\n\t * 조건 시작일자 변경 핸들러\r\n\t * @param {Date} day \r\n\t */\r\n\tonChangeStDt(day) {\r\n        const {edDt} = this.state;\r\n        let minDt = sub(edDt, {months:3});\r\n        if (day < minDt) {\r\n            Msg.warn(\"조회할수있는 최대기간은 3달입니다.\");\r\n            this.setState({stDt:minDt});\r\n            return;\r\n        }\r\n        this.setState({stDt:day});\r\n\t}\r\n\t/**\r\n\t * 조건 종료일자 변경 핸들러\r\n\t * @param {Date} day \r\n\t */\r\n    onChangeEdDt(day) {\r\n        const {stDt} = this.state;\r\n        let maxDt = add(stDt, {months:3});\r\n        if (day > maxDt) {\r\n            Msg.warn(\"조회할수있는 최대기간은 3달입니다.\");\r\n            this.setState({edDt:maxDt});\r\n            return;\r\n        }\r\n        this.setState({edDt:day});\r\n    }\r\n    render() {\r\n        let {\r\n            gridData, bodyHeight, columns, schInfo,stDt,edDt,\r\n            pagesPage, pagesTotalCount, pagesPerPage\r\n        } = this.state;\r\n        if (!schInfo) schInfo = {};\r\n        let actionOpts = CommonCode.makeOptions(\"MODEL_HIST_ACTION\",null,null,schInfo.action,true);\r\n        return <div className=\"page_layout\"><div className=\"layout_contents\">\r\n          <div className=\"content_list model_aid_list table_type1\">\r\n  \r\n            <div className=\"content_title\">\r\n              <h3 className=\"tit\">Model History</h3>\r\n            </div>\r\n\r\n            <div className=\"search_condition\">\r\n                <div className=\"ipt_group search_basis search_basis2\" style={{width:\"100%\"}}><div className=\"group_center\">\r\n                    <ul>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<span className=\"tit\">Model Name / ID</span> \r\n\t\t\t\t\t\t<input ref=\"schKey\" type=\"text\" className=\"ipt_text ml5\" style={{width:350}} defaultValue={schInfo.schKey} />\r\n\t\t\t\t\t\t</li>\r\n                        <li>\r\n\t\t\t\t\t\t<span className=\"tit\">Action</span>\r\n\t\t\t\t\t\t<select ref=\"action\" className=\"ml5\" style={{float:\"left\",width: 100,height: 32,marginLeft: 10,outline:\"none\",border:\"1px solid #CECECE\"}}>\r\n\t\t\t\t\t\t\t{actionOpts}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<div className=\"tui-datepicker-input tui-datetime-input tui-has-focus\" style={{width:110}}>\r\n\t\t\t\t\t\t\t<DayPickerInput format=\"yyyy-MM-dd\" formatDate={this.formatDate} parseDate={this.parseDate}\r\n\t\t\t\t\t\t\t\tplaceholder=\"YYYY-MM-DD\" onDayChange={this.onChangeStDt} value={stDt}/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<span className=\"bar\">&nbsp;&nbsp;~&nbsp;&nbsp;</span>\r\n\t\t\t\t\t\t\t<div className=\"tui-datepicker-input tui-datetime-input tui-has-focus\" style={{width:110}}>\r\n\t\t\t\t\t\t\t<DayPickerInput format=\"yyyy-MM-dd\" formatDate={this.formatDate} parseDate={this.parseDate}\r\n\t\t\t\t\t\t\t\tplaceholder=\"YYYY-MM-DD\" onDayChange={this.onChangeEdDt} value={edDt}/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n                    <a role=\"button\" className=\"btn btn_black\" onClick={() => this.onClickSch()}>검색</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"content_stitle\">\r\n                <span>Total : {common.displNum(pagesTotalCount)}</span>\r\n            </div>\r\n            <Grid ref={'grid'}\r\n                data={gridData} columnOptions={{resizable: true}}\r\n                columns={columns}\r\n                scrollX={false} scrollY={false}\r\n            />\r\n            <div className=\"gridControlArea btn_area\">\r\n                <Pagination ref={'page'}\r\n                                page={pagesPage}\r\n                                totalCount={pagesTotalCount}\r\n                                perPage={pagesPerPage}\r\n                                onClickItem={this.onClickPageItem}/>\r\n            </div>\r\n    \r\n          </div>\r\n        </div>\r\n        </div>;\r\n    }\r\n}\r\nexport default HistoryModelReg;","import React, {Component} from 'react';\r\nimport {Pagination, Msg, common} from 'comp';\r\nimport { CommonCode } from 'main';\r\nimport {AdminService} from 'admin';\r\n\r\nimport Grid from '@toast-ui/react-grid';\r\nimport TuiGrid from 'tui-grid';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport 'react-day-picker/lib/style.css';\r\nimport dateFnsFormat from 'date-fns/format';\r\nimport dateFnsParse from 'date-fns/parse';\r\nimport {add, sub} from 'date-fns';\r\n\r\n/**\r\n * 화면명 : Resource 이력\r\n * 화면 경로 : Admin > Resource 이력\r\n * 화면 코드 : MENU0040504\r\n * 참고 : \r\n */\r\nclass HistoryScaleInOut extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            gridData:[],\r\n            columns:[\r\n                {name:'executeDate',header:'Date', width:200, align:\"center\"}\r\n                ,{name:'serverName',header:'Node Name', minWidth:100}\r\n                ,{name:'action',header:'Scale In/Out', width:200,align:\"center\"}\r\n                ,{name:'userId',header:'User ID',width:200,align:\"center\"}\r\n            ],\r\n            bodyHeight:300,\r\n            pagesPage:1,\r\n            pagesTotalCount:0,\r\n            pagesPerPage:5,\r\n            showDetail:false,\r\n            selectionItem:{},\r\n            selectionColumName:'',\r\n\t\t\tselectionRowKey:-1,\r\n\t\t\tschInfo:undefined,\r\n\t\t\tstDt:undefined,\r\n            edDt:undefined\r\n        }\r\n        this.requestData = this.requestData.bind(this);\r\n        this.onResultList = this.onResultList.bind(this);\r\n        this.onClickPageItem = this.onClickPageItem.bind(this);\r\n        this.onClickSch = this.onClickSch.bind(this);\r\n\t\tthis.formatDate = this.formatDate.bind(this);\r\n\t\tthis.parseDate = this.parseDate.bind(this);\r\n        this.onChangeStDt = this.onChangeStDt.bind(this);\r\n        this.onChangeEdDt = this.onChangeEdDt.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        TuiGrid.setLanguage('ko');\r\n        TuiGrid.applyTheme('clean'); // default, striped, clean\r\n        this.requestData(1);\r\n    }\r\n/**************************************************************************/\r\n/* 기능 */\r\n/**************************************************************************/\r\n    /**\r\n     * 리스트\r\n     * @param {int} page \r\n     */\r\n    requestData(page) {\r\n        const {serverName,scaleInOutType} = this.refs;\r\n        if (page === undefined) page = this.state.pagesPage;\r\n        let {stDt, edDt} = this.state;\r\n        this.props.main.showLoading();\r\n        let parm = {\r\n            page:page\r\n        };\r\n\t\tif (edDt === undefined) {\r\n\t\t\tedDt = new Date();\r\n\t\t}\r\n\t\tif (stDt === undefined) {\r\n\t\t\tstDt = sub(edDt, {months:1});// 1달전\r\n        }\r\n        if (scaleInOutType.value !== \"all\") {\r\n            parm.scaleInOutType = scaleInOutType.value;\r\n        }\r\n        if (serverName.value !== \"all\") {\r\n            parm.serverName = serverName.value;\r\n        }\r\n        const format = \"yyyyMMdd\";\r\n        const locale = undefined;\r\n\t\tparm.endDate = dateFnsFormat(edDt, format, { locale });\r\n\t\tparm.startDate = dateFnsFormat(stDt, format, { locale });\r\n\t\tthis.setState({schInfo:parm,stDt:stDt,edDt:edDt});\r\n        AdminService.scaleHistory(parm,this.onResultList,(err) => Msg.error(err.message));\r\n    }\r\n\r\n/**************************************************************************/\r\n/* 핸들러 */\r\n/**************************************************************************/\r\n    /**\r\n     * 리스트 결과 핸들러\r\n     * @param {Object} res {result:ok|fail,list:리스트}\r\n     */\r\n    onResultList(res) {\r\n        this.props.main.hideLoading();\r\n        // console.log(\"onresultlist\");\r\n        // console.log(res);\r\n        if (res.result===\"ok\") {\r\n            const pagesInfo = res.data;\r\n            this.setState({gridData:res.list,pagesPage:pagesInfo.page,pagesTotalCount:pagesInfo.totalCount,pagesPerPage:pagesInfo.pageCount});\r\n        } else if (res.result === \"fail\"){\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    /**\r\n\t * 페이지 클릭 이벤트 핸들러\r\n\t * @param {int} page \r\n\t */\r\n    onClickPageItem(page) {\r\n        this.requestData(page);\r\n    }\r\n    /**\r\n\t * 검색 클릭 핸들러\r\n\t */\r\n    onClickSch() {\r\n        this.requestData(this.state.pagesPage );\r\n    }\r\n\tformatDate(date, format, locale) {\r\n\t\treturn dateFnsFormat(date, format, { locale });\r\n\t}\r\n\tparseDate(str, format, locale) {\r\n\t\tconst parsed = dateFnsParse(str, format, new Date(), { locale });\r\n        return parsed;\r\n    }\r\n    /**\r\n\t * 조건 시작일자 변경 핸들러\r\n\t * @param {Date} day \r\n\t */\r\n\tonChangeStDt(day) {\r\n        const {edDt} = this.state;\r\n        let minDt = sub(edDt, {months:3});\r\n        if (day < minDt) {\r\n            Msg.warn(\"조회할수있는 최대기간은 3달입니다.\");\r\n            this.setState({stDt:minDt});\r\n            return;\r\n        }\r\n        this.setState({stDt:day});\r\n    }\r\n    /**\r\n\t * 조건 종료일자 변경 핸들러\r\n\t * @param {Date} day \r\n\t */\r\n    onChangeEdDt(day) {\r\n        const {stDt} = this.state;\r\n        let maxDt = add(stDt, {months:3});\r\n        if (day > maxDt) {\r\n            Msg.warn(\"조회할수있는 최대기간은 3달입니다.\");\r\n            this.setState({edDt:maxDt});\r\n            return;\r\n        }\r\n        this.setState({edDt:day});\r\n    }\r\n    render() {\r\n        let {\r\n            gridData, columns, schInfo,stDt,edDt,\r\n            pagesPage, pagesTotalCount, pagesPerPage\r\n        } = this.state;\r\n        if (!schInfo) schInfo = {};\r\n        const serverNameOpts = CommonCode.makeOptions(\"SCALE_IN_OUT_LIST\",\"codeName\",null,schInfo.serverName,true);\r\n        let scaleInOutTypeOpts = [<option value=\"all\">All</option>];\r\n        scaleInOutTypeOpts.push( <option value=\"START\" selected={schInfo.scaleInOutType === \"START\"}>START</option> );\r\n        scaleInOutTypeOpts.push( <option value=\"STOP\" selected={schInfo.scaleInOutType === \"STOP\"}>STOP</option> );\r\n        return <div className=\"page_layout\"><div className=\"layout_contents\">\r\n          <div className=\"content_list model_aid_list table_type1\">\r\n  \r\n            <div className=\"content_title\">\r\n              <h3 className=\"tit\">Resource History</h3>\r\n            </div>\r\n\r\n            <div className=\"search_condition\">\r\n                <div className=\"ipt_group search_basis search_basis2\" style={{width:\"100%\"}}><div className=\"group_center\">\r\n\t\t\t\t    <ul>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<span className=\"tit\">Node Name</span>\r\n\t\t\t\t\t\t<select ref=\"serverName\" className=\"ml5\" style={{float:\"left\",width: 100,height: 32,marginLeft: 10,outline:\"none\",border:\"1px solid #CECECE\"}}>\r\n\t\t\t\t\t\t\t{serverNameOpts}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<span className=\"tit\">Scale In/Out</span>\r\n\t\t\t\t\t\t<select ref=\"scaleInOutType\" className=\"ml5\" style={{float:\"left\",width: 100,height: 32,marginLeft: 10,outline:\"none\",border:\"1px solid #CECECE\"}}>\r\n\t\t\t\t\t\t\t{scaleInOutTypeOpts}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<div className=\"tui-datepicker-input tui-datetime-input tui-has-focus\" style={{width:110}}>\r\n\t\t\t\t\t\t\t<DayPickerInput format=\"yyyy-MM-dd\" formatDate={this.formatDate} parseDate={this.parseDate}\r\n\t\t\t\t\t\t\t\tplaceholder=\"YYYY-MM-DD\" onDayChange={this.onChangeStDt} value={stDt}/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<span className=\"bar\">&nbsp;&nbsp;~&nbsp;&nbsp;</span>\r\n\t\t\t\t\t\t\t<div className=\"tui-datepicker-input tui-datetime-input tui-has-focus\" style={{width:110}}>\r\n\t\t\t\t\t\t\t<DayPickerInput format=\"yyyy-MM-dd\" formatDate={this.formatDate} parseDate={this.parseDate}\r\n\t\t\t\t\t\t\t\tplaceholder=\"YYYY-MM-DD\" onDayChange={this.onChangeEdDt} value={edDt}/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n                    <a role=\"button\" className=\"btn btn_black\" onClick={() => this.onClickSch()}>검색</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"content_stitle\">\r\n                <span>Total : {common.displNum(pagesTotalCount)}</span>\r\n            </div>\r\n            <Grid ref={'grid'}\r\n                data={gridData} columnOptions={{resizable: true}}\r\n                columns={columns}\r\n                scrollX={false} scrollY={false}\r\n            />\r\n            <div className=\"gridControlArea btn_area\">\r\n                <Pagination ref={'page'}\r\n                                page={pagesPage}\r\n                                totalCount={pagesTotalCount}\r\n                                perPage={pagesPerPage}\r\n                                onClickItem={this.onClickPageItem}/>\r\n            </div>\r\n    \r\n          </div>\r\n        </div>\r\n        </div>;\r\n    }\r\n}\r\nexport default HistoryScaleInOut;","import React, {Component} from 'react';\r\nimport {Pagination, Msg,NameRenderer} from 'comp';\r\nimport Grid from '@toast-ui/react-grid';\r\nimport TuiGrid from 'tui-grid';\r\nimport {AdminService} from 'admin';\r\nimport {ServiceHistDetail} from 'service';\r\n/**\r\n * 화면명 : Service 생성 이력\r\n * 화면 경로 : Admin > 이력 조회 > Service 생성 이력\r\n * 화면 코드 : MENU0040502\r\n * 참고 : \r\n */\r\nclass HistoryServiceReg extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            gridData:[],\r\n            columns:[],\r\n            bodyHeight:300,\r\n            pagesPage:1,\r\n            pagesTotalCount:0,\r\n            pagesPerPage:5,\r\n            showDetail:false,\r\n            selectionItem:{},\r\n            selectionColumName:'',\r\n            selectionRowKey:-1\r\n        }\r\n        this.requestData = this.requestData.bind(this);\r\n        this.onResultList = this.onResultList.bind(this);\r\n        this.onClickPageItem = this.onClickPageItem.bind(this);\r\n        this.onDClickGrid = this.onDClickGrid.bind(this);\r\n        this.onCloseDetail = this.onCloseDetail.bind(this);\r\n        this.onClickGrid = this.onClickGrid.bind(this);\r\n        this.onClickSch = this.onClickSch.bind(this);\r\n        this.onClickGridNameColumn = this.onClickGridNameColumn.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        TuiGrid.setLanguage('ko');\r\n        TuiGrid.applyTheme('clean'); // default, striped, clean\r\n        this.setState({bodyHeight:document.getElementsByClassName('page_wrapper')[0].clientHeight - 190});\r\n        this.requestData(1);\r\n\r\n        if (this.refs.grid && this.refs.grid.getInstance() && this.refs.grid.getInstance().el)\r\n            this.refs.grid.getInstance().el.addEventListener(\"dblclick\",this.onDClickGrid,false);\r\n    }\r\n    componentDidUpdate() { \r\n        try {\r\n            if (this.refs.grid && this.refs.grid.getInstance() && this.refs.grid.getInstance().el)\r\n                this.refs.grid.getInstance().el.addEventListener(\"dblclick\",this.onDClickGrid,false);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n/**************************************************************************/\r\n/* 기능 */\r\n/**************************************************************************/\r\n\t/**\r\n\t * 리스트\r\n\t * @param {int} page \r\n\t * @param {String} schKeyword \r\n\t */\r\n\trequestData(page,schKeyword) {\r\n\t\tif (page === undefined) page = this.state.pagesPage;\r\n\t\tthis.props.main.showLoading();\r\n\t\tlet parm = {\r\n\t\t\tpage:page\r\n\t\t};\r\n\t\tif (schKeyword !== undefined)\r\n\t\t\tparm.schKey = schKeyword;\r\n\t\tAdminService.serviceCreHistory(parm,this.onResultList,(err) => Msg.error(err.message));\r\n\t}\r\n/**************************************************************************/\r\n/* 핸들러 */\r\n/**************************************************************************/\r\n\t/**\r\n\t * 더블 클릭 이벤트 핸들러\r\n\t * @param {GridEvent} gridEvt \r\n\t */\r\n    onDClickGrid(gridEvt) {\r\n        this.setState({showDetail:true});\r\n\t}\r\n\t/**\r\n\t * 리스트 결과 핸들러\r\n\t * @param {Object} res {result:ok|fail,list:리스트}\r\n\t */\r\n    onResultList(res) {\r\n        this.props.main.hideLoading();\r\n        if (res.result===\"ok\") {\r\n            const pagesInfo = res.data;\r\n            const columns = [\r\n                {name:'serviceName',header:'Service명', minWidth:100,\r\n                    renderer: { type: NameRenderer ,options: {\r\n                        listData:res.list,labelKey:\"serviceName\",\r\n                        onClickGridNameColumn:this.onClickGridNameColumn\r\n                    } }\r\n                }\r\n                ,{name:'version',header:'버전', width:20,align:\"center\"}\r\n                ,{name:'userName',header:'생성자',width:150,align:\"center\"}\r\n                ,{name:'regDate',header:'생성일',width:150,align:\"center\"}\r\n                ,{name:'runCycle',header:'실행주기',width:150,align:\"center\"}\r\n                ,{name:'modelName',header:'Model', minWidth:100}\r\n            ]\r\n            this.setState({gridData:res.list,pagesPage:pagesInfo.page,pagesTotalCount:pagesInfo.totalCount,pagesPerPage:pagesInfo.pageCount,columns:columns});\r\n        } else if (res.result === \"fail\"){\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    /**\r\n\t * 페이지 클릭 이벤트 핸들러\r\n\t * @param {int} page \r\n\t */\r\n    onClickPageItem(page) {\r\n        this.requestData(page, this.state.schKeyword);\r\n\t}\r\n\t/**\r\n\t * 삭제 팝업 닫힘 핸들러\r\n\t */\r\n    onCloseDetail() {\r\n        this.setState({showDetail:false});\r\n\t}\r\n\t/**\r\n\t * 그리드 클릭 이벤트 핸들러\r\n\t * @param {GridEvent} gridEvt \r\n\t */\r\n    onClickGrid(gridEvt) {\r\n        console.log( this.state.gridData[gridEvt.rowKey] );\r\n        this.setState( {selectionRowKey:gridEvt.rowKey,selectionItem:this.state.gridData[gridEvt.rowKey],selectionColumName:gridEvt.columnName} );\r\n    }\r\n    /**\r\n\t * 검색 클릭 핸들러\r\n\t */\r\n    onClickSch() {\r\n        this.requestData(this.state.pagesPage, this.refs.schKey.value );\r\n    }\r\n    /**\r\n\t * 랜더러 클릭 이벤트 핸들러\r\n\t * @param {Object} item 선택 Row 데이터\r\n\t * @param {MouseEvent} e 클릭 이벤트\r\n\t * @param {Object} props 랜더러 Options\r\n\t */\r\n    onClickGridNameColumn(item,e,props) {\r\n        this.setState( {selectionRowKey:e.rowKey,selectionItem:item,selectionColumName:e.columnName,showDetail:true} );\r\n    }\r\n    render() {\r\n        const {selectionItem,\r\n            gridData, bodyHeight, columns, showDetail,\r\n            pagesPage, pagesTotalCount, pagesPerPage\r\n        } = this.state;\r\n        return <div className=\"historyServiceReg\">\r\n            {showDetail \r\n                ? <ServiceHistDetail main={this.props.main} selectionItem={selectionItem} onClose={(e) => this.onCloseDetail()} onClickModify={this.onClickModify} modifyButtonVisible={false}/>\r\n                : <div><div className={'searchArea2'}><div className={'searchForm'}>\r\n                    <div className={'searchKeyword'}>\r\n                        <label>검색어</label>\r\n                        <input ref=\"schKey\" className=\"form-control\" placeholder=\"Service명 / 생성자 / Model / 데이터\" onKeyDown={(e) => e.keyCode === 13 ? this.onClickSch() : null}/>\r\n                    </div>\r\n                    <button className=\"btn btn-success btn-sm\" onClick={() => this.onClickSch()}>검색</button>\r\n                </div></div>\r\n                <div className=\"totalCount\"><span>Total : {pagesTotalCount}</span></div>\r\n                <div className={'gridArea'}>\r\n                    <Grid ref={'grid'} onClick={this.onClickGrid}\r\n                        data={gridData} columnOptions={{resizable: true}}\r\n                        columns={columns}\r\n                        bodyHeight={bodyHeight}\r\n                        scrollX={false} scrollY={false}\r\n                    />\r\n                    <Pagination ref={'page'}\r\n                        page={pagesPage}\r\n                        totalCount={pagesTotalCount}\r\n                        perPage={pagesPerPage}\r\n                        onClickItem={this.onClickPageItem}/>\r\n                </div>\r\n            </div> }\r\n        </div>;\r\n    }\r\n}\r\nexport default HistoryServiceReg;","import React, {Component} from 'react';\r\nimport {Pagination, Msg, common} from 'comp';\r\nimport { AdminService } from 'admin';\r\nimport { CommonCode } from 'main';\r\n\r\nimport Grid from '@toast-ui/react-grid';\r\nimport TuiGrid from 'tui-grid';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport dateFnsFormat from 'date-fns/format';\r\nimport dateFnsParse from 'date-fns/parse';\r\nimport {add, sub} from 'date-fns';\r\n\r\n/**\r\n * 화면명 : 로그인 이력\r\n * 화면 경로 : Admin > LoginHistory\r\n * 화면 코드 : MENU0040505\r\n * 참고 : \r\n */\r\nclass HistoryUserLogin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            gridData:[],\r\n            //UserID,UserName,UserGroup,Login 컬럼 적용\r\n            columns:[\r\n                {name:'userId',header:'User ID', align:\"center\"}\r\n                ,{name:'userName',header:'User Name', align:\"center\"}\r\n                ,{name:'userGroup',header:'User Group',align:\"center\"}\r\n                ,{name:'loginDate',header:'Login Date',align:\"center\"}\r\n            ],\r\n            bodyHeight:300,\r\n            pagesPage:1,\r\n            pagesTotalCount:0,\r\n            pagesPerPage:5,\r\n            showDetail:false,\r\n            selectionItem:{},\r\n            selectionColumName:'',\r\n\t\t\tselectionRowKey:-1,\r\n\t\t\tschInfo:undefined,\r\n\t\t\tstDt:undefined,\r\n            edDt:undefined\r\n        }\r\n        this.requestData = this.requestData.bind(this);\r\n        this.onResultList = this.onResultList.bind(this);\r\n        this.onClickPageItem = this.onClickPageItem.bind(this);\r\n\t\tthis.onClickSch = this.onClickSch.bind(this);\r\n\t\tthis.formatDate = this.formatDate.bind(this);\r\n\t\tthis.parseDate = this.parseDate.bind(this);\r\n        this.onChangeStDt = this.onChangeStDt.bind(this);\r\n        this.onChangeEdDt = this.onChangeEdDt.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        TuiGrid.setLanguage('ko');\r\n        TuiGrid.applyTheme('clean'); // default, striped, clean\r\n        this.requestData(1);\r\n    }\r\n/**************************************************************************/\r\n/* 기능 */\r\n/**************************************************************************/\r\n    /**\r\n     * 리스트\r\n     * @param {int} page \r\n     * @param {String} schKeyword \r\n     */\r\n    requestData(page,schKeyword) {\r\n\t\tconst {userPermission} = this.refs;\r\n\t\tif (page === undefined) page = this.state.pagesPage;\r\n\t\tlet {stDt, edDt} = this.state;\r\n        this.props.main.showLoading();\r\n        let parm = {\r\n            page:page\r\n\t\t};\r\n\t\tif (userPermission.value !== \"all\") {\r\n            parm.userPermission = userPermission.value;\r\n        }\r\n        if (schKeyword !== undefined)\r\n\t\t\tparm.schKey = schKeyword;\r\n\t\tif (edDt === undefined) {\r\n\t\t\tedDt = new Date();\r\n\t\t}\r\n\t\tif (stDt === undefined) {\r\n\t\t\tstDt = sub(edDt, {months:1});// 1달전\r\n\t\t}\r\n\t\tconst format = \"yyyyMMdd\";\r\n        const locale = undefined;\r\n\t\tparm.endDate = dateFnsFormat(edDt, format, { locale });\r\n\t\tparm.startDate = dateFnsFormat(stDt, format, { locale });\r\n\t\tthis.setState({schInfo:parm,stDt:stDt,edDt:edDt});\r\n        AdminService.userLoginHistory(parm,this.onResultList,(err) => Msg.error(err.message));\r\n    }\r\n/**************************************************************************/\r\n/* 핸들러 */\r\n/**************************************************************************/\r\n    /**\r\n     * 리스트 결과 핸들러\r\n     * @param {Object} res {result:ok|fail,list:그룹코드리스트}\r\n     */\r\n    onResultList(res) {\r\n        this.props.main.hideLoading();\r\n        if (res.result===\"ok\") {\r\n            const pagesInfo = res.data;\r\n            this.setState({gridData:res.list,pagesPage:pagesInfo.page,pagesTotalCount:pagesInfo.totalCount,pagesPerPage:pagesInfo.pageCount});\r\n        } else if (res.result === \"fail\"){\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    /**\r\n\t * 페이지 클릭 이벤트 핸들러\r\n\t * @param {int} page \r\n\t */\r\n    onClickPageItem(page) {\r\n        this.requestData(page, this.state.schKeyword);\r\n    }\r\n    /**\r\n\t * 검색 클릭 핸들러\r\n\t */\r\n    onClickSch() {\r\n        this.requestData(this.state.pagesPage, this.refs.schKey.value );\r\n\t}\r\n\r\n\tformatDate(date, format, locale) {\r\n\t\treturn dateFnsFormat(date, format, { locale });\r\n\t}\r\n\tparseDate(str, format, locale) {\r\n\t\tconst parsed = dateFnsParse(str, format, new Date(), { locale });\r\n\t\treturn parsed;\r\n    }\r\n    /**\r\n\t * 조건 시작일자 변경 핸들러\r\n\t * @param {Date} day \r\n\t */\r\n\tonChangeStDt(day) {\r\n        const {edDt} = this.state;\r\n        let minDt = sub(edDt, {months:3});\r\n        if (day < minDt) {\r\n            Msg.warn(\"조회할수있는 최대기간은 3달입니다.\");\r\n            this.setState({stDt:minDt});\r\n            return;\r\n        }\r\n        this.setState({stDt:day});\r\n    }\r\n    /**\r\n\t * 조건 종료일자 변경 핸들러\r\n\t * @param {Date} day \r\n\t */\r\n    onChangeEdDt(day) {\r\n        const {stDt} = this.state;\r\n        let maxDt = add(stDt, {months:3});\r\n        if (day > maxDt) {\r\n            Msg.warn(\"조회할수있는 최대기간은 3달입니다.\");\r\n            this.setState({edDt:maxDt});\r\n            return;\r\n        }\r\n        this.setState({edDt:day});\r\n    }\r\n    render() {\r\n        let {\r\n            gridData, columns, schInfo,stDt,edDt,\r\n            pagesPage, pagesTotalCount, pagesPerPage\r\n\t\t} = this.state;\r\n\t\tif (!schInfo) schInfo = {};\r\n\t\t// 권한을 option 태그 리스트로 생성\r\n\t\tlet permissionOpts = CommonCode.makeOptions(\"PERMISSION\",null,null,schInfo.userPermission,true);\r\n        return <div className=\"page_layout\"><div className=\"layout_contents\">\r\n          <div className=\"content_list model_aid_list table_type1\">\r\n  \r\n            <div className=\"content_title\">\r\n              <h3 className=\"tit\">Login History</h3>\r\n            </div>\r\n\r\n            <div className=\"search_condition\">\r\n                <div className=\"ipt_group search_basis search_basis2 search_basis_wide\"><div className=\"group_center\">\r\n                    <ul>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<span className=\"tit\">User Group</span>\r\n\t\t\t\t\t\t<select ref=\"userPermission\" className=\"ml5\" style={{float:\"left\",width: 100,height: 32,marginLeft: 10,outline:\"none\",border:\"1px solid #CECECE\"}}>\r\n\t\t\t\t\t\t\t{permissionOpts}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<span className=\"tit\">User Name / ID</span> \r\n\t\t\t\t\t\t<input ref=\"schKey\" type=\"text\" className=\"ipt_text ml5\" style={{width:350}} defaultValue={schInfo.schKey} />\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<div className=\"tui-datepicker-input tui-datetime-input tui-has-focus\" style={{width:110}}>\r\n\t\t\t\t\t\t\t\t<DayPickerInput format=\"yyyy-MM-dd\" formatDate={this.formatDate} parseDate={this.parseDate}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"YYYY-MM-DD\" onDayChange={this.onChangeStDt} value={stDt}/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<span className=\"bar\">&nbsp;&nbsp;~&nbsp;&nbsp;</span>\r\n\t\t\t\t\t\t\t<div className=\"tui-datepicker-input tui-datetime-input tui-has-focus\" style={{width:110}}>\r\n\t\t\t\t\t\t\t\t<DayPickerInput format=\"yyyy-MM-dd\" formatDate={this.formatDate} parseDate={this.parseDate}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"YYYY-MM-DD\" onDayChange={this.onChangeEdDt} value={edDt}/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n                    <a role=\"button\" className=\"btn btn_black\" onClick={() => this.onClickSch()}>검색</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"content_stitle\">\r\n                <span>Total : {common.displNum(pagesTotalCount)}</span>\r\n            </div>\r\n            <Grid ref={'grid'}\r\n                data={gridData} columnOptions={{resizable: true}}\r\n                columns={columns}\r\n                scrollX={false} scrollY={false}\r\n            />\r\n            <div className=\"gridControlArea btn_area\">\r\n                <Pagination ref={'page'}\r\n                                page={pagesPage}\r\n                                totalCount={pagesTotalCount}\r\n                                perPage={pagesPerPage}\r\n                                onClickItem={this.onClickPageItem}/>\r\n            </div>\r\n    \r\n          </div>\r\n        </div>\r\n        </div>;\r\n    }\r\n}\r\nexport default HistoryUserLogin;","import React, {Component} from 'react';\r\nimport AdminService from './AdminService';\r\nimport { Msg } from 'comp';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\n/**\r\n * 화면명 : Service 이력 결과\r\n * 화면 경로 : Admin > Service History 결과 팝업\r\n * 화면 코드 : \r\n * 참고 : Service가 결과 파일을 output할경우 해당 결과파일을 로드해서 보여주는 화면\r\n */\r\nclass HistoryServiceDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            detailInfo:{}\r\n        };\r\n        this.onResultSvcExecHistInfo = this.onResultSvcExecHistInfo.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        const {serviceHistory} = this.props;\r\n        // 서비스 결과 정보\r\n        AdminService.serviceExecHistoryResult(serviceHistory,this.onResultSvcExecHistInfo,(err) => console.log(err.message));\r\n    }\r\n    /**\r\n     * 서비스 결과 정보 결과 핸들러\r\n     * @param {Object} res {result:ok|fail,data:{html:결과 html 파일 내용, log:결과 log 파일 내용}}\r\n     */\r\n    onResultSvcExecHistInfo(res) {\r\n        if (res.result === \"ok\") {\r\n            this.setState({detailInfo:res.data});\r\n        } else if (res.result === \"fail\") { Msg.error(res.message) }\r\n    }\r\n    render() {\r\n        const {detailInfo} = this.state;\r\n        const {serviceHistory} = this.props;\r\n        return <div className=\"content_view model_view\">\r\n\r\n        <div className=\"content_title\">\r\n          <h3 className=\"tit\">Service Report</h3>\r\n        </div>\r\n\r\n        <div className=\"table_type2 table_type3\">\r\n          <table>\r\n            <colgroup>\r\n              <col style={{width:240}} />\r\n              <col />\r\n            </colgroup>\r\n            <tbody>\r\n              <tr>\r\n                <th>Service Name</th>\r\n                <td>\r\n                    <p className=\"txt\">{serviceHistory.serviceName}</p>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n          <div className=\"report\">\r\n            <p className=\"tit\">Result Chart</p>\r\n            <div className=\"contents\">\r\n              { ReactHtmlParser(detailInfo.html) }\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"log\">\r\n            <span className=\"tit\">Result Log</span>\r\n                <div className=\"contents\">\r\n                { ReactHtmlParser(detailInfo.log) }\r\n            </div>\r\n          </div>\r\n\r\n        <div className=\"btn_area\">\r\n          <span className=\"right\">\r\n            <a role=\"button\" className=\"btn btn_white\" onClick={() => this.props.onClose()} style={{marginBottom:20}}>목록</a>\r\n          </span>\r\n        </div>\r\n\r\n      </div>;\r\n    }\r\n}\r\nexport default HistoryServiceDetail;","import React, {Component} from 'react';\r\nimport {Pagination, Msg, NameRenderer} from 'comp';\r\nimport {AdminService} from 'admin';\r\n\r\nimport Grid from '@toast-ui/react-grid';\r\nimport TuiGrid from 'tui-grid';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport dateFnsFormat from 'date-fns/format';\r\nimport dateFnsParse from 'date-fns/parse';\r\nimport {add, sub} from 'date-fns';\r\nimport HistoryServiceDetail from './HistoryServiceDetail';\r\n\r\n\r\n/**\r\n * 화면명 : Service 실행결과 이력\r\n * 화면 경로 : Admin > 이력 조회 > Service 실행결과 이력\r\n * 화면 코드 : MENU0040506\r\n * 참고 : https://react-day-picker.js.org/docs/input\r\n */\r\nclass HistoryServiceExec extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            gridData:[],\r\n            columns:[],\r\n            bodyHeight:300,\r\n            pagesPage:1,\r\n            pagesTotalCount:0,\r\n            pagesPerPage:5,\r\n            showDetail:false,\r\n            selectionItem:{},\r\n            selectionColumName:'',\r\n\t\t\tselectionRowKey:-1,\r\n\t\t\tserviceGroupData:[],\r\n            schInfo:undefined,\r\n            stDt:undefined,\r\n            edDt:undefined\r\n        }\r\n        this.requestData = this.requestData.bind(this);\r\n        this.onResultList = this.onResultList.bind(this);\r\n\t\tthis.onClickSch = this.onClickSch.bind(this);\r\n\t\tthis.onResultServiceGroupList = this.onResultServiceGroupList.bind(this);\r\n\t\tthis.formatDate = this.formatDate.bind(this);\r\n\t\tthis.parseDate = this.parseDate.bind(this);\r\n        this.onChangeStDt = this.onChangeStDt.bind(this);\r\n        this.onChangeEdDt = this.onChangeEdDt.bind(this);\r\n        this.onClickGridNameColumn = this.onClickGridNameColumn.bind(this);\r\n        this.onClickPageItem = this.onClickPageItem.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        TuiGrid.setLanguage('ko');\r\n        TuiGrid.applyTheme('clean'); // default, striped, clean\r\n\r\n        let {stDt, edDt} = this.state;\r\n        let setStateFlag = false;\r\n        if (edDt === undefined) {\r\n            edDt = new Date();\r\n            setStateFlag = true;\r\n        }\r\n        if (stDt === undefined) {\r\n            stDt = sub(edDt, {months:1});// 1달전\r\n            setStateFlag = true;\r\n        }\r\n        if (setStateFlag)\r\n            this.setState({stDt:stDt, edDt:edDt});\r\n\t\t\r\n\t\t// 서비스 그룹\r\n        AdminService.serviceGroupList({},this.onResultServiceGroupList,(err) => Msg.error(err.message));\r\n    }\r\n/**************************************************************************/\r\n/* 기능 */\r\n/**************************************************************************/\r\n\t/**\r\n\t * 리스트\r\n\t * @param {int} page 페이지\r\n\t * @param {String} schKeyword Service ID, Service Name 검색어\r\n\t */\r\n\trequestData(page,schKeyword) {\r\n\t\tif (page === undefined) page = this.state.pagesPage;\r\n\t\tlet {stDt, edDt} = this.state;\r\n\t\tlet parm = {\r\n\t\t\tpage:page\r\n\t\t};\r\n\t\tif (schKeyword !== undefined)\r\n\t\t\tparm.schKey = schKeyword;\r\n\t\tif (edDt === undefined) {\r\n\t\t\tedDt = new Date();\r\n\t\t}\r\n\t\tif (stDt === undefined) {\r\n\t\t\tstDt = sub(edDt, {months:1});// 1달전\r\n\t\t}\r\n\r\n\t\tlet format = \"yyyyMMdd\";\r\n\t\tlet locale = undefined;\r\n\t\tparm.serviceGroupName = this.refs.serviceGroupName.value;\r\n\t\tparm.serviceStatus = this.refs.serviceStatus.value;\r\n\t\tparm.startDate = dateFnsFormat(stDt, format, { locale });\r\n        parm.endDate = dateFnsFormat(edDt, format, { locale });\r\n        \r\n\t\tthis.setState({schInfo:parm,stDt:stDt,edDt:edDt});\r\n\t\tAdminService.serviceExecHistory(parm,this.onResultList,(err) => Msg.error(err.message));\r\n\t}\r\n\r\n/**************************************************************************/\r\n/* 핸들러 */\r\n/**************************************************************************/\r\n\t/**\r\n\t * 리스트 결과 핸들러\r\n\t * @param {Object} res {result:ok|fail,list:리스트}\r\n\t */\r\n    onResultList(res) {\r\n        this.props.main.hideLoading();\r\n        if (res.result===\"ok\") {\r\n            const pagesInfo = res.data;\r\n            const columns = [\r\n                {name:'serviceName',header:'Service Name', minWidth:100,\r\n                    renderer: { type: NameRenderer ,options: {\r\n                        listData:res.list,labelKey:\"serviceName\",\r\n                        onClickGridNameColumn:this.onClickGridNameColumn\r\n                    } }\r\n                }\r\n                ,{name:'serviceGroupName',header:'Service Group',width:100,align:\"center\"}\r\n                ,{name:'dagId',header:'DAG ID', minWidth:200,\r\n                    renderer: { type: DagIdRenderer,options: {listData:res.list} }\r\n                }\r\n                ,{name:'startDate',header:'Start',width:200,align:\"center\"}\r\n                ,{name:'endDate',header:'End',width:200,align:\"center\"}\r\n                ,{name:'elapsed',header:'Elapsed Time',width:120,align:\"center\"}\r\n                ,{name:'serviceStatus',header:'Result', width:20,align:\"center\",\r\n\t\t\t\t\trenderer: { type: StatusRenderer ,options: { listData:res.list } }\r\n\t\t\t\t}\r\n            ];\r\n            this.setState({gridData:res.list,pagesPage:pagesInfo.page,pagesTotalCount:pagesInfo.totalCount,pagesPerPage:pagesInfo.pageCount,columns:columns,totalStatus:pagesInfo.totalStatus});\r\n        } else if (res.result === \"fail\"){\r\n            Msg.error(res.message);\r\n        }\r\n\t}\r\n\t/**\r\n\t * 서비스 그룹 리스트 결과 핸들러\r\n\t * @param {Object} res {result:ok|fail,list:서비스 그룹 리스트}\r\n\t */\r\n\tonResultServiceGroupList(res) {\r\n        if (res.result===\"ok\") {\r\n            this.setState({serviceGroupData:res.list});\r\n            this.requestData(1);\r\n        } else if (res.result === \"fail\"){\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n\t/**\r\n\t * 검색 버튼 클릭 핸들러\r\n\t */\r\n    onClickSch() {\r\n        this.requestData(1, this.refs.schKey.value );\r\n\t}\r\n\t\r\n\tformatDate(date, format, locale) {\r\n\t\treturn dateFnsFormat(date, format, { locale });\r\n\t}\r\n\tparseDate(str, format, locale) {\r\n\t\tconst parsed = dateFnsParse(str, format, new Date(), { locale });\r\n\t\treturn parsed;\r\n\t}\r\n\t/**\r\n\t * 조건 시작일자 변경 핸들러\r\n\t * @param {Date} day \r\n\t */\r\n\tonChangeStDt(day) {\r\n        const {edDt} = this.state;\r\n        let minDt = sub(edDt, {months:3});\r\n        if (day < minDt) {\r\n            Msg.warn(\"조회할수있는 최대기간은 3달입니다.\");\r\n            this.setState({stDt:minDt});\r\n            return;\r\n        }\r\n        this.setState({stDt:day});\r\n\t}\r\n\t/**\r\n\t * 조건 종료일자 변경 핸들러\r\n\t * @param {Date} day \r\n\t */\r\n    onChangeEdDt(day) {\r\n        const {stDt} = this.state;\r\n        let maxDt = add(stDt, {months:3});\r\n        if (day > maxDt) {\r\n            Msg.warn(\"조회할수있는 최대기간은 3달입니다.\");\r\n            this.setState({edDt:maxDt});\r\n            return;\r\n        }\r\n        this.setState({edDt:day});\r\n    }\r\n    /**\r\n\t * 랜더러 클릭 이벤트 핸들러\r\n\t * @param {Object} item 선택 Row 데이터\r\n\t * @param {MouseEvent} e 클릭 이벤트\r\n\t * @param {Object} props 랜더러 Options\r\n\t */\r\n    onClickGridNameColumn(item,e,props) {\r\n        this.setState( {selectionRowKey:e.rowKey,selectionItem:item,selectionColumName:e.columnName,showDetail:true} );\r\n    }\r\n\t/**\r\n\t * 페이지 클릭 이벤트 핸들러\r\n\t * @param {int} page \r\n\t */\r\n    onClickPageItem(page) {\r\n        this.requestData(page, this.state.schKeyword);\r\n    }\r\n\r\n    render() {\r\n        let {\r\n            gridData, columns, \r\n\t\t\tpagesPage, pagesTotalCount, pagesPerPage,\r\n            serviceGroupData,schInfo,selectionItem,\r\n            stDt,edDt,totalStatus,showDetail\r\n\t\t} = this.state;\r\n        let serviceGroupOpts = [<option value=\"all\">All</option>];\r\n\t\tfor (let i=0; i<serviceGroupData.length; i++) {\r\n            if (schInfo) {\r\n                serviceGroupOpts.push(\r\n                    <option value={serviceGroupData[i].serviceGroupName} selected={schInfo.serviceGroupName === serviceGroupData[i].serviceGroupName} key={Math.random()}>{serviceGroupData[i].serviceGroupName}</option>\r\n                );\r\n            }\r\n        }\r\n        if (totalStatus === undefined) totalStatus = {};\r\n\t\t\r\n        return <div className=\"page_layout\"><div className=\"layout_contents\">\r\n            {showDetail ? <HistoryServiceDetail serviceHistory={selectionItem} onClose={() => this.setState( {showDetail:false} )}/>\r\n          \t\t: <div className=\"content_list model_aid_list table_type1\">\r\n  \r\n\t\t\t\t<div className=\"content_title\">\r\n\t\t\t\t<h3 className=\"tit\">Service History</h3>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"search_condition\">\r\n\t\t\t\t\t<div className=\"ipt_group search_basis search_basis_wide\"><div class=\"group_center\">\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<span className=\"tit\">Service Group</span>\r\n\t\t\t\t\t\t\t<select ref=\"serviceGroupName\" className=\"ml5\" style={{float:\"left\",width: 100,height: 32,marginLeft: 10,outline:\"none\",border:\"1px solid #CECECE\"}}>\r\n\t\t\t\t\t\t\t\t{serviceGroupOpts}\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<span className=\"tit\">Service Name / ID</span> \r\n\t\t\t\t\t\t<input ref=\"schKey\" type=\"text\" className=\"ipt_text ml5\" placeholder=\"\" style={{width:158}} />\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<span className=\"tit\">Result</span> \r\n\t\t\t\t\t\t<select ref=\"serviceStatus\" className=\"ml5\" style={{float:\"left\",width: 100,height: 32,marginLeft: 10,outline:\"none\",border:\"1px solid #CECECE\"}}>\r\n\t\t\t\t\t\t\t\t<option value=\"all\">All</option>\r\n\t\t\t\t\t\t\t\t<option value=\"success\">Completion</option>\r\n\t\t\t\t\t\t\t\t<option value=\"warning\">Warning</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<div className=\"tui-datepicker-input tui-datetime-input tui-has-focus\" style={{width:110}}>\r\n\t\t\t\t\t\t\t<DayPickerInput format=\"yyyy-MM-dd\" formatDate={this.formatDate} parseDate={this.parseDate}\r\n\t\t\t\t\t\t\t\tplaceholder=\"YYYY-MM-DD\" onDayChange={this.onChangeStDt} value={stDt}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<span className=\"bar\">&nbsp;&nbsp;~&nbsp;&nbsp;</span>\r\n\t\t\t\t\t\t<div className=\"tui-datepicker-input tui-datetime-input tui-has-focus\" style={{width:110}}>\r\n\t\t\t\t\t\t\t<DayPickerInput format=\"yyyy-MM-dd\" formatDate={this.formatDate} parseDate={this.parseDate}\r\n\t\t\t\t\t\t\t\tplaceholder=\"YYYY-MM-DD\" onDayChange={this.onChangeEdDt} value={edDt}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<a role=\"button\" className=\"btn btn_black\" onClick={() => this.onClickSch()}>검색</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"status_guide\">\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<span className=\"staus staus_completion\"></span> Completion <b>{totalStatus.success === undefined ? 0 : totalStatus.success}</b>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<span className=\"staus staus_warning\"></span> Warning <b>{totalStatus.warning === undefined ? 0 : totalStatus.warning}</b>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Grid ref={'grid'}\r\n\t\t\t\t\tdata={gridData} columnOptions={{resizable: true}}\r\n\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\tscrollX={false} scrollY={false}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className=\"gridControlArea btn_area\">\r\n\t\t\t\t\t<Pagination ref={'page'}\r\n\t\t\t\t\t\t\t\t\tpage={pagesPage}\r\n\t\t\t\t\t\t\t\t\ttotalCount={pagesTotalCount}\r\n\t\t\t\t\t\t\t\t\tperPage={pagesPerPage}\r\n\t\t\t\t\t\t\t\t\tonClickItem={this.onClickPageItem}/>\r\n\t\t\t\t</div>\r\n    \r\n\t\t\t</div>\r\n\t\t} {/* showDetail */}\r\n\t\t</div></div>;\r\n    }\r\n}\r\n\r\n/**\r\n * DAG ID 컬럼 랜더러\r\n */\r\nclass DagIdRenderer {\r\n    constructor(props) {\r\n        const { listData } = props.columnInfo.renderer.options;\r\n        const el = document.createElement('div');\r\n        el.className = \"tui-grid-cell-content\";\r\n        let item = undefined;\r\n        if (listData && listData.length > 0)\r\n\t\titem = listData[props.rowKey];\r\n        el.innerText = item[\"dagId\"];\r\n        el.title = item[\"serviceId\"];\r\n        this.el = el;\r\n    }\r\n    getElement() {\r\n        return this.el;\r\n    }\r\n}\r\n/**\r\n * Status 컬럼 랜더러\r\n */\r\nclass StatusRenderer {\r\n    constructor(props) {\r\n        const { onClickTestReq, listData } = props.columnInfo.renderer.options;\r\n        let item = undefined;\r\n        if (listData && listData.length > 0)\r\n        item = listData[props.rowKey];\r\n        if (item === undefined) item = {};\r\n\t\tlet el = document.createElement('span');\r\n\t\tif (item.serviceStatus === \"success\") {\r\n\t\t\tel.className = \"staus staus_completion\";\r\n\t\t} else {\r\n            el.className = \"staus staus_warning\";\r\n\t\t}\r\n        this.el = el;\r\n    }\r\n    getElement() {\r\n        return this.el;\r\n    }\r\n}\r\nexport default HistoryServiceExec;","import React,{Component} from 'react';\r\nimport Grid from '@toast-ui/react-grid';\r\nimport TuiGrid from 'tui-grid';\r\nimport { Msg } from 'comp';\r\nimport {AdminService} from 'admin';\r\nimport Validation from 'comp/Validation';\r\nimport {common} from 'comp';\r\n\r\n/**\r\n * 화면명 : 공통 코드\r\n * 화면 경로 : 관리자 > 공통 코드\r\n * 화면 코드 : MENU00406\r\n * 참고 : \r\n */\r\nclass CommonCodeMgr extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            groupData:[],\r\n            groupColumns:[\r\n                {name:'groupCode',header:'그룹 코드', align:\"center\"}\r\n                ,{name:'groupName',header:'그룹 코드명', align:\"center\"}\r\n                ,{name:'useYn',width:40,header:'사용', align:\"center\"}\r\n            ],\r\n            codeData:[],\r\n            codeColumns:[\r\n                {name:'code',header:'코드', align:\"center\"}\r\n                ,{name:'codeName',header:'코드명', align:\"center\"}\r\n                ,{name:'value',header:'코드값', align:\"center\"}\r\n                ,{name:'sort',width:40,header:'순서', align:\"center\"}\r\n                ,{name:'useYn',width:40,header:'사용', align:\"center\"}\r\n            ],\r\n            bodyHeight:300,\r\n\r\n            selectionGroupItem:undefined,selectionCodeItem:undefined,\r\n            groupSaveType:undefined,codeSaveType:undefined,\r\n\r\n            validGrpCd:null,validGrpCdNm:null,\r\n            validCd:null,validCdNm:null,\r\n            reqDeleteCodeAll:null\r\n        }\r\n        this.reqCommGroupList = this.reqCommGroupList.bind(this);\r\n        this.reqCommCodeList = this.reqCommCodeList.bind(this);\r\n        this.onResultCommonGroupList = this.onResultCommonGroupList.bind(this);\r\n        this.onResultCommonCodeList = this.onResultCommonCodeList.bind(this);\r\n        this.onClickGroupGrid = this.onClickGroupGrid.bind(this);\r\n        this.onClickCodeGrid = this.onClickCodeGrid.bind(this);\r\n        this.groupGridSelectedItem = this.groupGridSelectedItem.bind(this);\r\n        this.codeGridSelectedItem = this.codeGridSelectedItem.bind(this);\r\n        this.initGroupForm = this.initGroupForm.bind(this);\r\n        this.initCodeForm = this.initCodeForm.bind(this);\r\n        this.disabledGroupForm = this.disabledGroupForm.bind(this);\r\n        this.disabledCodeForm = this.disabledCodeForm.bind(this);\r\n        this.onClickBtnGroupSave = this.onClickBtnGroupSave.bind(this);\r\n        this.onClickBtnGroupDel = this.onClickBtnGroupDel.bind(this);\r\n        this.onClickBtnCodeSave = this.onClickBtnCodeSave.bind(this);\r\n        this.onClickBtnCodeDel = this.onClickBtnCodeDel.bind(this);\r\n        this.onClickGroupAdd = this.onClickGroupAdd.bind(this);\r\n        this.onClickCodeAdd = this.onClickCodeAdd.bind(this);\r\n        this.validationCheckGroup = this.validationCheckGroup.bind(this);\r\n        this.validationCheckCode = this.validationCheckCode.bind(this);\r\n        this.initValids = this.initValids.bind(this);\r\n        this.onResultGroupSave = this.onResultGroupSave.bind(this);\r\n        this.onResultCodeSave = this.onResultCodeSave.bind(this);\r\n        this.onResultGroupDel = this.onResultGroupDel.bind(this);\r\n        this.onResultCodeDel = this.onResultCodeDel.bind(this);\r\n        this.onConfirmGroupDelOk = this.onConfirmGroupDelOk.bind(this);\r\n        this.onConfirmCodeDelOk = this.onConfirmCodeDelOk.bind(this);\r\n        this.onConfirmCancel = this.onConfirmCancel.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        TuiGrid.setLanguage('ko');\r\n        TuiGrid.applyTheme('clean'); // default, striped, clean\r\n        this.setState({bodyHeight:document.getElementById('root').clientHeight - 350});\r\n        this.reqCommGroupList();\r\n        this.disabledGroupForm();\r\n        this.disabledCodeForm();\r\n    }\r\n/**************************************************************************/\r\n/* 기능 */\r\n/**************************************************************************/\r\n    /**\r\n     * 그룹 코드 리스트 요청\r\n     */\r\n    reqCommGroupList() {\r\n        this.props.main.showLoading();\r\n        AdminService.commonGroupList(this.onResultCommonGroupList,(err) => Msg.error(err.message));\r\n    }\r\n    /**\r\n     * 공통 코드 리스트 요청\r\n     * @param {String}} groupCode 그룹코드\r\n     */\r\n    reqCommCodeList(groupCode) {\r\n        this.props.main.showLoading();\r\n        const parm = {groupCode:groupCode,allFlag:\"all\"};\r\n        AdminService.commonCodeList(parm,this.onResultCommonCodeList,(err) => Msg.error(err.message));\r\n    }\r\n\r\n    /**\r\n     * 그룹 입력폼 초기화\r\n     */\r\n    initGroupForm() {\r\n        const {groupCode,groupName,groupUseYn,btnGroupSave,btnGroupDel} = this.refs;\r\n        groupCode.value = \"\";\r\n        groupName.value = \"\";\r\n        groupUseYn.checked = \"checked\";\r\n        groupCode.disabled = groupName.disabled = groupUseYn.disabled = btnGroupSave.disabled = btnGroupDel.disabled = false;\r\n    }\r\n\r\n    /**\r\n     * 코드 입력폼 초기화\r\n     */\r\n    initCodeForm() {\r\n        const {code, codeName, value, sort, useYn, btnCodeSave, btnCodeDel} = this.refs;\r\n        code.value = \"\";\r\n        codeName.value = \"\";\r\n        value.value = \"\";\r\n        sort.value = \"\";\r\n        useYn.checked = \"checked\";\r\n        code.disabled = codeName.disabled = value.disabled = sort.disabled = useYn.disabled = btnCodeSave.disabled = btnCodeDel.disabled = false;\r\n    }\r\n\r\n    /**\r\n     * 그룹 입력폼 전체 비활성화\r\n     */\r\n    disabledGroupForm() {\r\n        const {groupCode,groupName,groupUseYn,btnGroupSave,btnGroupDel} = this.refs;\r\n        groupCode.disabled = groupName.disabled = groupUseYn.disabled = btnGroupSave.disabled = btnGroupDel.disabled = true;\r\n    }\r\n    /**\r\n     * 코드 입력폼 전체 비활성화\r\n     */\r\n    disabledCodeForm() {\r\n        const {code, codeName, value, sort, useYn, btnCodeSave, btnCodeDel} = this.refs;\r\n        code.disabled = codeName.disabled = value.disabled = sort.disabled = useYn.disabled = btnCodeSave.disabled = btnCodeDel.disabled = true;\r\n    }\r\n    /**\r\n     * 그룹 그리드 선택\r\n     */\r\n    groupGridSelectedItem() {\r\n        this.initGroupForm();\r\n        const selectedItem = this.state.selectionGroupItem;\r\n        this.reqCommCodeList( selectedItem.groupCode );\r\n\r\n        const {groupCode,groupName,groupUseYn} = this.refs;\r\n        groupCode.value = selectedItem.groupCode;\r\n        groupCode.disabled = true;\r\n        groupName.value = selectedItem.groupName;\r\n        groupUseYn.checked = selectedItem.useYn === \"Y\" ? \"checked\" : \"\";\r\n\r\n        this.initCodeForm();\r\n        this.disabledCodeForm();\r\n\r\n        groupName.focus();\r\n    }\r\n    /**\r\n     * 코드 그리드 선택\r\n     */\r\n    codeGridSelectedItem() {\r\n        this.disabledGroupForm();\r\n        this.initCodeForm();\r\n        const selectedItem = this.state.selectionCodeItem;\r\n        const {code, codeName, value, sort, useYn} = this.refs;\r\n        code.value = selectedItem.code;\r\n        code.disabled = true;\r\n        codeName.value = selectedItem.codeName;\r\n        value.value = selectedItem.value;\r\n        sort.value = selectedItem.sort;\r\n        useYn.checked = selectedItem.useYn === \"Y\" ? \"checked\" : \"\";\r\n\r\n        codeName.focus();\r\n    }\r\n    /**\r\n     * 그룹코드 저장 값 체크\r\n     * @return {boolean} 저장 가능여부\r\n     */\r\n    validationCheckGroup() {\r\n        // 초기화\r\n        this.initValids();\r\n        let chkState = {};\r\n        const {groupCode,groupName} = this.refs;\r\n        // 그룹코드\r\n        let chkVal = groupCode.value;\r\n        let valiRes = Validation.chkCommonCode(chkVal);\r\n        chkState.validGrpCd = true;\r\n        if (!valiRes.result) {\r\n            Msg.error(valiRes.errMsg);\r\n            chkState.validGrpCd = false;\r\n            this.setState(chkState);\r\n            return false;\r\n        }\r\n        // 그룹코드명\r\n        chkVal = groupName.value;\r\n        chkState.validGrpCdNm = true;\r\n        if (chkVal.length < 2 || chkVal.length > 30) {\r\n            Msg.error(\"코드명은 2~30길이 입력 할 수 있습니다.\");\r\n            chkState.validGrpCdNm = false;\r\n            this.setState(chkState);\r\n            return false;\r\n        }\r\n\r\n        this.setState(chkState);\r\n        return true;\r\n    }\r\n    /**\r\n     * 코드 저장 값 체크\r\n     * @return {boolean} 저장 가능여부\r\n     */\r\n    validationCheckCode() {\r\n        // 초기화\r\n        this.initValids();\r\n        let chkState = {};\r\n        const {code, codeName} = this.refs;\r\n\r\n        // 코드\r\n        let chkVal = code.value;\r\n        let valiRes = Validation.chkCommonCode(chkVal);\r\n        chkState.validCd = true;\r\n        if (!valiRes.result) {\r\n            Msg.error(valiRes.errMsg);\r\n            chkState.validCd = false;\r\n            this.setState(chkState);\r\n            return false;\r\n        }\r\n        // 코드명\r\n        chkVal = codeName.value;\r\n        chkState.validCdNm = true;\r\n        if (chkVal.length < 2 || chkVal.length > 30) {\r\n            Msg.error(\"코드명은 2~30길이 입력 할 수 있습니다.\");\r\n            chkState.validCdNm = false;\r\n            this.setState(chkState);\r\n            return false;\r\n        }\r\n\r\n        this.setState(chkState);\r\n        return true;\r\n    }\r\n    /**\r\n     * validation 값 초기화\r\n     */\r\n    initValids() {\r\n        this.setState({validGrpCd:null,validGrpCdNm:null,validCd:null,validCdNm:null});\r\n    }\r\n\r\n/**************************************************************************/\r\n/* 핸들러 */\r\n/**************************************************************************/\r\n    /**\r\n     * 코드그룹 코드 리스트 결과 핸들러\r\n     * @param {Object} res {result:ok|fail,list:그룹코드리스트}\r\n     */\r\n    onResultCommonGroupList(res) {\r\n        this.props.main.hideLoading();\r\n        if (res.result === \"ok\") {\r\n            this.setState({groupData:res.list});\r\n        } else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    /**\r\n     * 코드 리스트 결과 핸들러\r\n     * @param {Object} res {result:ok|fail,list:코드리스트}\r\n     */\r\n    onResultCommonCodeList(res) {\r\n        this.props.main.hideLoading();\r\n        if (res.result === \"ok\") {\r\n            this.setState({codeData:res.list});\r\n        } else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    /**\r\n     * 코드그룹 그리드 클릭 이벤트 핸들러\r\n     * @param {GridEvent} gridEvt \r\n     */\r\n    onClickGroupGrid(gridEvt) {\r\n        if (gridEvt.rowKey === undefined) return;\r\n        this.setState( {\r\n            selectionGroupItem:this.state.groupData[gridEvt.rowKey],\r\n            codeSaveType:undefined,groupSaveType:\"modi\"\r\n        } );\r\n        setTimeout(this.groupGridSelectedItem,100);\r\n    }\r\n    /**\r\n     * 코드 그리드 클릭 이벤트 핸들러\r\n     * @param {GridEvent} gridEvt \r\n     */\r\n    onClickCodeGrid(gridEvt) {\r\n        if (gridEvt.rowKey === undefined) return;\r\n        this.setState( {\r\n            selectionCodeItem:this.state.codeData[gridEvt.rowKey],\r\n            codeSaveType:\"modi\",groupSaveType:undefined\r\n        } );\r\n        setTimeout(this.codeGridSelectedItem,100);\r\n    }\r\n\r\n    /**\r\n     * 코드그룹 저장 버튼 클릭 이벤트 핸들러\r\n     */\r\n    onClickBtnGroupSave() {\r\n        if (!this.validationCheckGroup()) return;\r\n        this.props.main.showLoading();\r\n        let param = common.makeParam(this);\r\n        param.saveType = this.state.groupSaveType;\r\n        AdminService.saveCodeGroup(param,this.onResultGroupSave,(err) => Msg.error(err.message));\r\n    }\r\n    /**\r\n     * 코드그룹 저장 결과 핸들러\r\n     * @param {Object} res {result:ok|fail,message:결과 메세지}\r\n     */\r\n    onResultGroupSave(res) {\r\n        this.props.main.hideLoading();\r\n        if (res.result === \"ok\") {\r\n            this.initGroupForm();\r\n            this.disabledGroupForm();\r\n            this.reqCommGroupList();\r\n            Msg.ok(res.message);\r\n        }\r\n        else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    /**\r\n     * 코드그룹 삭제 버튼 클릭 이벤트 핸들러\r\n     */\r\n    onClickBtnGroupDel() {\r\n        const selectedItem = this.state.selectionGroupItem;\r\n        this.props.main.showConfirm(\"코드그룹 삭제\",selectedItem.groupName + \" 삭제 하시겠습니까?\",this.onConfirmGroupDelOk,this.onConfirmCancel);\r\n    }\r\n    onConfirmGroupDelOk() {\r\n        const selectedItem = this.state.selectionGroupItem;\r\n        this.props.main.showLoading();\r\n        if (this.state.reqDeleteCodeAll)\r\n            selectedItem.deleteCodeAll = true;\r\n        AdminService.deleteCodeGroup(selectedItem,this.onResultGroupDel,(err) => Msg.error(err.message));\r\n    }\r\n    onResultGroupDel(res) {\r\n        this.props.main.hideLoading();\r\n        if (res.result === \"ok\") {\r\n            this.initGroupForm();\r\n            this.disabledGroupForm();\r\n            this.reqCommGroupList();\r\n            this.setState({reqDeleteCodeAll:null});\r\n            Msg.ok(res.message);\r\n        }\r\n        else if (res.result === \"fail\") {\r\n            if (res.value === \"reqDeleteCodeAll\") {\r\n                this.setState({reqDeleteCodeAll:true});\r\n                this.props.main.showConfirm(\"코드그룹 삭제\",res.message,this.onConfirmGroupDelOk,this.onConfirmCancel);\r\n            } else {\r\n                this.setState({reqDeleteCodeAll:null});\r\n                Msg.error(res.message);\r\n            }\r\n        }\r\n    }\r\n    onConfirmCancel() {\r\n        this.setState({reqDeleteCodeAll:null});\r\n    }\r\n    /**\r\n     * 코드 저장 버튼 클릭 이벤트 핸들러\r\n     */\r\n    onClickBtnCodeSave() {\r\n        // const selectedItem = this.state.selectionCodeItem;\r\n        // console.log(selectedItem);\r\n        if (!this.validationCheckCode()) return;\r\n        this.props.main.showLoading();\r\n        let param = common.makeParam(this);\r\n        param.saveType = this.state.codeSaveType;\r\n        AdminService.saveCode(param,this.onResultCodeSave,(err) => Msg.error(err.message));\r\n    }\r\n    /**\r\n     * 코드 저장 결과 핸들러\r\n     * @param {Object} res {result:ok|fail,message:결과 메세지}\r\n     */\r\n    onResultCodeSave(res) {\r\n        this.props.main.hideLoading();\r\n        if (res.result === \"ok\") {\r\n            this.initCodeForm();\r\n            this.disabledCodeForm();\r\n            this.reqCommCodeList(this.state.selectionGroupItem.groupCode);\r\n            Msg.ok(res.message);\r\n        }\r\n        else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    /**\r\n     * 코드 삭제 버튼 클릭 이벤트 핸들러\r\n     */\r\n    onClickBtnCodeDel() {\r\n        const selectedItem = this.state.selectionCodeItem;\r\n        this.props.main.showConfirm(\"코드 삭제\",selectedItem.codeName + \" 삭제 하시겠습니까?\",this.onConfirmCodeDelOk,this.onConfirmCancel);\r\n    }\r\n    onConfirmCodeDelOk() {\r\n        const selectedItem = this.state.selectionCodeItem;\r\n        AdminService.deleteCode(selectedItem,this.onResultCodeDel,(err) => Msg.error(err.message));\r\n    }\r\n    onResultCodeDel(res) {\r\n        this.props.main.hideLoading();\r\n        if (res.result === \"ok\") {\r\n            this.initCodeForm();\r\n            this.disabledCodeForm();\r\n            this.reqCommCodeList(this.state.selectionGroupItem.groupCode);\r\n            Msg.ok(res.message);\r\n        }\r\n        else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 코드그룹 추가 버튼 클릭 이벤트 핸들러\r\n     */\r\n    onClickGroupAdd() {\r\n        this.setState({selectionGroupItem:undefined,groupSaveType:\"ins\",codeSaveType:undefined});\r\n        this.initGroupForm();\r\n        this.initCodeForm();\r\n        this.disabledCodeForm();\r\n        this.refs.groupCode.focus();\r\n    }\r\n    /**\r\n     * 코드 추가 버튼 클릭 이벤트 핸들러\r\n     */\r\n    onClickCodeAdd() {\r\n        if (!this.state.selectionGroupItem) {\r\n            Msg.error(\"그룹 선택해 주세요.\");\r\n            return;\r\n        }\r\n        this.setState({selectionCodeItem:undefined,groupSaveType:undefined,codeSaveType:\"ins\"});\r\n        this.initCodeForm();\r\n        this.disabledGroupForm();\r\n        this.refs.code.focus();\r\n    }\r\n    \r\n\r\n    render() {\r\n        const {\r\n            bodyHeight, groupData, groupColumns, codeData, codeColumns\r\n        } = this.state;\r\n        return <div className=\"commonCodeMgr mainContent\">\r\n            <div className={'content'} style={{display:\"flex\"}}>\r\n            \r\n            <div className=\"division\">\r\n                <span className=\"title\">● 그룹코드</span>\r\n                <Grid ref={'groupGrid'} onClick={this.onClickGroupGrid}\r\n                    data={groupData} columnOptions={{resizable: true}}\r\n                    columns={groupColumns}\r\n                    bodyHeight={bodyHeight}\r\n                    scrollX={false} scrollY={false}\r\n                />\r\n                <div className=\"gridBottomArea\">\r\n                    <div></div>\r\n                    <button className=\"btn btn_white\" onClick={() => this.onClickGroupAdd()}>추가</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"division\">\r\n                <span className=\"title\">● 코드</span>\r\n                <Grid ref={'codeGrid'} onClick={this.onClickCodeGrid}\r\n                    data={codeData} columnOptions={{resizable: true}}\r\n                    columns={codeColumns}\r\n                    bodyHeight={bodyHeight}\r\n                    scrollX={false} scrollY={false}\r\n                />\r\n                <div className=\"gridBottomArea\">\r\n                    <div></div>\r\n                    <button className=\"btn btn_white\" onClick={() => this.onClickCodeAdd()}>추가</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"division\" style={{paddingTop: 22}}>\r\n                {/*그룹 코드 입력폼*/}\r\n                <div className=\"table_type2\">\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>그룹코드 <span className=\"necessary\">*</span></th>\r\n                            <td>\r\n                                <div className=\"ipt_group\">\r\n                                    <input ref=\"groupCode\" type=\"text\" className=\"ipt_text\" />\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>그룹코드명 <span className=\"necessary\">*</span></th>\r\n                            <td>\r\n                                <div className=\"ipt_group\">\r\n                                    <input ref=\"groupName\" type=\"text\" className=\"ipt_text\" />\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>사용유무</th>\r\n                            <td>\r\n                                <div className=\"ipt_group\">\r\n                                    <input type=\"checkbox\" ref=\"groupUseYn\" className=\"form-control formChk\" />\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                    <div className=\"btn_area\"><p className=\"btn2\">\r\n                        <button ref=\"btnGroupSave\" className=\"btn btn_white\" onClick={() => this.onClickBtnGroupSave()}>그룹 저장</button>\r\n                        <button ref=\"btnGroupDel\" className=\"btn btn_white\" onClick={() => this.onClickBtnGroupDel()}>삭제</button>\r\n                    </p></div>\r\n                </div>\r\n\r\n                {/*코드 입력폼*/}\r\n                <div className=\"table_type2\">\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>코드 <span className=\"necessary\">*</span></th>\r\n                            <td>\r\n                                <div className=\"ipt_group\">\r\n                                <input ref=\"code\" type=\"text\" className=\"ipt_text\" />\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>코드명 <span className=\"necessary\">*</span></th>\r\n                            <td>\r\n                                <div className=\"ipt_group\">\r\n                                <input ref=\"codeName\" type=\"text\" className=\"ipt_text\" />\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>코드값</th>\r\n                            <td>\r\n                                <div className=\"ipt_group\">\r\n                                <input ref=\"value\" type=\"text\" className=\"ipt_text\" />\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>순서</th>\r\n                            <td>\r\n                                <div className=\"ipt_group\">\r\n                                <input ref=\"sort\" type=\"number\" className=\"ipt_number\" />\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>사용유무</th>\r\n                            <td>\r\n                                <div className=\"ipt_group\">\r\n                                <input type=\"checkbox\" ref=\"useYn\" className=\"form-control formChk\" />\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <div className=\"btn_area\"><p className=\"btn2\">\r\n                        <button ref=\"btnCodeSave\" className=\"btn btn_white\" onClick={() => this.onClickBtnCodeSave()}>코드 저장</button>\r\n                        <button ref=\"btnCodeDel\" className=\"btn btn_white\" onClick={() => this.onClickBtnCodeDel()}>삭제</button>\r\n                    </p></div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default CommonCodeMgr;","import React, {Component} from 'react';\r\nimport {Pagination, Msg, common, Validation} from 'comp';\r\nimport {AdminService, ServiceGroupReg } from 'admin';\r\nimport Grid from '@toast-ui/react-grid';\r\nimport TuiGrid from 'tui-grid';\r\n\r\n/**\r\n * 화면명 : Service Group Management\r\n * 화면 경로 : Admin > Service Group Management\r\n * 화면 코드 : MENU00407\r\n * 참고 : \r\n */\r\nclass ServiceGroupManager extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            gridData:[],\r\n            columns:[],\r\n            bodyHeight:300,\r\n            pagesPage:1,\r\n            pagesTotalCount:0,\r\n            pagesPerPage:5,\r\n            showDetail:false,\r\n            selectionItem:{},\r\n            selectionColumName:'',\r\n            selectionRowKey:-1\r\n        }\r\n        this.requestData = this.requestData.bind(this);\r\n        this.onResultList = this.onResultList.bind(this);\r\n        this.onClickPageItem = this.onClickPageItem.bind(this);\r\n        this.onClickSch = this.onClickSch.bind(this);\r\n\t\tthis.onClickReg = this.onClickReg.bind(this);\r\n\t\tthis.onClickDel = this.onClickDel.bind(this);\r\n        this.onResultDel = this.onResultDel.bind(this);\r\n        this.onConfirmOkDel = this.onConfirmOkDel.bind(this);\r\n        this.onConfirmCancelDel = this.onConfirmCancelDel.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        TuiGrid.setLanguage('ko');\r\n        TuiGrid.applyTheme('clean'); // default, striped, clean\r\n        this.requestData(1);\r\n    }\r\n\r\n/**************************************************************************/\r\n/* 기능 */\r\n/**************************************************************************/\r\n    /**\r\n     * 리스트\r\n     * @param {int} page \r\n     * @param {String} schKeyword \r\n     */\r\n    requestData(page,schKeyword) {\r\n        if (page === undefined) page = this.state.pagesPage;\r\n        this.props.main.showLoading();\r\n        let parm = {\r\n            page:page\r\n        };\r\n        if (schKeyword !== undefined) {\r\n            schKeyword = Validation.filterSchKeyword(schKeyword);\r\n            parm.schKey = schKeyword;\r\n        }\r\n        AdminService.serviceGroupList(parm,this.onResultList,(err) => Msg.error(err.message));\r\n\t}\r\n\t\r\n/**************************************************************************/\r\n/* 핸들러 */\r\n/**************************************************************************/\r\n\t/**\r\n     * 리스트 결과 핸들러\r\n     * @param {Object} res {result:ok|fail,list:리스트}\r\n     */\r\n    onResultList(res) {\r\n        this.props.main.hideLoading();\r\n        if (res.result===\"ok\") {\r\n            const pagesInfo = res.data;\r\n            const columns = [\r\n                {name:'serviceGroupName',header:'Service Group Name',align:\"left\"}\r\n                ,{name:'creationDate',header:'생성일',align:\"center\"}\r\n                ,{name:'description',header:'설명',align:\"left\"}\r\n            ];\r\n            this.setState({gridData:res.list,pagesPage:pagesInfo.page,pagesTotalCount:pagesInfo.totalCount,pagesPerPage:pagesInfo.pageCount,columns:columns});\r\n        } else if (res.result === \"fail\"){\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    /**\r\n\t * 페이지 클릭 이벤트 핸들러\r\n\t * @param {int} page \r\n\t */\r\n    onClickPageItem(page) {\r\n        this.requestData(page, this.state.schKeyword);\r\n    }\r\n    /**\r\n\t * 검색 클릭 핸들러\r\n\t */\r\n    onClickSch() {\r\n        this.requestData(this.state.pagesPage, this.refs.schKey.value );\r\n\t}\r\n\t/**\r\n\t * 등록 버튼 클릭 핸들러\r\n\t */\r\n    onClickReg() {\r\n        const {modifyServiceGroupInfo} = this.state;\r\n        const title = \"서비스 그룹 추가\";\r\n        this.props.main.showPopup(\r\n            title,\r\n            <ServiceGroupReg main={this.props.main} modifyFlag={modifyServiceGroupInfo !== undefined} modifyServiceGroupInfo={modifyServiceGroupInfo} onClose={(e) => {this.props.main.hidePopup(title);this.requestData()}}/> ,\r\n            {width:516, height:342, popupBtnAreaVisible:false},null,null\r\n        );\r\n\t}\r\n\t/**\r\n\t * 삭제 버튼 클릭 핸들러\r\n\t */\r\n\tonClickDel() {\r\n        const chkedRsrs = this.refs.grid.getInstance().getCheckedRows();\r\n        if (chkedRsrs.length > 0)\r\n            this.props.main.showConfirm(\"서비스 그룹 삭제\",\"서비스 그룹 삭제하시겠습니까?\",this.onConfirmOkDel,this.onConfirmCancelDel);\r\n        else Msg.warn(\"선택된 서비스 그룹이 없습니다.\");\r\n\t}\r\n\t/**\r\n\t * 삭제 확인 핸들러\r\n\t */\r\n    onConfirmOkDel() {\r\n        const chkedRsrs = this.refs.grid.getInstance().getCheckedRows();\r\n        let delServiceGroups = [];\r\n        for (let i=0; i<chkedRsrs.length; i++) {\r\n            delServiceGroups.push( chkedRsrs[i].serviceGroupName );\r\n        }\r\n        AdminService.deleteServiceGroup(delServiceGroups,this.onResultDel,(e) => Msg.error(e.message));\r\n\t}\r\n\t/**\r\n\t * 삭제 확인 취소 핸들러\r\n\t */\r\n    onConfirmCancelDel() {\r\n        // 삭제 확인 취소시\r\n\t}\r\n\t/**\r\n\t * 석제 결과 핸들러\r\n\t * @param {Object} res {result:ok|fail,message}\r\n\t */\r\n    onResultDel(res) {\r\n        this.requestData();\r\n        if (res.result === \"ok\") {\r\n            Msg.ok(\"서비스 그룹 삭제 되었습니다.\");\r\n        }\r\n        else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n\t}\r\n\t\r\n    render() {\r\n        let {gridData, columns, pagesPage, pagesTotalCount, pagesPerPage} = this.state;\r\n        return <div className=\"page_layout\"><div className=\"layout_contents\">\r\n          <div className=\"content_list model_aid_list table_type1\">\r\n  \r\n            <div className=\"content_title\">\r\n              <h3 className=\"tit\">Service Group Management</h3>\r\n            </div>\r\n\r\n            <div className=\"search_condition\">\r\n                <div className=\"ipt_group search_basis search_basis2\"><div className=\"group_center\">\r\n                    <ul><li>\r\n                    <span className=\"tit\" id=\"searchSort\">Service Group Name</span>\r\n                    <input ref=\"schKey\" type=\"text\" className=\"ipt_text ml5\" placeholder=\"검색어를 입력해 주세요.\" style={{width:240}}\r\n                        onKeyDown={(e) => e.keyCode === 13 ? this.onClickSch() : null}/>\r\n                    </li></ul>\r\n                    <a role=\"button\" className=\"btn btn_black\" onClick={() => this.onClickSch()}>검색</a>\r\n                </div>\r\n                </div>\r\n                <a role=\"button\" className=\"btn btn_add btn_blue\" onClick={this.onClickReg}></a>\r\n            </div>\r\n\r\n            <div className=\"content_stitle\">\r\n                <span>Total : {common.displNum(pagesTotalCount)}</span>\r\n            </div>\r\n            <Grid ref={'grid'} rowHeaders={[\"checkbox\"]}\r\n                data={gridData} columnOptions={{resizable: true}}\r\n                columns={columns}\r\n                scrollX={false} scrollY={false}\r\n            />\r\n            <div className=\"gridControlArea left btn_area\">\r\n                <button className=\"btn btn_black gridControlBtn\" onClick={this.onClickDel}>삭제</button>\r\n                <Pagination ref={'page'}\r\n                                page={pagesPage}\r\n                                totalCount={pagesTotalCount}\r\n                                perPage={pagesPerPage}\r\n                                onClickItem={this.onClickPageItem}/>\r\n            </div>\r\n    \r\n          </div>\r\n        </div>\r\n        </div>;\r\n    }\r\n}\r\nexport default ServiceGroupManager;","import React, {Component} from 'react';\r\nimport { Msg } from 'comp';\r\nimport { makeParam } from 'comp/common';\r\nimport Validation from 'comp/Validation';\r\nimport AdminService from './AdminService';\r\n/**\r\n * 화면명 : Service Group Regist\r\n * 화면 경로 : Admin > Service Group Management > Service Group Regist\r\n * 화면 코드 : MENU0040701\r\n * 참고 : \r\n */\r\nclass ServiceGroupReg extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            validName:null,\r\n            initModify:false,\r\n            inputChange:false,\r\n            isNameChk:false\r\n        };\r\n        this.onClickReg = this.onClickReg.bind(this);\r\n        this.onClose = this.onClose.bind(this);\r\n        this.onResultCreate = this.onResultCreate.bind(this);\r\n        this.onChangeName = this.onChangeName.bind(this);\r\n        this.validationCheck = this.validationCheck.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            validName:null,\r\n            isNameChk:false,\r\n            modifyFlag:false\r\n        });\r\n        this.refs.serviceGroupName.focus();\r\n    }\r\n    componentDidUpdate() {\r\n        const { initModify } = this.state;\r\n        let { modifyFlag } = this.props;\r\n        if (modifyFlag && !initModify) {\r\n            this.setState({initModify:true});   // 수정일경우 처음에 중복확인 PASS\r\n        }\r\n    }\r\n/**************************************************************************/\r\n/* 기능 */\r\n/**************************************************************************/\r\n\t/**\r\n\t * 저장 버튼 클릭 핸들러\r\n\t */\r\n\tonClickReg() {\r\n\t\tconst {modifyFlag} = this.props;\r\n        if (!this.validationCheck()) return;\r\n\t\tlet parm = makeParam(this);\r\n\t\tparm.saveType = modifyFlag ? \"modi\" : \"ins\";\r\n        AdminService.createServiceGroup(parm,this.onResultCreate,(e) => Msg.error(e.message));\r\n\t}\r\n\t/**\r\n\t * 저장전 값 확인\r\n\t * @return {Boolean} 확인 결과\r\n\t */\r\n    validationCheck() {\r\n        if (!this.state.inputChange) {\r\n            Msg.warn(\"변경된 사항이 없습니다.\");\r\n            return false;\r\n        }\r\n        // 초기화\r\n        this.setState({validName:null,validCpu:null});\r\n        // 자원 그룹명\r\n        let chkVal = this.refs.serviceGroupName.value;\r\n        let valiRes = Validation.chkServiceGroupName(chkVal);\r\n        let chkState = {};\r\n        chkState.validName = true;\r\n        if (!valiRes.result) {\r\n            Msg.error(valiRes.errMsg);\r\n            chkState.validName = false;\r\n            this.setState(chkState);\r\n            return false;\r\n        }\r\n\r\n        this.setState(chkState);\r\n        return true;\r\n    }\r\n/**************************************************************************/\r\n/* 핸들러 */\r\n/**************************************************************************/\r\n\t/**\r\n\t * 그룹명 변경 핸들러\r\n\t */\r\n    onChangeName() {\r\n        this.setState({inputChange:true,isNameChk:false});\r\n    }\r\n    /**\r\n\t * 저장 결과 핸들러\r\n\t * @param {Object} res {result:ok|fail,message}\r\n\t */\r\n    onResultCreate(res) {\r\n        this.setState(this.defaultState);\r\n        if (res.result === \"ok\") {\r\n            // initForm(this);\r\n            Msg.ok(res.message);\r\n            this.props.onClose();\r\n        } else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n\t}\r\n\t/**\r\n\t * 닫기 핸들러\r\n\t */\r\n    onClose() {\r\n        setTimeout((e) => this.props.onClose(),100);\r\n\t}\r\n\t/**\r\n\t * 설명 변경 핸들러\r\n\t */\r\n\tonChangeDesc() {\r\n        const maxLen = 100;\r\n        if (this.refs.description.value.length > maxLen) {\r\n            this.refs.description.value = this.refs.description.value.substr(0,maxLen);\r\n        }\r\n        this.setState({descLength:this.refs.description.value.length,inputChange:true});\r\n    }\r\n    \r\n    render() {\r\n\t\tlet { modifyServiceGroupInfo } = this.props;\r\n\t\tlet {descLength} = this.state;\r\n        \r\n\t\tif (modifyServiceGroupInfo === undefined) modifyServiceGroupInfo = {};\r\n\t\tif (descLength === 0 && modifyServiceGroupInfo.description !== null && modifyServiceGroupInfo.description !== undefined && modifyServiceGroupInfo.description.length > 0)\r\n            descLength = modifyServiceGroupInfo.description.length;\r\n        return <div className=\"table_type2\">\r\n            <table>\r\n                <tbody>\r\n                <tr>\r\n                    <th>서비스 그룹명</th>\r\n                    <td>\r\n                    <div className=\"ipt_group\">\r\n\t\t\t\t\t\t<input type=\"text\" ref=\"serviceGroupName\" className=\"ipt_text\" id=\"inputName\" placeholder=\"한글,영문,숫자 최대 50자\"\r\n                        \tonChange={(e) => {this.onChangeName()}} maxLength=\"20\" defaultValue={modifyServiceGroupInfo.serviceGroupName}\r\n                    />\r\n                    </div>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                <th>Description</th>\r\n                <td style={{textAlign:\"right\"}}>\r\n                    <textarea ref=\"description\" rows=\"3\" cols=\"100\" maxlength=\"100\" onChange={(e) => this.onChangeDesc()} defaultValue={modifyServiceGroupInfo.description}></textarea>\r\n                    <span className=\"font_gray\" style={{paddingRight:5}}>(<span style={{color:\"#ff7272\"}}>{descLength}</span> / 100)</span>\r\n                </td>\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n            <div className=\"popupBtnArea btn_area addbtnarea\"><p className=\"btn2\">\r\n                <button className=\"btn btn_white\" onClick={() => this.props.onClose()}>취소</button>\r\n                <button className=\"btn btn_black\" onClick={() => this.onClickReg()}>저장</button>\r\n            </p></div>\r\n        </div>;\r\n    }\r\n}\r\nexport default ServiceGroupReg;","import React, {Component} from 'react';\r\nimport {Pagination, Msg} from 'comp';\r\nimport {ModelService} from 'model';\r\nimport Validation from 'comp/Validation';\r\nimport GridList from 'comp/GridList';\r\n\r\nclass ModelPopCont extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            gridData:[],\r\n            columns:[\r\n                {name:\"modelName\",header:\"Model Name\",width:200},\r\n                {name:\"priorityNm\",header:\"Priority\",width:50,align:\"center\"},\r\n                {name:\"regDate\",header:\"Update Date\",width:120,align:\"center\"},\r\n                {name:\"userId\",header:\"User\",width:100,align:\"center\"},\r\n                {name:\"select\",header:\"Select\",width:79,align:\"center\"}\r\n            ],\r\n            bodyHeight:200,\r\n            pagesPage:1,\r\n            pagesTotalCount:0,\r\n            pagesPerPage:5\r\n        };\r\n        this.requestData = this.requestData.bind(this);\r\n        this.onResultList = this.onResultList.bind(this);\r\n        this.onClickPageItem = this.onClickPageItem.bind(this);\r\n        this.onClickSch = this.onClickSch.bind(this);\r\n        this.onClickSelection = this.onClickSelection.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.requestData(1);\r\n    }\r\n    requestData(page,schType,schKeyword) {\r\n        if (page === undefined) page = this.state.pagesPage;\r\n        this.props.main.showLoading();\r\n        const parm = {\r\n            page:page\r\n        };\r\n        if (schType !== undefined && schKeyword !== undefined) {\r\n            // Msg.info(\"필터전 : \" + schKeyword);\r\n            schKeyword = Validation.filterSchKeyword(schKeyword);\r\n            // Msg.info(\"필터후 : \" + schKeyword);\r\n            parm.schKey = schKeyword;\r\n            parm.schType = schType;\r\n        }\r\n        ModelService.list(parm,this.onResultList,(err) => Msg.error(err.message));\r\n    }\r\n    onResultList(res) {\r\n        this.props.main.hideLoading();\r\n        // console.log(\"onresultlist\");\r\n        // console.log(res);\r\n        if (res.result===\"ok\") {\r\n            const pagesInfo = res.data;\r\n            const columns = [\r\n                {name:\"modelName\",header:\"Model Name\",width:120,sortable:true},\r\n                {name:\"priorityNm\",header:\"Priority\",width:120,align:\"center\",sortable:true},\r\n                {name:\"regDate\",header:\"Update Date\",width:120,align:\"center\",sortable:true},\r\n                {name:\"userId\",header:\"User\",width:100,align:\"center\",sortable:true},\r\n                {name:\"select\",header:\"Select\",width:85,align:\"center\",paddingRight:5,sortable:true,\r\n                    renderer: { type: SelectButton ,options: { listData:res.list,onClickSelection:this.onClickSelection } }\r\n                }\r\n            ];\r\n            this.setState({gridData:res.list,pagesPage:pagesInfo.page,pagesTotalCount:pagesInfo.totalCount,pagesPerPage:pagesInfo.pageCount,columns:columns});\r\n            // this.setState({gridData:res.list,columns:columns});\r\n        } else if (res.result === \"fail\"){\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    /**\r\n\t * 검색 클릭 핸들러\r\n\t */\r\n    onClickSch() {\r\n        // if (this.refs.schKey.value.length < 1) {\r\n        //     Msg.warn(\"모델명을 입력해 주세요.\");\r\n        //     return;\r\n        // }\r\n        this.requestData(1, \"modelName\", this.refs.schKey.value );\r\n    }\r\n    onClickSelection(item) {\r\n        if (this.props.onClickSelection)\r\n            this.props.onClickSelection(item);\r\n        this.props.onClose();\r\n    }\r\n    /**\r\n\t * 페이지 클릭 이벤트 핸들러\r\n\t * @param {int} page \r\n\t */\r\n    onClickPageItem(page) {\r\n        // console.log(\"onclickpageitem : \" + page);\r\n        const {schKey} = this.refs;\r\n        this.requestData(page,\"modelName\",schKey.value);\r\n    }\r\n    render() {\r\n        let {\r\n            gridData, columns, \r\n            pagesPage, pagesTotalCount, pagesPerPage\r\n        } = this.state;\r\n        return <div style={{padding:7}}>\r\n            <div className=\"search_condition\" style={{marginBottom: 10}}>\r\n                <div className=\"ipt_group search_basis\" style={{paddingLeft: 31,width:\"100%\"}}>\r\n                    {/* <span className=\"txt\">검색어</span> */}\r\n                    {/* <select ref=\"schType\" style={{float:\"left\",width: 200,height: 32,marginLeft: 10,outline:\"none\",border:\"1px solid #CECECE\"}}>\r\n                        <option value=\"modelName\">Model Name</option>\r\n                        <option value=\"user\">User</option>\r\n                        </select>\r\n                    <span className=\"selectbox ml10\" id=\"searchSort\" style={{width:120}}></span> */}\r\n                    <input ref=\"schKey\" type=\"text\" className=\"ipt_text ml10\" placeholder=\"Model Name\" style={{width:297}} onKeyDown={(e) => e.keyCode === 13 ? this.onClickSch() : null}/>\r\n                    <a role=\"button\" className=\"btn btn_black\" onClick={() => this.onClickSch()}>검색</a>\r\n                </div>\r\n            </div>\r\n            <div style={{paddingTop:9}}>\r\n                <GridList columns={columns} gridData={gridData}/>\r\n                <Pagination ref={'page'}\r\n                    page={pagesPage}\r\n                    totalCount={pagesTotalCount}\r\n                    perPage={pagesPerPage}\r\n                    onClickItem={this.onClickPageItem}/>\r\n            </div>\r\n        {/* <div className=\"popupBtnArea btn_area addbtnarea\"><p className=\"btn2\">\r\n            <button className=\"btn btn_white\" onClick={() => this.props.main.hidePopup(this.props.title)}>닫기</button>\r\n            * <button className=\"btn btn_black\" onClick={(e) => this.onClickSelection()}>선택</button> *\r\n\t\t</p></div> */}\r\n        </div>;\r\n    }\r\n}\r\nclass SelectButton extends Component {\r\n    render() {\r\n        const {item} = this.props;\r\n        const {onClickSelection} = this.props.options;\r\n        return <button className=\"table_btn btn_linegray\" onClick={() => onClickSelection(item)}>Select</button>;\r\n    }\r\n}\r\nexport default ModelPopCont;","import React, {Component} from 'react';\r\nimport { Msg } from 'comp';\r\nimport { makeParam } from 'comp/common';\r\nimport Validation from 'comp/Validation';\r\nimport {ModelManager} from 'model';\r\nimport ServiceService from './ServiceService';\r\nimport {AdminService} from 'admin';\r\nimport ModelPopCont from 'model/ModelPopCont';\r\n/**\r\n * 화면명 : Service 등록\r\n * 화면 경로 : Service > Service 관리 > Service 등록\r\n * 화면 코드 : \r\n * 참고 : Service 관리 화면에서 사용하는 등록 화면\r\n */\r\nclass ServiceReg extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            validName:null,\r\n            validModelId:null,\r\n            validUseData:null,\r\n            isNameChk:false,\r\n            descLength:0,\r\n            progress:0,\r\n            selectedFiles:undefined,\r\n            currentFile:undefined,\r\n            initModify:false,\r\n            popupSelectedItem:undefined,\r\n            inputChange:false,\r\n            resourceGroupData:[],\r\n            selectedResourceGroupId:undefined,\r\n            serviceGroupData:[],\r\n            selectedServiceGroupName:undefined,\r\n\t\t\tmodels:[]\r\n        };\r\n        this.onClickReg = this.onClickReg.bind(this);\r\n        // this.onClickNameCheck = this.onClickNameCheck.bind(this);\r\n        // this.onResultServiceNameChk = this.onResultServiceNameChk.bind(this);\r\n        this.onClose = this.onClose.bind(this);\r\n        this.modelChoosePopup = this.modelChoosePopup.bind(this);\r\n        this.modelSelectedItem = this.modelSelectedItem.bind(this);\r\n        this.onResultCreate = this.onResultCreate.bind(this);\r\n        // this.onResultResourceGroupList = this.onResultResourceGroupList.bind(this);\r\n        this.onResultServiceGroupList = this.onResultServiceGroupList.bind(this);\r\n        // this.addModelData = this.addModelData.bind(this);\r\n        // this.removeModelData = this.removeModelData.bind(this);\r\n\t\t// this.onClickTag = this.onClickTag.bind(this);\r\n\t\tthis.onChangeDesc = this.onChangeDesc.bind(this);\r\n        this.onClickModelPop = this.onClickModelPop.bind(this);\r\n        this.onClickModelSelection = this.onClickModelSelection.bind(this);\r\n        this.onChangeDagId = this.onChangeDagId.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.setState({\r\n            validName:null,\r\n            isNameChk:false,\r\n            descLength:0,\r\n            progress:0,\r\n            selectedFiles:undefined,\r\n            currentFile:undefined,\r\n            modifyFlag:false\r\n        });\r\n        this.refs.serviceName.focus();\r\n        // 서비스 그룹\r\n        AdminService.serviceGroupList({},this.onResultServiceGroupList,(err) => Msg.error(err.message));\r\n    }\r\n    componentDidUpdate() {\r\n        const { initModify } = this.state;\r\n        let { modifyFlag } = this.props;\r\n        if (modifyFlag && !initModify) {\r\n            this.setState({initModify:true, isNameChk:true});   // 수정일경우 처음에 중복확인 PASS\r\n        }\r\n    }\r\n\r\n    onResultServiceGroupList(res) {\r\n        if (res.result===\"ok\") {\r\n            this.setState({serviceGroupData:res.list});\r\n        } else if (res.result === \"fail\"){\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    onChangeName() {\r\n        this.setState({inputChange:true,isNameChk:false});\r\n    }\r\n    // onClickNameCheck() {\r\n    //     const serviceName = this.refs.serviceName.value;\r\n    //     ServiceService.chkServiceName(serviceName,this.onResultServiceNameChk,(e) => console.log(e));\r\n    // }\r\n    // onResultServiceNameChk(res) {\r\n    //     if (res.result === 'ok') {\r\n    //         Msg.ok(res.message);\r\n    //         this.setState({isNameChk:true});\r\n    //     } else if (res.result === \"fail\") {\r\n    //         Msg.error(res.message);\r\n    //     }\r\n    // }\r\n    \r\n    onClickReg() {\r\n        // console.log('onclickreg');\r\n        if (!this.validationCheck()) return;\r\n        let parm = makeParam(this);\r\n        // ModelService.regist(parm,this.onResultRegist,(e) => console.log(e));\r\n        // console.log(parm);\r\n        ServiceService.create(parm,this.onResultCreate,(e) => Msg.error(e.message));\r\n        // this.props.onClose();//test\r\n    }\r\n    validationCheck() {\r\n        if (!this.state.inputChange) {\r\n            Msg.warn(\"변경된 사항이 없습니다.\");\r\n            return false;\r\n        }\r\n        // 초기화\r\n        this.setState({validName:null});\r\n        // 모델명\r\n        let chkVal = this.refs.serviceName.value;\r\n        let valiRes = Validation.chkServiceName(chkVal);\r\n        let chkState = {};\r\n        chkState.validName = true;\r\n        if (!valiRes.result) {\r\n            Msg.error(valiRes.errMsg);\r\n            chkState.validName = false;\r\n            this.setState(chkState);\r\n            return false;\r\n        }\r\n\r\n        // if (!this.state.isNameChk) {\r\n        //     Msg.error(\"Service명 중복 체크해 주세요.\");\r\n        //     chkState.validName = false;\r\n        //     this.setState(chkState);\r\n        //     return false;\r\n        // }\r\n\r\n        // 서비스 그룹 체크 : default 선택으로 PASS\r\n\r\n        // DAG ID 체크\r\n        chkVal = this.refs.dagId.value;\r\n        valiRes = Validation.chkServiceDagIdExp(chkVal);\r\n        chkState.validDagId = true;\r\n        if (!valiRes.result) {\r\n            Msg.error(valiRes.errMsg);\r\n            chkState.validDagId = false;\r\n            this.setState(chkState);\r\n            return false;\r\n        }\r\n\r\n        // Cycle 입력했으면 체크\r\n        chkVal = this.refs.runCycle.value;\r\n        if (chkVal.length > 0) {\r\n            //None, @once, @hourly, @daily, @weekly, @monthly, @yearly\r\n            if (!(chkVal === \"None\" || chkVal === \"@once\" || chkVal === \"@hourly\" || chkVal === \"@daily\" || chkVal === \"@weekly\" || chkVal === \"@monthly\" || chkVal === \"@yearly\")) {\r\n                chkVal = chkVal.split(\" \");\r\n                if (chkVal.length !== 5) {\r\n                    Msg.error(\"Cycle 실행 입력 형식이 잘못되었습니다.\");\r\n                    return false;\r\n                }\r\n            }\r\n        } else {\r\n            this.refs.runCycle.value = \"None\";\r\n        }\r\n\r\n        // 모델 선택 체크\r\n        chkVal = this.refs.modelId.value;\r\n        chkState.validModelId = true;\r\n        if (chkVal.length < 1) {\r\n            Msg.error(\"모델을 선택해 주세요.\");\r\n            chkState.validModelId = false;\r\n            this.setState(chkState);\r\n            return false;\r\n        }\r\n        // 데이터 입력 체크\r\n        // chkVal = this.refs.useDatas.value;\r\n        // chkState.validUseData = true;\r\n        // if (chkVal.length < 1) {\r\n        //     Msg.error(\"데이터를 입력해 주세요.\");\r\n        //     chkState.validUseData = false;\r\n        //     this.setState(chkState);\r\n        //     return false;\r\n        // }\r\n\r\n\r\n\r\n        this.setState(chkState);\r\n        return true;\r\n    }\r\n    onResultCreate(res) {\r\n        this.setState(this.defaultState);\r\n        if (res.result === \"ok\") {\r\n            // initForm(this);\r\n            Msg.ok(res.message);\r\n            // this.setState({validName:null,isNameChk:false});\r\n            this.props.onClose();\r\n        } else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    onClose() {\r\n        setTimeout((e) => this.props.onClose(),100);\r\n    }\r\n    \r\n    modelChoosePopup() {\r\n        //title,cont,closeFn) {\r\n        this.setState({popupSelectedItem:undefined});\r\n        this.props.main.showPopup(\r\n            \"모델 선택\",\r\n            <ModelManager main={this.props.main} isPopup={true} onChangeItem={(item) => this.setState({popupSelectedItem:item})} onSelection={this.modelSelectedItem} onClose={() => this.props.main.hidePopup(\"모델 선택\")}/>,\r\n            {width:900, height:450, okLabel:\"선택\"},this.modelSelectedItem,\r\n            function() {\r\n                console.log(\"close\");\r\n            }\r\n        );\r\n    }\r\n    modelSelectedItem() {\r\n        let {popupSelectedItem} = this.state;\r\n        if (!popupSelectedItem)\r\n            Msg.error(\"선택된 모델이 없습니다.\");\r\n        else {\r\n            // console.log(this.state.popupSelectedItem);\r\n            // this.refs.model.innerText = this.state.popupSelectedItem.modelName;\r\n            // this.refs.modelId.value = this.state.popupSelectedItem.modelId;\r\n            this.addModelData(popupSelectedItem);\r\n            /*\r\n            if (this.refs.modelId.value.indexOf(popupSelectedItem.modelId) > -1) {\r\n                Msg.warn(\"동일한 모델이 이미 있습니다.\");\r\n            } else {\r\n                models.push( popupSelectedItem.modelName );\r\n                if (this.refs.modelId.value.length > 0)\r\n                    this.refs.modelId.value += \",\";\r\n                this.refs.modelId.value = this.refs.modelId.value + popupSelectedItem.modelId;\r\n\r\n                this.setState({inputChange:true});\r\n            }\r\n            */\r\n        }\r\n    }\r\n\r\n    // addModelData(addItem) {\r\n    //     let {models} = this.state;\r\n    //     if (this.refs.modelId.value.indexOf(addItem.modelId) > -1) {\r\n    //         Msg.warn(\"동일한 모델이 이미 있습니다.\");\r\n    //     } else {\r\n    //         models.push( addItem.modelName );\r\n    //         if (this.refs.modelId.value.length > 0)\r\n    //         this.refs.modelId.value += \",\";\r\n    //         this.refs.modelId.value = this.refs.modelId.value + addItem.modelId;\r\n            \r\n    //         this.setState({inputChange:true});\r\n    //     }\r\n    // }\r\n    // removeModelData(removeModelName) {\r\n    //     //this.refs.modelId.value\r\n    //     //this.state.models\r\n    //     const mids = this.refs.modelId.value.split(\",\");\r\n    //     const mnms = this.state.models;\r\n    //     let nmids = [];\r\n    //     let nmnms = [];\r\n    //     let removeIdx = -1;\r\n    //     let i;\r\n    //     if (String(mnms).indexOf(removeModelName) === -1) {\r\n    //         Msg.warn(\"삭제할 모델이 없습니다.\");\r\n    //     } else {\r\n    //         for (i=0; i<mnms.length; i++) {\r\n    //             if (mnms[i] === removeModelName) {\r\n    //                 removeIdx = i;\r\n    //                 break;\r\n    //             }\r\n    //         }\r\n    //         for (i=0; i<mids.length; i++) {\r\n    //             if (removeIdx !== i) {\r\n    //                 nmids.push( mids[i] );\r\n    //                 nmnms.push( mnms[i]  );\r\n    //             }\r\n    //         }\r\n    //         this.refs.modelId.value = String(nmids);\r\n    //         this.setState({inputChange:true, models:nmnms});\r\n    //     }\r\n    // }\r\n    // onClickTag(tagItem) {\r\n    //     console.log(\"onClickTag\");\r\n    //     console.log(tagItem);\r\n    //     this.removeModelData(tagItem.text);\r\n\t// }\r\n\tonChangeDesc() {\r\n        const maxLen = 100;\r\n        if (this.refs.serviceDesc.value.length > maxLen) {\r\n            this.refs.serviceDesc.value = this.refs.serviceDesc.value.substr(0,maxLen);\r\n        }\r\n        this.setState({descLength:this.refs.serviceDesc.value.length,inputChange:true});\r\n\t}\r\n\tonClickModelPop() {\r\n\t\t// const {\r\n        //     modifyModelInfo, modifyModelFiles\r\n        // } = this.state;\r\n        // this.setState({showReg:true});\r\n        const popTitle = \"Model 선택\";\r\n        this.props.main.showPopup(\r\n            popTitle,\r\n            <ModelPopCont title={popTitle} main={this.props.main} onClose={(e) => this.props.main.hidePopup(popTitle)} onClickSelection={this.onClickModelSelection}/> ,\r\n            {width:700, height:542, okLabel:\"선택\", popupBtnAreaVisible:false},null,null\r\n        );\r\n    }\r\n    onClickModelSelection(item) {\r\n        console.log(item);\r\n        let {modifyServiceInfo} = this.props;\r\n        this.refs.modelName.value = item.modelName;\r\n        this.refs.modelId.value = item.modelId;\r\n        // if (!modifyServiceInfo) modifyServiceInfo = {};\r\n        if (modifyServiceInfo) {\r\n            modifyServiceInfo.modelNam = item.modelName;\r\n            modifyServiceInfo.modelId = item.modelId;\r\n            this.setState({inputChange:true,modifyServiceInfo:modifyServiceInfo});\r\n        } else {\r\n            this.setState({inputChange:true});\r\n        }\r\n    }\r\n    onChangeDagId() {\r\n        this.setState({inputChange:true});\r\n    }\r\n    render() {\r\n        const { serviceGroupData,selectedServiceGroupName } = this.state;\r\n        let { descLength } = this.state;\r\n        let { modifyFlag,modifyServiceInfo } = this.props;\r\n        if (modifyServiceInfo === undefined) modifyServiceInfo = {};\r\n        // try {\r\n        //     if (modifyServiceInfo.modelId !== null || modifyServiceInfo.modelId !== undefined) this.refs.modelId.value = modifyServiceInfo.modelId;\r\n        // } catch (err) {}\r\n        // console.log( \"modifyServiceInfo\" );\r\n\t\t// console.log( modifyServiceInfo );\r\n\t\tlet i;\r\n        \r\n        // if (modifyServiceInfo.resourceGroupId && !selectedResourceGroupId) {\r\n        //     this.setState({selectedResourceGroupId:modifyServiceInfo.resourceGroupId});\r\n        // }\r\n        if (modifyServiceInfo.serviceGroupName && !selectedServiceGroupName) {\r\n            this.setState({selectedServiceGroupName:modifyServiceInfo.serviceGroupName});\r\n\t\t}\r\n\t\t\r\n\t\tlet serviceGroupOpts = [];\r\n        for (i=0; i<serviceGroupData.length; i++) {\r\n            if (selectedServiceGroupName === serviceGroupData[i].serviceGroupName)\r\n                serviceGroupOpts.push(\r\n                    <option value={serviceGroupData[i].serviceGroupName} key={Math.random()} selected>{serviceGroupData[i].serviceGroupName}</option>\r\n                );\r\n            else\r\n                serviceGroupOpts.push(\r\n                    <option value={serviceGroupData[i].serviceGroupName} key={Math.random()}>{serviceGroupData[i].serviceGroupName}</option>\r\n                );\r\n\t\t}\r\n\r\n\t\tif (descLength === 0 && modifyServiceInfo.serviceDesc !== null && modifyServiceInfo.serviceDesc !== undefined && modifyServiceInfo.serviceDesc.length > 0)\r\n            descLength = modifyServiceInfo.serviceDesc.length;\r\n\t\t\r\n        return <div className=\"table_type2\">\r\n        {modifyFlag ? \r\n            <input type=\"text\" ref=\"serviceId\" style={{display:\"none\"}} id=\"inputId\" defaultValue={modifyServiceInfo.serviceId} disabled/>\r\n        : null}\r\n        <table>\r\n          <tbody>\r\n\t\t\t{modifyFlag\r\n            ? <tr>\r\n              <th>Service ID</th>\r\n              <td>\r\n                <div className=\"ipt_group\">\r\n\t\t\t\t<span className=\"txt\">{modifyServiceInfo.serviceId}</span>\r\n                </div>\r\n              </td>\r\n            </tr> : null}\r\n            <tr>\r\n              <th>Service명\r\n                  {/* <span className=\"font_gray\">(한글,영문 최대 20자)</span> */}\r\n                  <span className=\"necessary\">*</span></th>\r\n              <td>\r\n                <div className=\"ipt_group\">\r\n                  <input ref=\"serviceName\" type=\"text\" className=\"ipt_text\" placeholder=\"한글,영문 최대 50자\" \r\n                    // onKeyDown={(e) => e.keyCode === 13 && !isNameChk ? this.onClickNameCheck() : console.log('isNameChked')}\r\n                      onChange={(e) => {this.onChangeName()}}\r\n                      maxLength=\"50\" defaultValue={modifyServiceInfo.serviceName}/>\r\n                  {/* <a role=\"button\" className={\"btn btn_black btn_duplicate\" + (isNameChk ? ' success' : '')} onClick={(e) => {!isNameChk ? this.onClickNameCheck() : console.log('isNameChked')}}>{isNameChk ? '확인완료' : '중복확인'}</a> */}\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>Service Group<span className=\"necessary\">*</span></th>\r\n              <td>\r\n                <div className=\"ipt_group\">\r\n\t\t\t\t\t<select ref=\"serviceGroupName\" style={{width: 172,height: 38,outline: \"none\",border: \"1px solid #CECECE\",borderRadius: 3,paddingLeft: 8}}\r\n\t\t\t\t\t\tonChange={() => this.setState({inputChange:true,selectedServiceGroupName:this.refs.serviceGroupName.value})}>\r\n\t\t\t\t\t\t{serviceGroupOpts}\r\n\t\t\t\t\t</select>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n\t\t\t<tr>\r\n              <th>DAG ID\r\n                  {/* <span className=\"font_gray\">(한글,영문 최대 20자)</span> */}\r\n                  <span className=\"necessary\">*</span></th>\r\n              <td>\r\n                <div className=\"ipt_group\">\r\n                  <input ref=\"dagId\" type=\"text\" className=\"ipt_text\" placeholder=\"영문 최대 30자\" \r\n                    // onKeyDown={(e) => e.keyCode === 13 && !isNameChk ? this.onClickNameCheck() : console.log('isNameChked')}\r\n                      onChange={(e) => {this.onChangeDagId()}}\r\n                      maxLength=\"30\" defaultValue={modifyServiceInfo.dagId}/>\r\n                  {/* <a role=\"button\" className={\"btn btn_black btn_duplicate\" + (isNameChk ? ' success' : '')} onClick={(e) => {!isNameChk ? this.onClickNameCheck() : console.log('isNameChked')}}>{isNameChk ? '확인완료' : '중복확인'}</a> */}\r\n                </div>\r\n              </td>\r\n            </tr>\r\n\t\t\t<tr>\r\n              <th>Model<span className=\"necessary\">*</span></th>\r\n              <td>\r\n                <div className=\"ipt_group\">\r\n                    <label className=\"ipt_file\" for=\"iptFile\">\r\n                        <input ref=\"modelName\" type=\"text\" className=\"ipt_text file_text\" style={{width:431}}\r\n                            placeholder=\"모델을 선택해 주세요.\" defaultValue={modifyServiceInfo.modelName} disabled />\r\n                        <span className=\"btn btn_file\" onClick={() => this.onClickModelPop()}></span>\r\n                        <input type=\"button\" className=\"btn_clear\" style={{display: \"none\"}} />\r\n                    </label>\r\n                    {/* <input ref=\"modelName\" type=\"text\" className=\"ipt_text\" style={{width:\"calc(100% - 80px)\"}}\r\n                        placeholder=\"모델을 선택해 주세요.\" defaultValue={modifyServiceInfo.modelName} disabled/>\r\n\t\t\t\t\t<button className=\"btn btn_blue\" style={{height:32}} onClick={() => this.onClickModelPop()}>모델 선택</button> */}\r\n                    {modifyFlag\r\n                        ? <input ref=\"modelId\" type=\"hidden\" defaultValue={modifyServiceInfo.modelId}/>\r\n                        : <input ref=\"modelId\" type=\"hidden\"/>\r\n                    }\r\n                </div>\r\n              </td>\r\n            </tr>\r\n\t\t\t<tr>\r\n              <th>Cycle</th>\r\n              <td>\r\n                <div className=\"ipt_group\">\r\n\t\t\t\t\t<input ref=\"runCycle\" type=\"text\" className=\"ipt_text\" placeholder=\"* * * * *\" defaultValue={modifyServiceInfo.runCycle}\r\n\t\t\t\t\t\tonChange={(e) => this.setState({inputChange:true})}/>\r\n                </div>\r\n                {/* <div className=\"font_gray\">분[0-59] 시간[0-23] 일자[1-31] 월[1-12] 요일[0-6]</div>\r\n                <div className=\"font_gray\">(예) 20,30 23 * * 1 (매주 월요일 23시 20분,30분에 실행)</div> */}\r\n                <div className=\"font_gray\">※ 분[0-59] 시간[0-23] 일자[1-31] 월[1-12] 요일[0-6] </div>\r\n                <div className=\"font_gray\">※ None, @once, @hourly, @daily, @weekly, @monthly, @yearly</div>\r\n                <div className=\"font_gray\">※ <a href=\"https://airflow.apache.org/docs/1.10.1/scheduler.html#dag-runs\" rel=\"noopener noreferrer\" target=\"_blank\">{'Airflow Scheduling & Triggers'}</a></div>\r\n                <div className=\"font_gray\">※ <a href=\"https://en.wikipedia.org/wiki/Cron#CRON_expression\" rel=\"noopener noreferrer\" target=\"_blank\">CRON expression</a></div>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>Description</th>\r\n              <td style={{textAlign:\"right\"}}>\r\n\t\t\t\t  <textarea ref=\"serviceDesc\" rows=\"3\" cols=\"100\" maxlength=\"100\" onChange={(e) => this.onChangeDesc()} defaultValue={modifyServiceInfo.serviceDesc}></textarea>\r\n                  <span className=\"font_gray\" style={{paddingRight:5}}>(<span style={{color:\"#ff7272\"}}>{descLength}</span> / 100)</span>\r\n\t\t\t  </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <div className=\"popupBtnArea btn_area addbtnarea\"><p className=\"btn2\">\r\n            <button className=\"btn btn_white\" onClick={() => this.props.onClose()}>취소</button>\r\n            <button className=\"btn btn_black\" onClick={(e) => this.onClickReg()}>저장</button>\r\n        </p></div>\r\n      </div>;\r\n    }\r\n}\r\nexport default ServiceReg;","import React, {Component} from 'react';\r\nclass ServiceDetail extends Component {\r\n    render() {\r\n        const {selectionItem} = this.props;\r\n        console.log(selectionItem);\r\n        return <div className=\"table_type2\">\r\n        <table>\r\n          <colgroup>\r\n            <col style={{width:240}} />\r\n            <col style={{width:\"*\"}} />\r\n          </colgroup>\r\n          <tbody>\r\n            <tr>\r\n              <th>Service명</th>\r\n              <td>\r\n                <div className=\"ipt_group\">\r\n                    <span className=\"txt\">{selectionItem.serviceName}</span>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>Service Group</th>\r\n              <td>\r\n                <div className=\"ipt_group\">\r\n                    <span className=\"txt\">{selectionItem.serviceGroupName}</span>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>DAG ID</th>\r\n              <td>\r\n                <div className=\"ipt_group\">\r\n                    <span className=\"txt\">{selectionItem.dagId}</span>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>Model</th>\r\n              <td>\r\n                <div className=\"ipt_group\">\r\n                    <span className=\"txt\">{selectionItem.modelName}</span>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>Cycle</th>\r\n              <td>\r\n                <div className=\"ipt_group\">\r\n                    <span className=\"txt\">{selectionItem.runCycle}</span>\r\n                </div>\r\n                <div class=\"font_gray\">※ <a href=\"https://airflow.apache.org/docs/1.10.1/scheduler.html\" rel=\"noopener noreferrer\" target=\"_blank\">{'Airflow Scheduling & Triggers'}</a></div>\r\n                <div class=\"font_gray\">※ <a href=\"https://en.wikipedia.org/wiki/Cron#CRON_expression\" rel=\"noopener noreferrer\" target=\"_blank\">CRON expression</a></div>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>Description</th>\r\n              <td style={{textAlign:\"right\"}}>\r\n\t\t\t\t  <textarea ref=\"serviceDesc\" rows=\"3\" cols=\"100\" maxlength=\"100\" defaultValue={selectionItem.serviceDesc} disabled></textarea>\r\n\t\t\t  </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <div className=\"popupBtnArea btn_area addbtnarea\">\r\n            <button className=\"btn btn_white\" onClick={() => this.props.main.hidePopup(this.props.title)}>닫기</button>\r\n        </div>\r\n      </div>;\r\n    }\r\n}\r\nexport default ServiceDetail;","import React, {Component} from 'react';\r\nimport {ServiceService} from 'service';\r\nimport Grid from '@toast-ui/react-grid';\r\nimport TuiGrid from 'tui-grid';\r\nimport {Pagination, Msg, NameRenderer} from 'comp';\r\nimport Validation from 'comp/Validation';\r\nimport ServiceReg from 'service/ServiceReg';\r\nimport {AdminService} from 'admin';\r\nimport ModelPopCont from 'model/ModelPopCont';\r\nimport ServiceDetail from 'service/ServiceDetail';\r\n\r\n/**\r\n * 화면명 : 서비스 관리\r\n * 화면 경로 : 서비스 > 서비스 관리\r\n * 화면 코드 : MENU00301\r\n * 참고 : \r\n *      그리드 : https://nhn.github.io/tui.grid/latest/Grid\r\n */\r\nclass ServiceManager extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            gridData:[],\r\n            columns:[],\r\n            bodyHeight:200,\r\n            // selectionRowKey:-1,\r\n            // selectionColumName:'',\r\n            // selectionItem:{},\r\n            pagesPage:1,\r\n            pagesTotalCount:0,\r\n            pagesPerPage:5,\r\n            // showReg:false,\r\n            // showDetail:false,\r\n            modifyServiceInfo:undefined,\r\n            // modifyModelFiles:undefined\r\n            serviceGroupData:[],\r\n            schInfo:undefined\r\n        };\r\n        this.requestData = this.requestData.bind(this);\r\n        this.onResultList = this.onResultList.bind(this);\r\n        this.onClickPageItem = this.onClickPageItem.bind(this);\r\n        this.onClickReg = this.onClickReg.bind(this);\r\n        this.onCloseReg = this.onCloseReg.bind(this);\r\n        // this.onClickGrid = this.onClickGrid.bind(this);\r\n        // this.onDClickGrid = this.onDClickGrid.bind(this);\r\n        // this.onCloseDetail = this.onCloseDetail.bind(this);\r\n        this.onClickModify = this.onClickModify.bind(this);\r\n        this.onClickSch = this.onClickSch.bind(this);\r\n        this.onClickGridNameColumn = this.onClickGridNameColumn.bind(this);\r\n        this.onResultServiceGroupList = this.onResultServiceGroupList.bind(this);\r\n        this.onClickModelPop = this.onClickModelPop.bind(this);\r\n        this.onClickModelSelection = this.onClickModelSelection.bind(this);\r\n        this.onClickSchModelDel = this.onClickSchModelDel.bind(this);\r\n        this.onClickKill = this.onClickKill.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        TuiGrid.setLanguage('ko');\r\n        TuiGrid.applyTheme('clean'); // default, striped, clean\r\n        // console.log( document.getElementsByClassName('content')[0].clientHeight );\r\n        // console.log(\">>>>>>>>>>>>>>> is popup : \" + this.props.isPopup);\r\n        // this.setState({bodyHeight:document.getElementById('root').clientHeight - 580});\r\n        this.requestData(1);\r\n\r\n        // if (this.refs.grid && this.refs.grid.getInstance() && this.refs.grid.getInstance().el)\r\n        //     this.refs.grid.getInstance().el.addEventListener(\"dblclick\",this.onDClickGrid,false);\r\n\r\n        // 서비스 그룹\r\n        AdminService.serviceGroupList({},this.onResultServiceGroupList,(err) => Msg.error(err.message));\r\n    }\r\n    componentDidUpdate() { \r\n        // try {\r\n        //     if (this.refs.grid && this.refs.grid.getInstance() && this.refs.grid.getInstance().el)\r\n        //         this.refs.grid.getInstance().el.addEventListener(\"dblclick\",this.onDClickGrid,false);\r\n        // } catch (err) {\r\n        //     console.log(err);\r\n        // }\r\n    }\r\n    onResultServiceGroupList(res) {\r\n        if (res.result===\"ok\") {\r\n            this.setState({serviceGroupData:res.list});\r\n        } else if (res.result === \"fail\"){\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    /**\r\n\t * 페이지 클릭 이벤트 핸들러\r\n\t * @param {int} page \r\n\t */\r\n    onClickPageItem(page) {\r\n        // console.log(\"onclickpageitem : \" + page);\r\n        this.requestData(page);\r\n    }\r\n    requestData(page,schKeyword) {\r\n        const {schServiceGroup, modelId} = this.refs;\r\n        if (page === undefined) page = this.state.pagesPage;\r\n        this.props.main.showLoading();\r\n        const parm = {\r\n            page:page\r\n        };\r\n        // servicegroup\r\n        // console.log(this.refs.schServiceGroup.value);\r\n        if (schServiceGroup.value !== \"all\") {\r\n            parm.serviceGroupName = schServiceGroup.value;\r\n        }\r\n        // model\r\n        if (modelId.value !== undefined && modelId.value !== null && modelId.value !== \"\") {\r\n            parm.modelId = modelId.value;\r\n        }\r\n\r\n        if (schKeyword !== undefined) {\r\n            // Msg.info(\"필터전 : \" + schKeyword);\r\n            schKeyword = Validation.filterSchKeyword(schKeyword);\r\n            // Msg.info(\"필터후 : \" + schKeyword);\r\n            parm.schKey = schKeyword;\r\n        }\r\n        this.setState({schInfo:parm});\r\n        ServiceService.list(parm,this.onResultList,(err) => Msg.error(err.message));\r\n    }\r\n    onResultList(res) {\r\n        this.props.main.hideLoading();\r\n        // console.log(\"onresultlist\");\r\n        // console.log(res);\r\n        if (res.result===\"ok\") {\r\n            const pagesInfo = res.data;\r\n\t\t\t// console.log(pagesInfo);\r\n\t\t\tlet totalStatus = {};\r\n\t\t\tif (pagesInfo.totalStatus) totalStatus = pagesInfo.totalStatus;\r\n            const columns = [\r\n                {name:'serviceName',header:'Service Name', minWidth:100,\r\n                    renderer: { type: NameRenderer ,options: {\r\n                        listData:res.list,labelKey:\"serviceName\",\r\n                        onClickGridNameColumn:this.onClickGridNameColumn\r\n                    } }\r\n                }\r\n                // ,{name:'version',header:'버전', width:20,align:\"center\"}\r\n                ,{name:'serviceGroupName',header:'Service Group',width:100,align:\"center\"}\r\n                // ,{name:'dagId',header:'DAG ID',width:200}\r\n                ,{name:'dagId',header:'DAG ID', minWidth:200,\r\n                    renderer: { type: DagIdRenderer,options: {listData:res.list} }\r\n                }\r\n                ,{name:'modelName',header:'Model Name', minWidth:100}\r\n\t\t\t\t,{name:'state',header:'Status', width:20,align:\"center\",\r\n\t\t\t\t\trenderer: { type: StatusRenderer ,options: { listData:res.list } }\r\n\t\t\t\t}\r\n                ,{name:'runCycle',header:'Cycle',width:120,align:\"center\"}\r\n                ,{name:'kill',header:'Kill',width:100,align:\"center\",\r\n                    renderer: { type: LinkRenderer ,options: { listData:res.list,onClickKill:this.onClickKill } }\r\n                }\r\n            ];\r\n            this.setState({gridData:res.list,pagesPage:pagesInfo.page,pagesTotalCount:pagesInfo.totalCount,pagesPerPage:pagesInfo.pageCount,columns:columns,totalStatus:totalStatus});\r\n        } else if (res.result === \"fail\"){\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    /**\r\n\t * 랜더러 클릭 이벤트 핸들러\r\n\t * @param {Object} item 선택 Row 데이터\r\n\t * @param {MouseEvent} e 클릭 이벤트\r\n\t * @param {Object} props 랜더러 Options\r\n\t */\r\n    onClickGridNameColumn(item,e,props) {\r\n        try {\r\n            const {userInfo} = this.props.main.state;\r\n            // console.log(item);\r\n            // 관리자/등록자는 수정 팝업\r\n            if (userInfo.userPermission === \"ADMIN\" || (item.userId === userInfo.userId)) {\r\n                ServiceService.getServiceInfo( item.serviceId,(res) => {\r\n                    this.props.main.hideLoading();\r\n                    if (res.result === \"ok\") {\r\n                        this.onClickModify(res.data.serviceInfo);\r\n                        }\r\n                        else if (res.result === \"fail\") {\r\n                            Msg.error(res.message);\r\n                        }\r\n                },(e) => {console.log(e);this.props.main.hideLoading();} );\r\n            } else {\r\n                const popTitle = \"Service Info.\";\r\n                this.props.main.showPopup(\r\n                    popTitle,\r\n                    <ServiceDetail title={popTitle} main={this.props.main} selectionItem={item} onClose={(e) => this.props.main.hidePopup(popTitle)} />,\r\n                    {width:735, height:555},null,null\r\n                );\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    onClickReg() {\r\n        const {modifyServiceInfo} = this.state;\r\n        // this.setState({showReg:true});\r\n        const popTitle = \"Create Service\";\r\n        this.props.main.showPopup(\r\n            popTitle,\r\n            <ServiceReg title={popTitle} main={this.props.main} modifyFlag={modifyServiceInfo !== undefined} modifyServiceInfo={modifyServiceInfo} onClose={(e) => this.onCloseReg(popTitle)}/> ,\r\n\t\t\t{width:735, height:662, popupBtnAreaVisible:false},null,null\r\n        );\r\n    }\r\n    onCloseReg(title) {\r\n        this.requestData(this.state.pagesPage);\r\n        // this.setState({modifyServiceInfo:undefined});\r\n        this.props.main.hidePopup(title);\r\n    }\r\n    onClickModelPop() {\r\n\t\t// const {\r\n        //     modifyModelInfo, modifyModelFiles\r\n        // } = this.state;\r\n        // this.setState({showReg:true});\r\n        const popTitle = \"Model Selection\";\r\n        this.props.main.showPopup(\r\n            popTitle,\r\n            <ModelPopCont title={popTitle} main={this.props.main} onClose={(e) => this.props.main.hidePopup(popTitle)} onClickSelection={this.onClickModelSelection}/> ,\r\n            {width:700, height:542, okLabel:\"선택\", popupBtnAreaVisible:false},null,null\r\n        );\r\n    }\r\n    onClickModelSelection(item) {\r\n        // console.log(item);\r\n        this.refs.modelName.value = item.modelName;\r\n        this.refs.modelId.value = item.modelId;\r\n    }\r\n    onClickSchModelDel() {\r\n        this.refs.modelName.value = \"\";\r\n        this.refs.modelId.value = \"\";\r\n    }\r\n    /**\r\n\t * 검색 클릭 핸들러\r\n\t */\r\n    onClickSch() {\r\n        this.requestData(this.state.pagesPage, this.refs.schKey.value );\r\n    }\r\n    onClickModify(serviceInfo) {\r\n        const popTitle = \"Service Modify\";\r\n        this.props.main.showPopup(\r\n            popTitle,\r\n            <ServiceReg title={popTitle} main={this.props.main} modifyFlag={serviceInfo !== undefined} modifyServiceInfo={serviceInfo} onClose={(e) => this.onCloseReg(popTitle)}/> ,\r\n            {width:735, height:719, popupBtnAreaVisible:false},null,null\r\n        );\r\n    }\r\n    // onCloseReg(title) {\r\n    //     this.requestData(this.state.pagesPage);\r\n    //     this.setState({modifyModelInfo:undefined, modifyModelFiles:undefined});\r\n    //     this.props.main.hidePopup(title);\r\n    // }\r\n    onClickKill(item) {\r\n        // ServiceService.list(parm,this.onResultList,(err) => Msg.error(err.message));\r\n        ServiceService.kill(item.serviceId,this.onResultKill,(err) => Msg.error(err.message));\r\n    }\r\n    onResultKill(res) {\r\n        // console.log(res);\r\n        Msg.ok(res);\r\n    }\r\n    render() {\r\n        let {\r\n            gridData, bodyHeight, columns, \r\n            pagesPage, pagesTotalCount, pagesPerPage,\r\n            serviceGroupData,schInfo,totalStatus\r\n        } = this.state;\r\n\t\tconst {role} = this.props.main.state;\r\n\t\tif (totalStatus === undefined) totalStatus = {};\r\n\t\t// console.log( totalStatus );\r\n\t\t// for (let s in totalStatus) {\r\n\t\t// \tif (s !== \"running\") {\r\n\t\t// \t\tif (totalStatus.summUnscheduled === undefined) totalStatus.summUnscheduled = 0;\r\n\t\t// \t\ttotalStatus.summUnscheduled += 1;\r\n\t\t// \t}\r\n\t\t// \t// running\r\n\t\t// \t// summStandby\r\n\t\t// \t// summUnscheduled\r\n\t\t// }\r\n        if (schInfo === undefined) schInfo = {};\r\n        // console.log(serviceGroupData);\r\n        let serviceGroupOpts = [<option value=\"all\">All</option>];\r\n        for (let i=0; i<serviceGroupData.length; i++) {\r\n            // if (selectedServiceGroupName === serviceGroupData[i].serviceGroupName)\r\n                serviceGroupOpts.push(\r\n                    <option value={serviceGroupData[i].serviceGroupName} selected={schInfo.serviceGroupName === serviceGroupData[i].serviceGroupName} key={Math.random()}>{serviceGroupData[i].serviceGroupName}</option>\r\n                );\r\n            // else\r\n            //     serviceGroupOpts.push(\r\n            //         <option value={serviceGroupData[i].serviceGroupName} key={Math.random()}>{serviceGroupData[i].serviceGroupName}</option>\r\n            //     );\r\n        }\r\n        // 등록 버튼 스타일\r\n        let schSty = {};\r\n        if (role !== \"ADMIN\") {\r\n            schSty.backgroundColor = \"#a2a2a2\";\r\n            schSty.border=\"none\";\r\n            schSty.cursor=\"auto\";\r\n        }\r\n        return <div className=\"page_layout\">\r\n\r\n        {/* <MainSubMenu /> */}\r\n  \r\n        <div className=\"layout_contents\">\r\n          <div className=\"content_list model_aid_list table_type1\">\r\n  \r\n            <div className=\"content_title\">\r\n              <h3 className=\"tit\">Service Management</h3>\r\n            </div>\r\n            <a href=\"http://61.97.187.199:8080/home\" rel=\"noopener noreferrer\" className=\"airflow_btn\" target=\"_blank\"></a>\r\n            <div className=\"search_condition\">\r\n                <div className=\"ipt_group search_basis search_basis2\"><div class=\"group_center\">\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<span className=\"tit\">Service Group</span>\r\n\t\t\t\t\t\t<select ref=\"schServiceGroup\" className=\"ml5\" style={{float:\"left\",width: 100,height: 32,marginLeft: 10,outline:\"none\",border:\"1px solid #CECECE\"}}>\r\n\t\t\t\t\t\t\t{serviceGroupOpts}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className=\"\">\r\n\t\t\t\t\t\t<span className=\"tit float_left\">Model</span> \r\n\t\t\t\t\t\t<div className=\"ipt_searchpop\">\r\n\t\t\t\t\t\t\t<input ref=\"modelName\" type=\"text\" className=\"ipt_text ml5\" style={{width:201}} disabled/>\r\n\t\t\t\t\t\t\t<input ref=\"modelId\" type=\"hidden\" defaultValue={schInfo.modelId}/>\r\n\t\t\t\t\t\t\t<button className=\"btn btn_white\" style={{width: 30,marginLeft: -6,border: \"1px solid #CECECE\",borderLeft: \"none\"}} onClick={() => this.onClickSchModelDel()}>X</button>\r\n\t\t\t\t\t\t\t<span className=\"btn btn_file\" onClick={() => this.onClickModelPop()}></span>\r\n\t\t\t\t\t\t</div>                \r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<span className=\"tit\">Service Name / ID</span> \r\n\t\t\t\t\t\t<input ref=\"schKey\" type=\"text\" className=\"ipt_text ml5\" style={{width:110}} defaultValue={schInfo.schKey} />\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<a role=\"button\" className=\"btn btn_black\" onClick={() => this.onClickSch()}>검색</a>\r\n                    </div>\r\n              </div>\r\n                <a role=\"button\" className=\"btn btn_add btn_blue\" style={schSty}\r\n                    onClick={() => {role !== \"ADMIN\" ? console.log(role) : this.onClickReg()}} ></a>\r\n            </div>\r\n\r\n\t\t\t<div className=\"status_guide\">\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li><span className=\"staus staus_running\"></span> Running <b>{totalStatus.running === undefined ? 0 : totalStatus.running}</b></li>\r\n\t\t\t\t\t<li><span className=\"staus staus_standby\"></span> Standby <b>{totalStatus.standby === undefined ? 0 : totalStatus.standby}</b></li>\r\n\t\t\t\t\t<li><span className=\"staus staus_unscheduled\"></span> Unscheduled <b>{totalStatus.unscheduled === undefined ? 0 : totalStatus.unscheduled}</b></li>\r\n\t\t\t\t\t{/* <li style={{paddingLeft: 11}}><span>Total : {common.displNum(pagesTotalCount)}</span></li> */}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n            <Grid ref={'grid'}\r\n                data={gridData} columnOptions={{resizable: true}}\r\n                columns={columns}\r\n                scrollX={false} scrollY={false}\r\n                // bodyHeight={bodyHeight}\r\n            />\r\n            <div className=\"gridControlArea btn_area\">\r\n                {/* <button className=\"btn btn_black gridControlBtn\" onClick={this.onClickDel}>삭제</button> */}\r\n                {/* <div></div> */}\r\n                <Pagination ref={'page'}\r\n                                page={pagesPage}\r\n                                totalCount={pagesTotalCount}\r\n                                perPage={pagesPerPage}\r\n                                onClickItem={this.onClickPageItem}/>\r\n                {/* {role === \"ADMIN\" ? <button className=\"btn btn_black gridControlBtn\" onClick={this.onClickReg}>등록</button> : null} */}\r\n            </div>\r\n    \r\n          </div>\r\n        </div>\r\n      </div>;\r\n    }\r\n}\r\nclass DagIdRenderer {\r\n    constructor(props) {\r\n        // <div className=\"tui-grid-cell-content\">model file ver test</div>\r\n        const { listData } = props.columnInfo.renderer.options;\r\n        const el = document.createElement('div');\r\n        el.className = \"tui-grid-cell-content\";\r\n        let item = undefined;\r\n        if (listData && listData.length > 0)\r\n        item = listData[props.rowKey];\r\n        el.innerText = item[\"dagId\"];\r\n        el.title = item[\"serviceId\"];\r\n\r\n        // // el.className = \"button basefont btn btn-info btn-sm\";\r\n        // const { listData, onClickGridNameColumn,labelKey } = props.columnInfo.renderer.options;\r\n        // let item = undefined;\r\n        // if (listData && listData.length > 0)\r\n        // item = listData[props.rowKey];\r\n        // if (item === undefined) item = {};\r\n        // el.className=\"nameLink\";\r\n        // el.title=item[labelKey];\r\n        // el.innerText = item[labelKey];\r\n        // el.href=\"#\";\r\n        // el.addEventListener(\"click\",(e) => onClickGridNameColumn(item,e,props));\r\n\r\n        this.el = el;\r\n    }\r\n    getElement() {\r\n        return this.el;\r\n    }\r\n}\r\n\r\nclass LinkRenderer {\r\n    constructor(props) {\r\n        const { onClickKill, listData } = props.columnInfo.renderer.options;\r\n        let item = undefined;\r\n        if (listData && listData.length > 0)\r\n        item = listData[props.rowKey];\r\n        if (item === undefined) item = {};\r\n        // console.log( item.evaluationStatus );\r\n\t\tlet el = document.createElement('a');\r\n\t\tel.role = \"button\";\r\n\t\tel.className = item.state === 'running' \r\n\t\t\t? \"table_btn btn_lineorange btn_resource\" \r\n\t\t\t: \"table_btn btn_disable btn_resource\";\r\n\t\tel.innerText = \"KILL\";\r\n        el.title=\"KILL\";\r\n        if (item.state === 'running')\r\n            el.addEventListener(\"click\",(e) => onClickKill(item,e,props));\r\n        this.el = el;\r\n    }\r\n    getElement() {\r\n        return this.el;\r\n    }\r\n}\r\n\r\n\r\nclass StatusRenderer {\r\n    constructor(props) {\r\n        const { onClickTestReq, listData } = props.columnInfo.renderer.options;\r\n        let item = undefined;\r\n        if (listData && listData.length > 0)\r\n        item = listData[props.rowKey];\r\n        if (item === undefined) item = {};\r\n\t\tlet el = document.createElement('span');\r\n\t\tif (item.state === \"running\") {\r\n\t\t\tel.className = \"staus staus_running\";\r\n\t\t} else {\r\n\t\t\tif (item.runCycle === \"None\" || item.runCycle === \"\" || item.runCycle === undefined  || item.runCycle === null\r\n\t\t\t\t|| item.state === undefined  || item.state === null) {\r\n\t\t\t\tif ((item.runCycle !== null && item.runCycle.indexOf(\"@\") > -1) || (item.runCycle !== null && item.runCycle.split(\" \").length === 5))\r\n\t\t\t\t\tel.className = \"staus staus_standby\";\r\n\t\t\t\telse\r\n\t\t\t\t\tel.className = \"staus staus_unscheduled\";\r\n\t\t\t} else {\r\n\t\t\t\tel.className = \"staus staus_standby\";\r\n\t\t\t}\r\n\t\t}\r\n        this.el = el;\r\n    }\r\n    getElement() {\r\n        return this.el;\r\n    }\r\n}\r\nexport default ServiceManager;","import React, {Component} from 'react';\r\nimport { Msg } from 'comp';\r\nimport ServiceService from './ServiceService';\r\nimport {AdminService} from 'admin';\r\n\r\n// import UploadService from 'comp/file/services/upload-files.service';\r\n// import ModelFileItem from './ModelFileItem';\r\n/**\r\n * 화면명 : Service 이력 상세\r\n * 화면 경로 : Service > Service 관리 > Service 상세\r\n * 화면 코드 : \r\n * 참고 : Service 관리 화면에서 사용하는 등록 화면\r\n */\r\nclass ServiceDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            serviceInfo:undefined,\r\n            resourceGroupData:[]\r\n        };\r\n        this.onResultInfo = this.onResultInfo.bind(this);\r\n        this.onResultResourceGroupList = this.onResultResourceGroupList.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.props.main.showLoading();\r\n        ServiceService.getServiceHistInfo( this.props.selectionItem,this.onResultInfo,(e) => this.props.main.hideLoading() );\r\n        // 자원 그룹 할당\r\n        AdminService.resourceGroupList({},this.onResultResourceGroupList,(err) => Msg.error(err.message));\r\n    }\r\n    onResultInfo(res) {\r\n        this.props.main.hideLoading();\r\n        // console.log( res.data );\r\n        if (res.result === \"ok\") {\r\n            this.setState({serviceInfo:res.data.serviceInfo});\r\n        }\r\n        else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    onResultResourceGroupList(res) {\r\n        console.log(res);\r\n        if (res.result===\"ok\") {\r\n            this.setState({resourceGroupData:res.list});\r\n        } else if (res.result === \"fail\"){\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {serviceInfo,resourceGroupData} = this.state;\r\n        if (serviceInfo === undefined) serviceInfo = {};\r\n        let resourceGroupOpts = [];\r\n        for (let i=0; i<resourceGroupData.length; i++) {\r\n            if (serviceInfo.resourceGroupId === resourceGroupData[i].resourceGroupId)\r\n                resourceGroupOpts.push(\r\n                    <option value={resourceGroupData[i].resourceGroupId} key={Math.random()} selected>{resourceGroupData[i].resourceGroupName}</option>\r\n                );\r\n            else\r\n                resourceGroupOpts.push(\r\n                    <option value={resourceGroupData[i].resourceGroupId} key={Math.random()}>{resourceGroupData[i].resourceGroupName}</option>\r\n                );\r\n        }\r\n        return <div className=\"subMain\"><div className={'content'}>\r\n            <span className={'title'}>● Service 상세</span>\r\n            <form ref={'form'}>\r\n                <div className=\"form-group row\">\r\n                    <label for=\"inputName\" className=\"col-sm-2 col-form-label \">Service명</label>\r\n                    <div className=\"col-sm-10 input-group\">\r\n                        <input type=\"text\" className={\"form-control\"} id=\"inputName\"\r\n                            maxLength=\"20\" defaultValue={serviceInfo.serviceName}\r\n                        disabled />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label for=\"inputName\" className=\"col-sm-2 col-form-label\">버전</label>\r\n                    <div className=\"col-sm-10 input-group\">\r\n                        <input type=\"text\" className={\"form-control\"} id=\"inputName\" value={serviceInfo.version} disabled/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label for=\"inputName\" className=\"col-sm-2 col-form-label \">모델</label>\r\n                    <div className=\"col-sm-10 input-group\">\r\n                        <input className=\"form-control\" defaultValue={serviceInfo.modelName} disabled/>\r\n                </div></div>\r\n                \r\n                {/* <div className=\"form-group row\">\r\n                    <label for=\"inputName\" className=\"col-sm-2 col-form-label \">데이터</label>\r\n                    <div className=\"col-sm-10 input-group\">\r\n                        <div className=\"col-sm-10 input-group\" style={{paddingTop: 5,paddingBottom: 5,paddingLeft: 0}}>\r\n\r\n\r\n                        <div className=\"col-md-6 input-group\" style={{alignItems: \"center\"}}>\r\n                        <label style={{width:100,paddingTop: 6,paddingRight: 13}}>지역 선택</label>\r\n                        <select className=\"form-control\" disabled><option value=\"1\">1</option></select>\r\n                        </div>\r\n                        <div className=\"col-md-6 input-group\">\r\n                        <label style={{paddingTop: 6,paddingRight: 13}}>건물 선택</label>\r\n                        <select className=\"form-control\" disabled><option value=\"1\">1</option></select>\r\n                        </div>\r\n                        <div className=\"col-md-12 input-group\" style={{alignItems: \"center\"}}>\r\n                        <label style={{width:100,paddingTop: 6,paddingRight: 13}}>데이터 기간</label>\r\n                        <button className=\"btn btn-secondary btn-sm\" style={{width: 62}} disabled>1달</button>\r\n\r\n                        </div>\r\n\r\n                        </div>\r\n\r\n                </div></div> */}\r\n                \r\n                <div className=\"form-group row\">\r\n                    <label for=\"inputName\" className=\"col-sm-2 col-form-label\">자원 그룹 할당</label>\r\n                    <div className=\"col-sm-10 input-group\">\r\n                        <select ref=\"resourceGroupId\" className=\"form-control\" disabled>\r\n                            {resourceGroupOpts}\r\n                        </select>\r\n                </div></div>\r\n                <div className=\"form-group row\">\r\n                    <label for=\"inputName\" className=\"col-sm-2 col-form-label\">AirFlow 실행</label>\r\n                    <div className=\"col-sm-10 input-group\">\r\n                        <input ref=\"runCycle\" className=\"form-control\" defaultValue={serviceInfo.runCycle} disabled/>\r\n                </div></div>\r\n                <div className={'invaliderrmsg info'}>분[0-59] 시간[0-23] 일자[1-31] 월[1-12] 요일[0-6]</div>\r\n                <div className={'invaliderrmsg info'}>(예) 20,30 23 * * 1 (매주 월요일 23시 20분,30분에 실행)</div>\r\n            </form>\r\n            <div className=\"controlArea\">\r\n                <button className=\"btn btn-secondary btn-sm controlBtn\" onClick={this.props.onClose}>목록</button>\r\n                {this.props.modifyButtonVisible === undefined || this.props.modifyButtonVisible\r\n                    ? <button className=\"btn btn-success btn-sm controlBtn leftGap\" onClick={(e) => this.props.onClickModify(serviceInfo)}>수정</button>\r\n                    : null}\r\n            </div>\r\n\r\n            </div></div>;\r\n    }\r\n}\r\nexport default ServiceDetail;","import React, {Component} from 'react';\r\nimport { Dashboard } from 'dashboard';\r\nimport { MenuCode, SchIdPw } from 'main';\r\nimport { ModelManager } from 'model';\r\nimport { ServiceManager } from 'service';\r\nimport { HistoryServiceExec,HistoryModelReg,HistoryUserLogin,HistoryScaleInOut,ScaleInOutManager,ServiceGroupManager,CommonCodeMgr,UserManager} from 'admin';\r\n\r\n/**\r\n * 메인 컨텐츠 화면 정의\r\n */\r\nclass MainContent extends Component {\r\n    /**\r\n     * 메인 컨텐츠 반환\r\n     * @param {String} menuCode 메뉴 코드\r\n     * @param {Main} main 메인\r\n     * @return {JSX} 메인 컨텐츠\r\n     */\r\n    getContent(menuCode,main) {\r\n        let content;\r\n        switch (menuCode) {\r\n            case MenuCode.LOGIN_SCHIDPW:\r\n                content = <SchIdPw main={main}/>;\r\n                break;\r\n            case MenuCode.DASHBOARD:\r\n                content = <Dashboard main={main} />;\r\n                break;\r\n\r\n            /** MODEL **/\r\n            case MenuCode.MODEL_MANAGER:                // 모델관리\r\n                content = <ModelManager main={main} menuCode={menuCode} onMenuChange={main.onMenuChange}/>;\r\n                break;\r\n                \r\n            /** SERVICE **/\r\n            case MenuCode.SERVICE_MANAGER:             // Service 관리\r\n                content = <ServiceManager main={main} menuCode={menuCode} onMenuChange={main.onMenuChange}/>;\r\n                break;\r\n            case MenuCode.ADMIN_HIST_SERVICEEXEC:       // 이력 조회 > Service 실행결과 이력\r\n                content = <HistoryServiceExec main={main} menuCode={menuCode} onMenuChange={main.onMenuChange}/>;\r\n                break;\r\n            \r\n            /** ADMIN **/\r\n\t\t\tcase MenuCode.ADMIN_USERMGR:                // 사용자 관리\r\n\t\t\t\tcontent = <UserManager main={main} menuCode={menuCode} onMenuChange={main.onMenuChange}/>;\r\n\t\t\t\tbreak;\r\n\t\t\tcase MenuCode.ADMIN_HIST_LOGIN:        \t\t// 이력 조회 > 사용자 로그인 이력\r\n\t\t\t\tcontent = <HistoryUserLogin main={main} menuCode={menuCode} onMenuChange={main.onMenuChange}/>;\r\n\t\t\t\tbreak;\r\n\t\t\tcase MenuCode.ADMIN_HIST_MODELREG:          // 이력 조회 > Model 등록 이력\r\n\t\t\t\tcontent = <HistoryModelReg main={main} menuCode={menuCode} onMenuChange={main.onMenuChange}/>;\r\n\t\t\t\tbreak;\r\n\t\t\tcase MenuCode.ADMIN_HIST_SCALEINOUT:         // Resource 이력\r\n\t\t\t\tcontent = <HistoryScaleInOut main={main} menuCode={menuCode} onMenuChange={main.onMenuChange}/>;\r\n\t\t\t\tbreak;\r\n\t\t\tcase MenuCode.ADMIN_SACLEINOUTMGR:          // Scale In/Out 관리\r\n\t\t\t\tcontent = <ScaleInOutManager main={main} menuCode={menuCode} onMenuChange={main.onMenuChange}/>;\r\n\t\t\t\tbreak;\r\n\t\t\tcase MenuCode.ADMIN_SERVICEGROUP:            // 서비스 그룹 관리\r\n\t\t\t\tcontent = <ServiceGroupManager main={main} menuCode={menuCode} onMenuChange={main.onMenuChange}/>;\r\n\t\t\t\tbreak;\r\n\t\t\tcase MenuCode.ADMIN_COMMONCODE:            \t// 공통 코드 관리\r\n\t\t\t\tcontent = <CommonCodeMgr main={main} menuCode={menuCode} onMenuChange={main.onMenuChange}/>;\r\n\t\t\t\tbreak;\r\n            default:\r\n                content = <div>{menuCode}</div>;\r\n        }\r\n        return content;\r\n    }\r\n}\r\n\r\nexport default new MainContent();","import React, {Component} from 'react';\r\n/**\r\n * 화면명 : 메인 화면 경로\r\n * 화면 경로 : 없음.\r\n * 화면 코드 : 없음.\r\n * 참고 : \r\n */\r\nclass MainPath extends Component {\r\n    render() {\r\n        const {paths, onClick} = this.props;\r\n        let pathcomps = [];\r\n        for (let i=0; i<this.props.paths.length; i++) {\r\n            if (i > 0) pathcomps.push(<label>&gt;</label>);\r\n            pathcomps.push( <PathItem name={paths[i].name} menuCode={paths[i].menuCode} onClick={onClick} key={Math.random()}/> );\r\n        }\r\n        return <div className=\"breadcrumb\"><p className=\"inner\">\r\n            {pathcomps}\r\n        </p></div>;\r\n    }\r\n}\r\nclass PathItem extends Component {\r\n    render() {\r\n        return <span>{this.props.name}</span>\r\n    }\r\n}\r\nexport default MainPath;","import React, {Component} from 'react';\r\nimport { AdminService } from 'admin';\r\nimport Validation from 'comp/Validation';\r\nimport { Msg } from 'comp';\r\n/**\r\n * 화면명 : 아이디 / 비밀번호 찾기\r\n * 화면 경로 :\r\n * 화면 코드 :\r\n * 참고 : \r\n */\r\nclass SchIdPw extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tabFocus:\"schId\"\r\n        };\r\n        this.tabChange = this.tabChange.bind(this);\r\n        this.onClickSchId = this.onClickSchId.bind(this);\r\n        this.onClickSchPw = this.onClickSchPw.bind(this);\r\n        this.validationSchId = this.validationSchId.bind(this);\r\n        this.validationSchPw = this.validationSchPw.bind(this);\r\n        this.onResultSearchId = this.onResultSearchId.bind(this);\r\n        this.onResultSearchPw = this.onResultSearchPw.bind(this);\r\n    }\r\n\r\n/**************************************************************************/\r\n/* 기능 */\r\n/**************************************************************************/\r\n    /**\r\n     * 탭 변경\r\n     * @param {String} type 탭 구분 (schId|schPw)\r\n     */\r\n    tabChange(type) {\r\n        this.setState({tabFocus:type});\r\n    }\r\n    /**\r\n     * 아이디 찾기 요청\r\n     */\r\n    onClickSchId() {\r\n        if (!this.validationSchId()) return;\r\n        let parm = {};\r\n        parm.userName = this.refs.userName.value;\r\n        parm.userEmail = this.refs.schIdEmail.value;\r\n        // console.log(\"searchId parameter >> \");\r\n        // console.log(parm);\r\n        AdminService.searchId(parm,this.onResultSearchId,(e) => console.log(e));\r\n    }\r\n    /**\r\n     * 비밀번호 찾기 요청\r\n     */\r\n    onClickSchPw() {\r\n        if (!this.validationSchPw()) return;\r\n        let parm = {};\r\n        parm.userId = this.refs.userId.value;\r\n        parm.userEmail = this.refs.schPwEmail.value;\r\n        // console.log(\"searchPw parameter >> \");\r\n        // console.log(parm);\r\n        AdminService.searchPw(parm,this.onResultSearchPw,(e) => console.log(e));\r\n    }\r\n    /**\r\n     * 아이디 찾기 Validation Check\r\n     * @return {boolean} 가능여부\r\n     */\r\n    validationSchId() {\r\n        //userName\r\n        //schIdEmail\r\n        let chkVal = this.refs.userName.value;\r\n        if (chkVal.length < 2) {\r\n            Msg.error(\"이름을 입력해 주세요.\");\r\n            this.refs.userName.focus();\r\n            return false;\r\n        }\r\n        chkVal = this.refs.schIdEmail.value;\r\n        let valiRes = Validation.chkEmail(chkVal);\r\n        if (!valiRes.result) {\r\n            Msg.error(valiRes.errMsg);\r\n            this.refs.schIdEmail.focus();\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * 비밀번호 찾기 Validation Check\r\n     * @return {boolean} 가능여부\r\n     */\r\n    validationSchPw() {\r\n        //userId\r\n        //schPwEmail\r\n        let chkVal = this.refs.userId.value;\r\n        if (chkVal.length < 2) {\r\n            Msg.error(\"아이디를 입력해 주세요.\");\r\n            this.refs.userId.focus();\r\n            return false;\r\n        }\r\n        chkVal = this.refs.schPwEmail.value;\r\n        let valiRes = Validation.chkEmail(chkVal);\r\n        if (!valiRes.result) {\r\n            Msg.error(valiRes.errMsg);\r\n            this.refs.schPwEmail.focus();\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n/**************************************************************************/\r\n/* 핸들러 */\r\n/**************************************************************************/\r\n    /**\r\n     * 아이디 찾기 결과 핸들러\r\n     * @param {Object} res {result:ok|fail,data:{userId},message:결과 메세지}\r\n     */\r\n    onResultSearchId(res) {\r\n        console.log(res);\r\n        if (res.result === \"ok\") {\r\n            Msg.ok(\"아이디는 \" + res.data.userId + \"입니다.\");\r\n        }\r\n        else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    /**\r\n     * 비밀번호 찾기 결과 핸들러\r\n     * @param {Object} res {result:ok|fail,message:결과 메세지}\r\n     */\r\n    onResultSearchPw(res) {\r\n        console.log(res);\r\n        if (res.result === \"ok\") {\r\n            Msg.ok(res.message);\r\n        }\r\n        else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const {tabFocus} = this.state;\r\n        return <div className=\"schIdPw mainContent\"><div className={'container'}>\r\n            <div className=\"tab\">\r\n                <div className={\"col-md-6 item\" + (tabFocus === \"schId\" ? \" active\" : \"\")} onClick={() => (tabFocus !== \"schId\" ? this.tabChange('schId') : null)}>ID 찾기</div>\r\n                <div className={\"col-md-6 item\" + (tabFocus === \"schPw\" ? \" active\" : \"\")} onClick={() => (tabFocus !== \"schPw\" ? this.tabChange('schPw') : null)}>Password 찾기</div>\r\n            </div>\r\n\r\n            {tabFocus === \"schId\"\r\n                ? <div className=\"form\">\r\n                    <div className=\"form\">\r\n                        <input ref=\"userName\" className=\"form-control\" placeholder=\"이름\" />\r\n                    </div>\r\n                    <div className=\"form\">\r\n                        <input ref=\"schIdEmail\" className=\"form-control\" placeholder=\"이메일\"/>\r\n                    </div>\r\n                    <div className=\"form\">\r\n                        <button className=\"btn btn-success btn-sm\" onClick={() => this.onClickSchId()}>아이디 찾기</button>\r\n                    </div>\r\n                </div>\r\n            : null}\r\n            {tabFocus === \"schPw\"\r\n                ? <div className=\"form\">\r\n                <div className=\"form\">\r\n                    <input ref=\"userId\" className=\"form-control\" placeholder=\"아이디\" />\r\n                </div>\r\n                <div className=\"form\">\r\n                    <input ref=\"schPwEmail\" className=\"form-control\" placeholder=\"이메일\"/>\r\n                </div>\r\n                <div className=\"form\">\r\n                    <button className=\"btn btn-success btn-sm\" onClick={() => this.onClickSchPw()}>Password 재설정</button>\r\n                </div>\r\n            </div>\r\n        : null}\r\n        </div></div>;\r\n    }\r\n}\r\nexport default SchIdPw;","import React, {Component} from 'react';\r\nimport {MenuCode} from 'main';\r\n/**\r\n * 화면명 : 로고\r\n * 화면 경로 : 없음.\r\n * 화면 코드 : 없음.\r\n * 참고 : \r\n */\r\nclass Logo extends Component {\r\n    render() {\r\n        const {onMenuChange} = this.props;\r\n        return <div className=\"brand\">\r\n            <h1 className=\"logo\"><a onClick={() => onMenuChange(MenuCode.DASHBOARD)}><span className=\"hide\">ESP Energy Intelligence</span></a></h1>\r\n        </div>;\r\n    }\r\n}\r\nexport default Logo;","import React, {Component} from 'react';\r\nimport { Msg, Validation } from 'comp';\r\nimport { MainService } from 'main';\r\nimport { makeParam } from 'comp/common';\r\n/**\r\n * 화면명 : 비밀번호 변경\r\n * 화면 경로 : 우측 상단 사용자 서브 메뉴에 비밀번호 변경\r\n * 화면 코드 : 없음.\r\n * 참고 : \r\n */\r\nclass ChangeUserPassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClickReg = this.onClickReg.bind(this);\r\n        this.onConfirmOk = this.onConfirmOk.bind(this);\r\n        this.onConfirmCancel = this.onConfirmCancel.bind(this);\r\n        this.validationCheck = this.validationCheck.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.refs.currpw.focus();\r\n    }\r\n\r\n/**************************************************************************/\r\n/* 기능 */\r\n/**************************************************************************/\r\n    /**\r\n     * 변경 클릭 이벤트 핸들러\r\n     */\r\n    onClickReg() {\r\n        if (!this.validationCheck()) return;\r\n        // 정말 저장하시겠습니까?\r\n        const popTitle = \"Change User Password Confirm\";\r\n        this.props.main.showPopup(\r\n            popTitle,\r\n            <div style={{textAlign: \"center\",fontSize: 17,paddingTop:4,paddingBottom: 21}}>정말 변경하시겠습니까?</div> ,\r\n            {width:432, height:171, headerVisiable:false},this.onConfirmOk,this.onConfirmCancel\r\n        );\r\n    }\r\n    \r\n    /**\r\n     * 변경전 값 체크\r\n     */\r\n    validationCheck() {\r\n        // 비밀번호\r\n        let chkVal = this.refs.currpw.value;\r\n        if (chkVal.length < 1) {\r\n            Msg.error(\"현재 비밀번호를 입력해 주세요.\");\r\n            return false;\r\n        }\r\n        chkVal = this.refs.pw.value;\r\n        if (chkVal.length < 1) {\r\n            Msg.error(\"변경할 비밀번호를 입력해 주세요.\");\r\n            return false;\r\n        }\r\n        let valiRes = Validation.chkPw(chkVal);\r\n        if (!valiRes.result) {\r\n            Msg.error(valiRes.errMsg);\r\n            return false;\r\n        }\r\n        let chkVal2 = this.refs.pwchk.value;\r\n        if (chkVal !== chkVal2) {\r\n            Msg.error(\"비밀번호가 동일하지 않습니다.\");\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    \r\n\r\n/**************************************************************************/\r\n/* 핸들러 */\r\n/**************************************************************************/\r\n    \r\n    /**\r\n     * 변경 확인\r\n     */\r\n    onConfirmOk() {\r\n        // Msg.info(\"ok\");\r\n        const parm = makeParam(this);\r\n        // console.log(parm);\r\n        parm.userId = this.props.main.state.userInfo.userId;\r\n        MainService.changeUserPw(parm,this.onResultChangePw,(e) => Msg.error(e.message));\r\n    }\r\n    /**\r\n     * 변경 결과 이벤트 핸들러\r\n     * @param {Object} res {result:ok|fail,message:결과 메세지}\r\n     */\r\n    onResultChangePw(res) {\r\n        if (res.result === \"ok\") {\r\n            Msg.ok(res.message);\r\n            this.props.onClose();\r\n        } else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    /**\r\n     * 변경 확인 취소\r\n     */\r\n    onConfirmCancel() {\r\n        // Msg.info(\"cancel\");\r\n    }\r\n    render() {\r\n        return <div className=\"table_type2\">\r\n            <table>\r\n                <tbody>\r\n                <tr>\r\n                    <th>Password</th>\r\n                    <td>\r\n                    <div className=\"ipt_group\">\r\n                        <input type=\"password\" className=\"ipt_text\" ref=\"currpw\" placeholder=\"현재 비밀번호\"/>\r\n                        <input type=\"password\" className=\"ipt_text\" ref=\"pw\" placeholder=\"영문자,특수문자 조합해서 4자리에서 12자리\" style={{marginTop: 4}}/>\r\n                        <input type=\"password\" className=\"ipt_text\" ref=\"pwchk\" placeholder=\"확인\" style={{marginTop: 4}}/>\r\n                    </div>\r\n                    </td>\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n            <div className=\"popupBtnArea btn_area addbtnarea\"><p className=\"btn2\">\r\n                <button className=\"btn btn_white\" onClick={() => this.props.onClose()}>취소</button>\r\n                <button className=\"btn btn_black\" onClick={() => this.onClickReg()}>저장</button>\r\n            </p></div>\r\n        </div>;\r\n    }\r\n}\r\nexport default ChangeUserPassword;","import React, {Component} from 'react';\r\nimport { Loading,common, Msg, Confirm, SystemChecking, Modal, DeadServer, Popup, Message } from 'comp';\r\nimport { MenuCode, CookieNames, MainContent, MenuData, MainTop, Login, MainPath, CommonCode, MainService } from 'main';\r\nimport http from \"comp/http-common\";\r\n\r\n/**\r\n * 화면명 : 메인\r\n * 화면 경로 : 없음.\r\n * 화면 코드 : 없음.\r\n * 참고 : 화면 최상단\r\n */\r\nclass Main extends Component {\r\n    constructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tuserInfo:{},\r\n\t\t\tloading:false,\r\n\t\t\tcontent:null,\r\n\t\t\tmenuCode:'',\r\n\t\t\tlogin:false,\r\n\t\t\tsessionId:'',\r\n\t\t\trole:'',\r\n\t\t\tusername:'',\r\n\t\t\tpaths:[],\r\n\t\t\tcommonCode:[],\r\n\t\t\tpopup:false,\r\n\t\t\tmodal:false,\r\n\t\t\tallScreen:false,\r\n\t\t\tshowLogin:false,\r\n\t\t\tconfirm:false,\r\n\t\t\tconfirmTitle:undefined,\r\n\t\t\tconfirmMessage:undefined,\r\n\t\t\tconfirmOkfn:undefined,\r\n\t\t\tconfirmCancelFn:undefined,\r\n\t\t\tpopupIdx:[],\r\n\t\t\tpopups:{},\r\n\t\t\tpopupTitle:undefined,\r\n\t\t\tpopupContent:undefined,\r\n\t\t\tpopupOpts:undefined,\r\n\t\t\tpopupOkFn:undefined,\r\n\t\t\tpopupCancelFn:undefined,\r\n\t\t\tmessage:false,\r\n\t\t\tmessageMsg:\"\"\r\n\t\t}\r\n\t\tthis.onResultCommonCode = this.onResultCommonCode.bind(this);\r\n\t\tthis.showLoading = this.showLoading.bind(this);\r\n\t\tthis.hideLoading = this.hideLoading.bind(this);\r\n\t\tthis.onMenuChange = this.onMenuChange.bind(this);\r\n\t\tthis.getContent = this.getContent.bind(this);\r\n\t\tthis.onChkLogin = this.onChkLogin.bind(this);\r\n\t\tthis.onResultCommonCode = this.onResultCommonCode.bind(this);\r\n\t\tthis.onFail = this.onFail.bind(this);\r\n\t\tthis.hideLogin = this.hideLogin.bind(this);\r\n\r\n\t\tthis.showConfirm = this.showConfirm.bind(this);\r\n\t\tthis.hideConfirm = this.hideConfirm.bind(this);\r\n\t\tthis.showPopup = this.showPopup.bind(this);\r\n\t\tthis.hidePopup = this.hidePopup.bind(this);\r\n\t}\r\n    componentWillMount() {\r\n\t\tcommon.main = this;\r\n        // Spring Boot내에서 웹을 돌릴경우(.env.production REACT_APP_WAS_URL 주소 현재 사용안함)\r\n        // 웹 서버를 따로 돌릴경우 빼야함.(.env.production 설정에 REACT_APP_WAS_URL 주소로 호출)\r\n        if (process.env.NODE_ENV === 'production')\r\n            http.defaults.baseURL = \"\";\r\n    }\r\n    componentDidMount() {\r\n        window.onresize();\r\n        // 공통 코드 가져오기\r\n        MainService.commonCodeList(this.onResultCommonCode,this.onFail);\r\n    }\r\n\r\n/**************************************************************************/\r\n/* 기능 */\r\n/**************************************************************************/\r\n\t/**\r\n\t * 로딩 실행\r\n\t */\r\n\tshowLoading(modal) {\r\n      if (modal)\r\n          this.setState({loading:true,modal:modal});\r\n      else\r\n          this.setState({loading:true});\r\n\t}\r\n\t/**\r\n\t * 로딩 종료\r\n\t */\r\n\thideLoading() {\r\n\t\tthis.setState({loading:false,modal:false});\r\n\t}\r\n    /**\r\n     * 메뉴 변경\r\n     * @param {String} menuCode 메뉴 코드\r\n     * @param {boolean} unconditionality 강제실행여부(동일한 메뉴코드)\r\n     */\r\n\tonMenuChange(menuCode,unconditionality) {\r\n        if (!unconditionality && menuCode === this.state.menuCode) return;\r\n\r\n\t\tif (menuCode === MenuCode.LOGIN) {\r\n\t\t\tthis.setState({showLogin:true});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst content = this.getContent(menuCode);\r\n\t\t// const pathData = this.makePathData(menuCode);\r\n\t\tconst pathData = MenuData.getPaths(menuCode);\r\n\t\tcommon.setCookie(CookieNames.LAST_MENU_CODE,menuCode);\r\n\t\tthis.setState({content:content,menuCode:menuCode,paths:pathData});\r\n\t}\r\n\t/**\r\n\t * 메뉴 화면 반환\r\n\t * @param {String} menuCode 메뉴 코드\r\n\t */\r\n\tgetContent(menuCode) {\r\n\t\tconst content = MainContent.getContent(menuCode,this);\r\n\t\treturn content;\r\n\t}\r\n\t/**\r\n\t * 로그인 팝업 닫기\r\n\t */\r\n\thideLogin() {\r\n\t\tthis.setState({showLogin:false});\r\n\t}\r\n\r\n\t/**\r\n     * 확인 컴퍼넌트 실행\r\n     * @param {String} title 제목\r\n     * @param {String} message 메세지\r\n     * @param {Function} okFn 확인 콜백 함수\r\n     * @param {Function} cancelFn 취소 콜백 함수\r\n     */\r\n    showConfirm(title,message,okFn,cancelFn) {\r\n        this.setState({confirm:true,confirmTitle:title,confirmMessage:message,confirmOkfn:okFn,confirmCancelFn:cancelFn});\r\n    }\r\n    /**\r\n     * 확인 컴퍼넌트 종료\r\n     */\r\n    hideConfirm() {\r\n        this.setState({confirm:false,confirmTitle:undefined,confirmMessage:undefined,confirmOkfn:undefined,confirmCancelFn:undefined});\r\n\t}\r\n\t/**\r\n     * 공통 팝업 열기\r\n     * @param {String} title 팝업 타이틀 (여러 팝업 띄웠을때 플래그 역할을 한다.)\r\n     * @param {JSX} cont 컨텐츠 화면\r\n     * @param {Object} opts 옵션\r\n     * @param {Function} okFn 확인 콜백 함수\r\n     * @param {Function} closeFn 닫기 콜백 함수\r\n     */\r\n    showPopup(title,cont,opts,okFn,closeFn) {\r\n        let {popupIdx,popups} = this.state;\r\n        const popupOpt = {\r\n            title:title,\r\n            content:cont,\r\n            opts:opts,\r\n            okFn:okFn,\r\n            closeFn:closeFn\r\n\t\t};\r\n        popupIdx.push(title);\r\n        popups[title] = popupOpt;\r\n        this.setState({popup:true,popupIdx:popupIdx,popups:popups});\r\n        // this.setState({popup:true, modal:true, popupTitle:title, popupContent:cont, popupOpts:opts, popupOkFn:okFn, popupCloseFn:closeFn});\r\n    }\r\n    /**\r\n     * 해당 팝업 타이틀을 갖고있는 팝업 닫기\r\n\t * @param {String} title 팝업 타이틀\r\n     */\r\n    hidePopup(title) {\r\n        const {popups,popupIdx} = this.state;\r\n        let nPopups = {};\r\n        let nPopupIdx = [];\r\n        for (let i=0; i<popupIdx.length; i++) {\r\n            if (title !== popupIdx[i]) {\r\n                nPopups[popupIdx[i]] = popups[popupIdx[i]];\r\n                nPopupIdx.push(popupIdx[i]);\r\n            }\r\n        }\r\n        if (nPopupIdx.length < 1)\r\n            this.setState({popup:false,popups:{},popupIdx:[]});\r\n        else\r\n            this.setState({popups:nPopups,popupIdx:nPopupIdx});\r\n    }\r\n/**************************************************************************/\r\n/* 핸들러 */\r\n/**************************************************************************/\r\n\r\n    /**\r\n     * 공통 코드 결과 핸들러\r\n     * @param {Object} res {result:ok|fail,list:공통코드 리스트,message:결과 메세지}\r\n     */\r\n    onResultCommonCode(res) {\r\n        if (res.result === \"ok\") {\r\n            CommonCode.setData(res.list);\r\n\r\n            // 시스템 점검중 설정 확인\r\n            if (CommonCode.getValue(\"SYSTEM_CONFIG\",\"SYS_CHECKING\") === \"Y\") {\r\n                this.setState({allScreen:true,content:<SystemChecking />});\r\n            } else {\r\n                const setSessionId = common.getCookie(CookieNames.SESSION_ID);\r\n                MainService.chkLogin(setSessionId,this.onChkLogin,(err) => Msg.error(err.message));\r\n            }\r\n        } else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n            this.setState({content:<DeadServer />});\r\n        }\r\n    }\r\n    /**\r\n     * 요청 결과 실패 이벤트 핸들러\r\n     * @param {Error} err\r\n     */\r\n    onFail(err) {\r\n        // 웹만 살아있을경우(웹을 따로 돌릴경우) 서버가 죽어 있어 요청실패시 서버 통신 안된다는 메세지 화면 출력\r\n        if (err.message === 'Network Error') {\r\n            this.setState({content:<DeadServer />});\r\n        }\r\n    }\r\n    /**\r\n     * 로그인중 확인 결과 핸들러\r\n     * @param {Object} res {result:ok|fail,data:{userInfo:{userPermission,userName}},message:결과 메세지}\r\n     */\r\n    onChkLogin(res) {\r\n        // console.log(res);\r\n        if (res.result === \"ok\") {\r\n            let setSessionId = res.data.sessionId;\r\n            if (setSessionId && setSessionId.replace(/ /g,'') !== '') {\r\n                // console.log(res.data);\r\n                if (res.data && res.data.userInfo) {\r\n\t\t\t\t\tconst {userPermission, userId} = res.data.userInfo;\r\n\t\t\t\t\tthis.setState({login:true,sessionId:setSessionId,role:userPermission,username:userId,userInfo:res.data.userInfo});\r\n\t\t\t\t\tlet preMenuCode = common.getCookie(CookieNames.LAST_MENU_CODE);\r\n\t\t\t\t\tthis.onMenuChange(preMenuCode && (preMenuCode !== null || preMenuCode !== undefined) ? preMenuCode : MenuCode.SERVICE);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcommon.setCookie(CookieNames.SESSION_ID,\"\");\r\n\t\t\t\t\tcommon.setCookie(CookieNames.LAST_MENU_CODE,\"\");\r\n\t\t\t\t\tthis.onMenuChange(MenuCode.DASHBOARD);\r\n\t\t\t\t}\r\n\r\n            }\r\n        } else {\r\n            common.setCookie(CookieNames.SESSION_ID,\"\");\r\n            common.setCookie(CookieNames.LAST_MENU_CODE,\"\");\r\n            this.onMenuChange(MenuCode.DASHBOARD);\r\n        }\r\n\t}\r\n\t/**\r\n\t * Message\r\n\t * @param {String} msg message\r\n\t */\r\n\tmsg(msg) {\r\n\t\tthis.setState({message:true,messageMsg:msg,model:true});\r\n\t}\r\n    render() {\r\n\t\tconst {\r\n\t\t\tusername,\r\n\t\t\trole,\r\n\t\t\tpaths,\r\n\t\t\tcontent,\r\n\t\t\tloading,\r\n\t\t\tconfirm,\r\n\t\t\tconfirmTitle,\r\n\t\t\tconfirmMessage,\r\n\t\t\tconfirmOkfn,\r\n\t\t\tconfirmCancelFn,\r\n\t\t\tpopup,\r\n\t\t\tmodal,\r\n\t\t\tpopupIdx,\r\n\t\t\tpopups,\r\n\t\t\tallScreen,\r\n\t\t\tshowLogin,\r\n\t\t\tmessage,\r\n\t\t\tmessageMsg,\r\n\t\t\tmenuCode\r\n\t\t} = this.state;\r\n\r\n\t\tlet pops = [];\r\n\t\tlet popOpts;\r\n\t\tif (popup) {\r\n\t\t\tfor (let i=0; i<popupIdx.length; i++) {\r\n\t\t\t\tpopOpts = popups[popupIdx[i]];\r\n\t\t\t\tpops.push(\r\n\t\t\t\t\t<Popup onClose={() => this.hidePopup(popOpts.title)} \r\n\t\t\t\t\t\ttitle={popOpts.title}\r\n\t\t\t\t\t\tcontent={popOpts.content}\r\n\t\t\t\t\t\topts={popOpts.opts}\r\n\t\t\t\t\t\tokFn={popOpts.okFn} closeFn={popOpts.closeFn}/>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn <div className=\"page_root\">\r\n\t\t\t{/* 전체 화면을 활용하는 화면이면 기본틀을 안보이게 처리한다. */}\r\n\t\t\t{allScreen ? <div>{content}</div>\r\n\t\t\t\t: <div className=\"page_wrapper\">\r\n\t\t\t\t\t\t<MainTop main={this} username={username} role={role} onMenuChange={this.onMenuChange}/>\r\n\r\n\t\t\t\t\t\t<div className={\"page_container\" + (menuCode === MenuCode.DASHBOARD ? ' dash_wrap' : '')}>\r\n\t\t\t\t\t\t\t{/* 대시보드 화면은 메뉴 경로를 안보이게 처리한다. */}\r\n\t\t\t\t\t\t\t{menuCode !== MenuCode.DASHBOARD ? <MainPath paths={paths} onClick={this.onMenuChange} /> : null }\r\n\t\t\t\t\t\t\t{content}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t{/* 모달 */}\r\n\t\t\t\t\t\t{modal ? <Modal /> : null}\r\n\t\t\t\t\t\t{/* 공통 팝업 */}\r\n\t\t\t\t\t\t{pops}\r\n\t\t\t\t\t\t{/* 로그인 팝업 */}\r\n\t\t\t\t\t\t{showLogin ? <Login main={this} onClose={this.hideLogin} /> : null}\r\n\t\t\t\t\t\t{/* 확인 컴퍼넌트 */}\r\n\t\t\t\t\t\t{confirm ? <Confirm main={this}\r\n\t\t\t\t\t\t\tconfirmTitle={confirmTitle}\r\n\t\t\t\t\t\t\tconfirmMessage={confirmMessage}\r\n\t\t\t\t\t\t\tconfirmOkfn={confirmOkfn}\r\n\t\t\t\t\t\t\tconfirmCancelFn={confirmCancelFn}\r\n\t\t\t\t\t\t\t/> : null}\r\n\t\t\t\t\t\t{/* Msg */}\r\n\t\t\t\t\t\t{message ? <Message message={messageMsg} onClickOk={() => this.setState({message:false,modal:false})}/> : null}\r\n\t\t\t\t\t\t{/* 로딩 */}\r\n\t\t\t\t\t\t{loading ? <Loading /> : null}\r\n\t\t\t\t</div>\r\n\t\t\t}{/* allScreen */}\r\n\t\t\t<div className=\"page_footer dash_footer\">\r\n\t\t\t\t<div className=\"page_inner\">\r\n\t\t\t\t<a alt=\"logo\"></a>\r\n\t\t\t\t<ul className=\"footer_aside\">\r\n\t\t\t\t\t<li>개인정보 처리방침</li>\r\n\t\t\t\t\t<li>이용약관</li>\r\n\t\t\t\t</ul>\r\n\t\t\t\t<span className=\"float\">Copyright 2020 by SK Telecom Co., Ltd. All Rights Reserved.</span>\r\n\t\t\t\t</div>  \r\n\t\t\t</div>\r\n\t\t</div>;{/* page_root */}\r\n\t} /* render */\r\n}\r\nexport default Main;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'css/loading.css';\nimport 'tui-grid/dist/tui-grid.css';\nimport 'react-day-picker/lib/style.css';\nimport 'css/custom.css';\nimport 'css/customcust.css';\nimport Main from 'main/Main';\nimport * as serviceWorker from 'serviceWorker';\nimport {Promise} from \"bluebird\";\n\nwindow.onresize = function (evt) {\n  document.getElementById('root').style.height = (window.innerHeight-18) + 'px';\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
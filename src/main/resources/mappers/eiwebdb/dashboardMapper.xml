<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="skt.eiweb.dashboard.mapper.DashboardMapper">

    <!-- 서비스 이력 _ begin -->
    <select id="selectDashboardServiceExecSummForGroup" resultType="skt.eiweb.dashboard.model.DashboardServiceDto">
        SELECT GRP.service_group_name, 
               FORMAT(SVC.service_count, 0) service_count,
               FORMAT(IFNULL(COUNT(SVCH.service_id), 0), 0) exec_count,
               FORMAT(SUM(CASE SVCH.service_status WHEN 'success' THEN 1 ELSE 0 END), 0) success,
               FORMAT(SUM(CASE SVCH.service_status WHEN 'success' THEN 0 ELSE 1 END), 0) fail
          FROM service_exec_history SVCH, service_group GRP, (
                SELECT service_group_name, count(*) service_count
                  FROM service
                 GROUP BY service_group_name
                ) SVC
         WHERE SVCH.service_group_name = GRP.service_group_name
           AND SVC.service_group_name = GRP.service_group_name
           AND DATE_FORMAT(SVCH.execute_date, '%Y%m%d') = DATE_FORMAT(NOW(), '%Y%m%d')
      GROUP BY GRP.service_group_name
    </select>
    
    <select id="selectDashboardServiceExecStatus" parameterType="skt.eiweb.dashboard.model.DashboardServiceDto" resultType="skt.eiweb.dashboard.model.DashboardServiceDto">
        SELECT FORMAT(COUNT(*), 0) total,
               FORMAT(IFNULL(SUM(CASE WHEN service_status = 'success' THEN 1 ELSE 0 END), 0), 0) success,
               FORMAT(IFNULL(SUM(CASE WHEN service_status = 'success' THEN 0 ELSE 1 END), 0), 0) fail
          FROM service_exec_history
        <if test="isToday != null and isToday != ''">
         WHERE DATE_FORMAT(execute_date, '%Y%m%d') = DATE_FORMAT(NOW(), '%Y%m%d')
        </if>
    </select>
    
    <select id="selectDashboardServiceExecHistory" resultType="skt.eiweb.dashboard.model.DashboardServiceDto">
        SELECT svc.service_name, grp.service_group_name, seh.start_date, (seh.end_date - seh.start_date) elasped, seh.service_status
          FROM service_exec_history seh, service svc, service_group grp
         WHERE svc.service_group_name = grp.service_group_name
           AND seh.service_id = svc.service_id
           AND DATE_FORMAT(execute_date, '%Y%m%d') = DATE_FORMAT(NOW(), '%Y%m%d')
      ORDER BY execute_date DESC
    </select>
    
    <select id="selectDashboardServiceExecStatusForToday" resultType="skt.eiweb.dashboard.model.DashboardServiceDto">
        SELECT ho.service_group_name, ho.hour, dt.exec_count,
               FORMAT(IFNULL(dt.success, 0), 0) success,
               FORMAT(IFNULL(dt.fail, 0), 0) fail
          FROM (SELECT grp.service_group_name,
                       DATE_FORMAT(execute_date, "%H") hour,
                       IFNULL(COUNT(*), 0) exec_count,
                       IFNULL(SUM(CASE WHEN seh.service_status = 'success' THEN 1 ELSE 0 END), 0) success,
                       IFNULL(SUM(CASE WHEN seh.service_status != 'success' THEN 1 ELSE 0 END), 0) fail
                  FROM service_exec_history seh, service svc, service_group grp
                 WHERE svc.service_group_name = grp.service_group_name
                   AND seh.service_id = svc.service_id
                   AND DATE_FORMAT(execute_date, '%Y%m%d') = DATE_FORMAT(NOW(), '%Y%m%d')
              GROUP BY grp.service_group_name, DATE_FORMAT(execute_date, "%H")
               ) dt
         RIGHT OUTER JOIN 
         (
            SELECT service_group_name, hour FROM service_group g, (
                 SELECT 24-1 hour 
                 UNION SELECT 24-2 hour 
                 UNION SELECT 24-3 hour 
                 UNION SELECT 24-4 hour 
                 UNION SELECT 24-5 hour 
                 UNION SELECT 24-6 hour
                 UNION SELECT 24-7 hour 
                 UNION SELECT 24-8 hour 
                 UNION SELECT 24-9 hour 
                 UNION SELECT 24-10 hour 
                 UNION SELECT 24-11 hour 
                 UNION SELECT 24-12 hour 
                 UNION SELECT 24-13 hour
                 UNION SELECT 24-14 hour 
                 UNION SELECT 24-15 hour 
                 UNION SELECT 24-16 hour 
                 UNION SELECT 24-17 hour 
                 UNION SELECT 24-18 hour 
                 UNION SELECT 24-19 hour 
                 UNION SELECT 24-20 hour
                 UNION SELECT 24-21 hour 
                 UNION SELECT 24-22 hour 
                 UNION SELECT 24-23 hour
                 UNION SELECT 24-24 hour
            ) 24h
        ORDER BY g.service_group_name, 24h.hour
         ) ho
            ON dt.service_group_name = ho.service_group_name AND dt.hour = ho.hour
      ORDER BY ho.service_group_name, ho.hour
    </select>
    <!-- 서비스 이력 _ end -->
    
    <!-- 리소스 이력 _ begin -->
    <select id="selectDashboardScaleInOutSummary" resultType="skt.eiweb.dashboard.model.DashboardScaleInOutDto7">
        SELECT BBB.value server_role, 
               SUM(CASE WHEN execute_date<![CDATA[<]]>DATE_FORMAT(DATE_ADD(CURDATE(), INTERVAL -6 DAY), "%Y-%m-%d") THEN (CASE WHEN action LIKE '%start' THEN 1 ELSE 0 END) END) V0,
               SUM(CASE WHEN execute_date = DATE_FORMAT(DATE_ADD(CURDATE(), INTERVAL -6 DAY), "%Y-%m-%d") THEN (CASE WHEN action LIKE '%start' THEN 1 ELSE 0 END) END) V1,
               SUM(CASE WHEN execute_date = DATE_FORMAT(DATE_ADD(CURDATE(), INTERVAL -5 DAY), "%Y-%m-%d") THEN (CASE WHEN action LIKE '%start' THEN 1 ELSE 0 END) END) V2,
               SUM(CASE WHEN execute_date = DATE_FORMAT(DATE_ADD(CURDATE(), INTERVAL -4 DAY), "%Y-%m-%d") THEN (CASE WHEN action LIKE '%start' THEN 1 ELSE 0 END) END) V3,
               SUM(CASE WHEN execute_date = DATE_FORMAT(DATE_ADD(CURDATE(), INTERVAL -3 DAY), "%Y-%m-%d") THEN (CASE WHEN action LIKE '%start' THEN 1 ELSE 0 END) END) V4,
               SUM(CASE WHEN execute_date = DATE_FORMAT(DATE_ADD(CURDATE(), INTERVAL -2 DAY), "%Y-%m-%d") THEN (CASE WHEN action LIKE '%start' THEN 1 ELSE 0 END) END) V5,
               SUM(CASE WHEN execute_date = DATE_FORMAT(DATE_ADD(CURDATE(), INTERVAL -1 DAY), "%Y-%m-%d") THEN (CASE WHEN action LIKE '%start' THEN 1 ELSE 0 END) END) V6,
               SUM(CASE WHEN execute_date = DATE_FORMAT(DATE_ADD(CURDATE(), INTERVAL -0 DAY), "%Y-%m-%d") THEN (CASE WHEN action LIKE '%start' THEN 1 ELSE 0 END) END) V7,
               ((REPLACE(BBB.value, 'worker', '') + 10) - 3) sort
          FROM (
               SELECT * FROM (
                      SELECT DATE_FORMAT(A.execute_date, "%Y-%m-%d") execute_date, A.server_name, A.action
                        FROM rest_exec_history A 
                       INNER JOIN ( SELECT MAX(execute_date) execute_date FROM REST_EXEC_HISTORY GROUP BY Date(execute_date), server_name ) T
                          ON A.execute_date = T.execute_date AND A.execute_date > DATE_FORMAT(DATE_ADD(CURDATE(), INTERVAL -6 DAY), "%Y-%m-%d")
                      ) AA
                UNION ALL
               SELECT * FROM (
                      SELECT DATE_FORMAT(execute_date, "%Y-%m-%d") execute_date, server_name, action
                        FROM rest_exec_history
                       WHERE execute_date IN ( SELECT MAX(execute_date) FROM rest_exec_history WHERE execute_date<![CDATA[<]]>DATE_ADD(CURDATE(), INTERVAL -6 DAY) GROUP BY server_name)
                      ) BB
                ORDER BY execute_date DESC
          ) AAA, common_code BBB
         WHERE AAA.server_name = BBB.code_name 
         GROUP BY BBB.value
         UNION ALL
        SELECT * FROM (
               SELECT value, 1 V0, 1 V1, 1 V2, 1 V3, 1 V4, 1 V5, 1 V6, 1 V7, sort
                 FROM common_code
                WHERE group_code = 'SCALE_IN_OUT_LIST' AND use_yn = 'Y' AND value = 'master'
          ) CCC
         ORDER BY server_role DESC
    </select>
    
    <select id="selectTodayCpuHour" resultType="skt.eiweb.dashboard.model.CpuHistoryDto">
        SELECT DATE_FORMAT(receive_date, '%H') hour, 
               instance, 
               server_name,
               ROUND(AVG(cpu_average), 2) cpu_average
          FROM cpu_history
         WHERE DATE_FORMAT(receive_date, '%Y%m%d') = DATE_FORMAT(CURDATE(), '%Y%m%d')
      GROUP BY DATE_FORMAT(receive_date, '%H'), instance, server_name
    </select>
    
    <select id="selectTodayCpuAvg" resultType="skt.eiweb.dashboard.model.CpuHistoryDto">
        SELECT ROUND(AVG(cpu_average), 1) cpu_average 
          FROM cpu_history
         WHERE DATE_FORMAT(receive_date, '%Y%m%d') = DATE_FORMAT(NOW(), '%Y%m%d')
    </select>
    
    <select id="selectCpuSummListForHour" resultType="skt.eiweb.dashboard.model.CpuHistoryDto">
        SELECT DATE_FORMAT(receive_date, '%H') receive_date,
               instance,
               server_name,
               ROUND(AVG(cpu_average), 2) cpu_average
          FROM cpu_history
         WHERE DATE_FORMAT(receive_date, '%Y%m%d') = DATE_FORMAT(CURDATE(), '%Y%m%d')
         GROUP BY DATE_FORMAT(receive_date, '%H'), instance, server_name
    </select>
    
    <select id="selectCpuSummListForDay" resultType="skt.eiweb.dashboard.model.CpuHistoryDto">
        SELECT DATE_FORMAT(receive_date, '%m/%d') receive_date, 
               instance, 
               server_name, 
               ROUND(cpu_average, 2) cpu_average
          FROM cpu_hist_summary
         WHERE DATE_FORMAT(receive_date, '%Y%m') = DATE_FORMAT(CURDATE(), '%Y%m')
         UNION ALL
        SELECT DATE_FORMAT(CURDATE(), '%m/%d') receive_date, 
               instance, 
               server_name, 
               ROUND(AVG(cpu_average), 2) cpu_average
          FROM cpu_history
         WHERE DATE_FORMAT(receive_date, '%Y%m') = DATE_FORMAT(CURDATE(), '%Y%m')
         GROUP BY instance, server_name
    </select>
    
    <select id="selectCpuSummListForMonth" resultType="skt.eiweb.dashboard.model.CpuHistoryDto"> <!-- 튜닝 보류 -->
        SELECT DATE_FORMAT(receive_date, '%Y/%m') receive_date,
               instance,
               server_name,
               ROUND(AVG(cpu_average), 2) cpu_average
          FROM cpu_hist_summary
         WHERE DATE_FORMAT(receive_date, '%Y') = DATE_FORMAT(CURDATE(), '%Y')
         GROUP BY DATE_FORMAT(receive_date, '%Y/%m'), instance, server_name
    </select>
    
    <select id="selectCpuAvgList" resultType="skt.eiweb.dashboard.model.CpuHistoryDto">
        SELECT DATE_FORMAT(receive_date, '%H:%i:%s') receive_date,
               ROUND(AVG(cpu_average), 2) cpu_average
          FROM cpu_history
         WHERE receive_date > DATE_ADD(NOW(), INTERVAL -5 MINUTE)
         GROUP BY receive_date
    </select>
    <!-- 리소스 이력 _ end -->
    
    <insert id="insertCpuHistory" parameterType="skt.eiweb.dashboard.model.CpuHistory">
        INSERT INTO cpu_history 
               (server_name, cpu_average, instance<if test="cpuUnit != null and cpuUnit != ''">, cpu_unit</if>)  
        VALUES (#{serverName}, #{cpuAverage}, #{instance}<if test="cpuUnit != null and cpuUnit != ''">, #{cpuUnit}</if>
        )
    </insert>
    
    <insert id="insertCpuHistSummary">
        INSERT INTO cpu_hist_summary
        SELECT DATE_FORMAT(receive_date, '%Y%m%d') receive_date,
               instance,
               server_name,
               ROUND(AVG(cpu_average), 2) cpu_average,
               MAX(cpu_unit) cpu_unit
          FROM cpu_history
         WHERE DATE_FORMAT(receive_date, '%Y%m%d') = DATE_FORMAT(DATE_ADD(NOW(), interval -1 day), '%Y%m%d')
      GROUP BY DATE_FORMAT(receive_date, '%Y%m%d'), instance, server_name
    </insert>

</mapper>
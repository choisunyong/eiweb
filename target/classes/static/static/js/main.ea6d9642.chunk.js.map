{"version":3,"sources":["main/MenuCode.js","main/CookieNames.js","comp/common.js","comp/Loading.js","comp/Pagination.js","comp/Msg.js","comp/Confirm.js","comp/DeadServer.js","comp/SystemChecking.js","comp/Popup.js","comp/Modal.js","comp/gridRenderer/NameRenderer.js","comp/Validation.js","comp/Message.js","comp/GridList.js","main/MainTop.js","main/MenuData.js","main/Login.js","comp/http-common.js","main/MainService.js","dashboard/DashboardService.js","dashboard/ScaleInOutGrid.js","dashboard/Dashboard.js","model/ModelManager.js","model/ModelService.js","comp/file/services/upload-files.service.js","model/ModelReg.js","model/ModelDetail.js","model/ModelHistDetail.js","service/ServiceService.js","admin/AdminService.js","main/CommonCode.js","admin/UserReg.js","admin/UserManager.js","admin/ScaleInOutManager.js","admin/HistoryModelReg.js","admin/HistoryScaleInOut.js","admin/HistoryServiceReg.js","admin/HistoryUserLogin.js","admin/HistoryServiceDetail.js","admin/HistoryServiceExec.js","admin/CommonCodeMgr.js","admin/ServiceGroupManager.js","admin/ServiceGroupReg.js","model/ModelPopCont.js","service/ServiceReg.js","service/ServiceDetail.js","service/ServiceManager.js","service/ServiceHistDetail.js","main/MainContent.js","main/MainPath.js","main/SchIdPw.js","main/Logo.js","main/ChangeUserPassword.js","main/Main.js","serviceWorker.js","index.js"],"names":["exports","LOGIN_SCHIDPW","DASHBOARD","MODEL_MANAGER","SERVICE_MANAGER","ADMIN_HIST_SERVICEEXEC","ADMIN_USERMGR","ADMIN_HIST_LOGIN","ADMIN_HIST_MODELREG","ADMIN_HIST_SCALEINOUT","ADMIN_SACLEINOUTMGR","ADMIN_SERVICEGROUP","ADMIN_COMMONCODE","SESSION_ID","LAST_MENU_CODE","main","undefined","setCookie","name","value","day","date","Date","setTime","getTime","document","cookie","toUTCString","getCookie","match","makeParam","target","ret","refs","ref","tagName","type","checked","select","props","err","initForm","getFileSizeByte","sizestr","indexOf","parseInt","replace","getDisplFileSize","size","unit","units","i","length","Number","toFixed","korTypeToEng","src","KOR_KEY","res","ch","charAt","nCode","charCodeAt","nCho","nJung","nJong","arrKeyIndex","Math","floor","j","engTypeToKor","CHO_DATA","JUNG_DATA","JONG_DATA","p","makeHangul","newCho","String","fromCharCode","displNum","x","toString","Loading","className","Component","Pagination","onClickItem","bind","state","firstPage","lastPage","pageCount","page","this","maxPage","ceil","totalCount","perPage","movePage","setState","realMovePage","pages","push","index","activate","onClick","e","console","log","key","random","appendClass","active","React","PageItem","option","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","ok","info","warn","error","msg","setUserOption","opts","useropts","useropt","shutMsg","common","substr","Confirm","onClose","onOk","confirmCancelFn","hideConfirm","confirmOkfn","confirmMessage","okLabel","cancelLabel","top","getElementById","clientHeight","style","display","href","marginLeft","DeadServer","SystemChecking","Popup","onStart","activeDrags","onStop","deltaPosition","y","controlledPosition","onClickOk","okFn","title","content","headerVisiable","popupBtnAreaVisible","contentAppendClass","popupSty","closeLabel","width","height","axis","handle","defaultPosition","grid","scale","Modal","NameRenderer","el","createElement","columnInfo","renderer","options","listData","onClickGridNameColumn","labelKey","item","rowKey","innerText","addEventListener","numberExp","emailExp","telNoExp","idExp","pwExp","phoneExp","modelNameExp","modelNickExp","serviceNameExp","resourceGroupNameExp","serviceGroupNameExp","serviceDagIdExp","searchExp","commCodeExp","chkPhone","chkEmail","chkId","chkPw","chkNumber","filterSchKeyword","chkVal","result","errMsg","chk","test","Message","message","GridList","columns","gridData","noDataMsg","bodyHeight","col","colsty","headercellsty","itm","rowcols","headers","colGroup","headersty","rowsty","align","verticalAlign","textAlign","padding","header","rowcolsty","rows","colSpan","noneContent","s","overflow","left","NoneRow","colspan","MainTop","subBgHei","isMenuItemActive","onLogout","onLogoutResult","onClickChangePw","menuCode","MainService","logout","login","role","username","sessionId","userInfo","onMenuChange","MenuCode","showPopup","hidePopup","menuItems","menu","currentMenuCode","MODEL","SERVICE","subMenu","MenuData","service","ADMIN","admin","LOGIN","MenuItem","subMenuItems","home","paths","model","map","getPaths","getMenuMap","m","iitm","children","Login","onLoginResult","process","REACT_APP_DEBUG","REACT_APP_DEV_AUTO_LOGIN","uid","pw","focus","userId","data","userPermission","CookieNames","showLogin","REACT_APP_FIRST_MENU_CODE","Msg","REACT_APP_DEV_LOGIN_ID","REACT_APP_DEV_LOGIN_PW","placeholder","autocomplete","onKeyDown","keyCode","defaultValue","axios","create","baseURL","id","resFn","errFn","formData","FormData","append","http","post","then","catch","get","parm","v","groupUseYn","useYn","k","ScaleInOutGrid","cellHeight","cellColsCount","rowHei","rowData","days","moment","require","add","format","Row","cellCount","cells","cls","Dashboard","serviceExecHistoryColumns","serviceExecSummColumns","serviceExecStatusForToday","serviceTodayExecSummForGroup","serviceTotalExecSummForGroup","serviceExecHistory","serviceExecSummListForGroup","scaleInOutSummary","containerInfo","cpuAvgList","cpuSummListForDay","cpuSummListForMonth","cpuSummListForHour","cpuAvgListForHour","todayCpuAvg","serverNames","cpuSummList","cpuSummType","onResultResourceData","onResultServiceData","onTimerDashboard","onTimerDashboard2","onResultRealData","onResultRealData2","onClickTab","showLoading","DashboardService","dashboardServiceData","clearInterval","timerID","timer2ID","dashboardRealData","dashboardRealData2","hideLoading","parseFloat","Object","keys","forEach","month","hour","cpuAverage","setInterval","paddingRight","sortable","StatusRenderer","serviceGroupName","dashboardResourceData","contains","hasContainer","RealCpuTooltip","payload","label","lblStr","receiveDate","border","background","color","isNaN","CpuUtilizationTooltip","tooltips","fontWeight","dataKey","ServiceExecutionTooltip","pieData","todayCpuAvgSty","right","colors","cpuUtilizationLines","fill","stroke","strokeWidth","dot","r","isAnimationActive","serviceExecutionLines","activeDot","alt","justifyContent","margin","bottom","domain","strokeDasharray","marginTop","cx","cy","innerRadius","outerRadius","paddingAngle","defaultChecked","iconType","total","success","fail","serviceStatus","ModelManager","pagesPage","pagesTotalCount","pagesPerPage","requestData","onResultList","onClickPageItem","onClickDel","onResultDel","onConfirmOkDel","onConfirmCancelDel","onClickReg","onCloseReg","popupModify","onClickSch","onClickTestReq","onResultTestReq","onClickFileReq","onResultFileReq","TuiGrid","setLanguage","applyTheme","schKey","schType","schKeyword","Validation","ModelService","list","pagesInfo","minWidth","whiteSpace","FileRenderer","LinkRenderer","errCode","isPopup","onChangeItem","onSelection","getModelInfo","modelId","modelInfo","selectionRowKey","selectionItem","selectionColumName","columnName","showDetail","onCloseDetail","chkedModels","getInstance","getCheckedRows","delModels","delete","modifyModelInfo","modifyModelFiles","modifyFlag","modelFiles","modelTestReq","getModelFile","fileName","contents","float","rowHeaders","columnOptions","resizable","scrollX","scrollY","evaluationStatus","modelName","modelNick","regDate","file","onUploadProgress","ModelReg","nameValid","nickValid","modelFileValid","descLength","currentFile","modelFile","initModify","inputChange","checkedPriority","validationCheck","onChangeName","onResultRegist","onChangeDesc","selectFile","upload","onChangePriority","onClickRadio","modelDesc","event","files","uploadFile","UploadService","round","loaded","response","ext","lastIndexOf","toUpperCase","fileSize","baseImage","priority","modelFileContext","regist","chkState","priorityValid","valiRes","chkModelName","validName","limitRuntime","defaultState","currentTarget","modelFileName","radios","prioritys","CommonCode","getCodeList","code","for","codeName","disabled","onChange","maxLength","readonly","paddingLeft","alignItems","min","max","step","class","cols","maxlength","sourceView","ModelDetail","onResultInfo","modelFileItems","optsPriority","getCodeSelectList","defaultValuePriority","cpuCores","mem","elapsed","FileRow","mainYn","fileExt","ModelHistDetail","getModelHistInfo","priorityNm","serviceName","serviceId","serviceIds","dagId","resourceIds","url","req_type","serviceGroupoName","serviceGroupNames","groupCode","commonCode","arr","valueKey","selectedValue","allFlag","allLabel","selected","UserReg","onClickSave","onResultSave","param","AdminService","save","validId","userName","validPw","pwchk","userEmail","validEmail","modifyUserInfo","userPermissionOptions","makeOptions","userActiveOptions","UserManager","schInfo","onClickChangeActivate","onResultChangeActivate","onClickDelete","onConfirmOkDelete","onResultDelete","userList","ActivateRenderer","DeleteRenderer","formCover","showConfirm","onConfirmCancelDelete","deleteUser","permissionOpts","outline","de","ScaleInOutManager","scaleOutRuleModifyMode","scaleOutRuleEnable","scaleOutCpuPercent","scaleOutDurationMin","scaleInRuleModifyMode","scaleInRuleEnable","scaleInCpuPercent","scaleInDurationMin","onResultDeviceList","onClickScaleInOut","onResultScaleInOut","onClickScaleOutRuleModify","onClickSaveScaleOutRule","onResultScaleInOutRuleInfo","onResultSaveScaleInOutRule","scaleInOutRuleInfo","deviceList","server","serverName","scaleState","scaleInOut","nodeName","CustomButtonRenderer","scaleInRule","cpuPercent","durationMin","ruleEnable","scaleOutRule","listKeys","saveScaleInOutRule","onClickSaveScaleInRule","onClickScaleInRuleModify","HistoryModelReg","stDt","edDt","formatDate","parseDate","onChangeStDt","onChangeEdDt","action","sub","months","endDate","dateFnsFormat","locale","startDate","regHistory","onClickModify","str","dateFnsParse","minDt","maxDt","actionOpts","onDayChange","HistoryScaleInOut","scaleInOutType","scaleHistory","serverNameOpts","scaleInOutTypeOpts","HistoryUserLogin","userLoginHistory","HistoryServiceDetail","detailInfo","onResultSvcExecHistInfo","serviceHistory","serviceExecHistoryResult","marginBottom","ReactHtmlParser","png","HistoryServiceExec","serviceGroupData","prevGroup","params","onResultServiceGroupList","setStateFlag","serviceGroupList","fromKey","ServiceNameRenderer","DagIdRenderer","totalStatus","serviceGroupOpts","warning","CommonCodeMgr","groupData","groupColumns","codeData","codeColumns","selectionGroupItem","selectionCodeItem","groupSaveType","codeSaveType","validGrpCd","validGrpCdNm","validCd","validCdNm","reqDeleteCodeAll","reqCommGroupList","reqCommCodeList","onResultCommonGroupList","onResultCommonCodeList","onClickGroupGrid","onClickCodeGrid","groupGridSelectedItem","codeGridSelectedItem","initGroupForm","initCodeForm","disabledGroupForm","disabledCodeForm","onClickBtnGroupSave","onClickBtnGroupDel","onClickBtnCodeSave","onClickBtnCodeDel","onClickGroupAdd","onClickCodeAdd","validationCheckGroup","validationCheckCode","initValids","onResultGroupSave","onResultCodeSave","onResultGroupDel","onResultCodeDel","onConfirmGroupDelOk","onConfirmCodeDelOk","onConfirmCancel","commonGroupList","commonCodeList","groupName","btnGroupSave","btnGroupDel","sort","btnCodeSave","btnCodeDel","selectedItem","chkCommonCode","gridEvt","setTimeout","saveType","saveCodeGroup","deleteCodeAll","deleteCodeGroup","saveCode","deleteCode","paddingTop","ServiceGroupManager","modifyServiceGroupInfo","chkedRsrs","delServiceGroups","deleteServiceGroup","ServiceGroupReg","isNameChk","onResultCreate","createServiceGroup","validCpu","chkServiceGroupName","description","ModelPopCont","onClickSelection","SelectButton","ServiceReg","validModelId","validUseData","selectedFiles","popupSelectedItem","resourceGroupData","selectedResourceGroupId","selectedServiceGroupName","models","modelChoosePopup","modelSelectedItem","onClickModelPop","onClickModelSelection","onChangeDagId","ServiceService","chkServiceName","chkServiceDagIdExp","validDagId","runCycle","split","addModelData","serviceDesc","modifyServiceInfo","borderRadius","rel","ServiceDetail","ServiceManager","winPop","onCloseModelReg","onClickGridModelColumn","onClickSchModelDel","onClickKill","onClickHistory","onClickPlay","schServiceGroup","getServiceInfo","serviceInfo","row","kill","onResultKill","play","onResultPlay","schSty","backgroundColor","cursor","window","open","borderLeft","running","standby","unscheduled","appendChild","history","onResultResourceGroupList","getServiceHistInfo","resourceGroupList","resourceGroupOpts","resourceGroupId","resourceGroupName","version","modifyButtonVisible","MainPath","pathcomps","PathItem","SchIdPw","tabFocus","tabChange","onClickSchId","onClickSchPw","validationSchId","validationSchPw","onResultSearchId","onResultSearchPw","schIdEmail","searchId","schPwEmail","searchPw","Logo","ChangeUserPassword","onConfirmOk","currpw","fontSize","paddingBottom","changeUserPw","onResultChangePw","Main","loading","popup","modal","allScreen","confirm","confirmTitle","popupIdx","popups","popupTitle","popupContent","popupOpts","popupOkFn","popupCancelFn","messageMsg","onResultCommonCode","getContent","onChkLogin","onFail","hideLogin","defaults","onresize","unconditionality","pathData","MainContent","cancelFn","cont","closeFn","popupOpt","nPopups","nPopupIdx","setData","getValue","setSessionId","chkLogin","preMenuCode","popOpts","pops","Boolean","location","hostname","evt","innerHeight","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ea6d9642.chunk.js","sourcesContent":["exports.LOGIN_SCHIDPW = \"MENU00001\";\t\t\t// 아이디 비밀번호 찾기\r\nexports.DASHBOARD = \"MENU001\";\t\t\t\t\t// 데쉬보드\r\nexports.MODEL_MANAGER = \"MENU00201\";\t\t\t// 모델 관리\r\nexports.SERVICE_MANAGER = \"MENU00301\";\t\t\t// Service관리\r\nexports.ADMIN_HIST_SERVICEEXEC = \"MENU00303\";\t// Service 실행결과 이력\r\nexports.ADMIN_USERMGR = \"MENU00401\";\t\t\t// 사용자 관리\r\nexports.ADMIN_HIST_LOGIN = \"MENU0040505\";\t\t// 사용자 로그인 이력\r\nexports.ADMIN_HIST_MODELREG = \"MENU0040501\";\t// Model등록 이력\r\nexports.ADMIN_HIST_SCALEINOUT = \"MENU0040504\";\t// Resource 이력\r\nexports.ADMIN_SACLEINOUTMGR = \"MENU00403\";\t\t// Sale In Out 관리\r\nexports.ADMIN_SERVICEGROUP = \"MENU00407\";\t\t// 서비스 그룹\r\nexports.ADMIN_COMMONCODE = \"MENU00406\";\t\t\t// 공통코드","exports.SESSION_ID=\"eiwebsessionid\";            // 세션 쿠키 키값\r\nexports.LAST_MENU_CODE=\"eiwebmenucode\";         // 마지막 메뉴 코드 쿠키 키값","exports.main = undefined;\r\n\r\n/**\r\n * 쿠키 저장\r\n * @param {String} name cookie name\r\n * @param {String} value cookie value\r\n * @param {int} day 저장일\r\n */\r\nexports.setCookie = function(name, value, day) {\r\n    var date = new Date();\r\n    date.setTime(date.getTime() + day * 60 * 60 * 24 * 1000);\r\n    document.cookie = name + '=' + value + ';expires=' + date.toUTCString() + ';path=/';\r\n}\r\n\r\n/**\r\n * 쿠키 값 불러오기\r\n * @param {String} name cookie name\r\n * @return {String} 쿠키값\r\n */\r\nexports.getCookie = function(name) {\r\n    var value = document.cookie.match('(^|;) ?' + name + '=([^;]*)(;|$)');\r\n    return value? value[2] : \"\";\r\n};\r\n\r\n/**\r\n * target 하위에 ref 설정되어있는 입력 컨트롤의 값들을 반환\r\n * @param {DOM} target \r\n * @return {Object} {ref1:value, ref2:value}    <input ref=\"ref1\" type=\"text\" />  <select ref=\"ref2\" />\r\n */\r\nexports.makeParam = function(target) {\r\n    let ret = {};\r\n    const refs = target.refs;\r\n    for (let ref in refs) {\r\n        try {\r\n            if (refs[ref].tagName === \"INPUT\" || refs[ref].tagName === \"SELECT\" || refs[ref].tagName === \"TEXTAREA\") {\r\n                if (refs[ref].type === \"checkbox\")\r\n                    ret[ref] = refs[ref].checked ? \"Y\" : \"N\";\r\n                else\r\n                    ret[ref] = refs[ref].value;\r\n            } else if (typeof refs[ref] === \"object\" && refs[ref].select !== null) {\r\n                ret[ref] = refs[ref].select.props.value.value;\r\n            }\r\n        } catch (err) {}\r\n    }\r\n    return ret;\r\n};\r\n\r\n/**\r\n * target 하위에 ref 설정되어있는 입력 컨트롤의 값들을 초기화\r\n * @param {DOM} target \r\n */\r\nexports.initForm = function(target) {\r\n    const refs = target.refs;\r\n    for (let ref in refs) {\r\n        try {\r\n            if (refs[ref].tagName === \"INPUT\" || refs[ref].tagName === \"SELECT\" || refs[ref].tagName === \"TEXTAREA\")\r\n                refs[ref].value = \"\";\r\n        } catch (err) {}\r\n    }\r\n}\r\n\r\n/**\r\n * 파일 사이즈를 Byte로 반환\r\n * @param {String} sizestr \r\n * @return {Number} 파일 사이즈(Byte)\r\n */\r\nexports.getFileSizeByte = function(sizestr) {\r\n    let ret = 0;\r\n    if (sizestr.indexOf(\"KB\") > -1) {               //킬로바이트\r\n        ret = parseInt(sizestr.replace('KB')) * 1024;\r\n    } else if (sizestr.indexOf(\"MB\") > -1) {        //메가바이트\r\n        ret = parseInt(sizestr.replace('MB')) * 1024 * 1024;\r\n    } else if (sizestr.indexOf(\"GB\") > -1) {        //기가바이트\r\n        ret = parseInt(sizestr.replace('GB')) * 1024 * 1024 * 1024;\r\n    } else if (sizestr.indexOf(\"TB\") > -1) {        //테라바이트\r\n        ret = parseInt(sizestr.replace('TB')) * 1024 * 1024 * 1024 * 1024;\r\n    } else if (sizestr.indexOf(\"PB\") > -1) {        //페타바이트\r\n        ret = parseInt(sizestr.replace('PB')) * 1024 * 1024 * 1024 * 1024 * 1024;\r\n    } else if (sizestr.indexOf(\"EB\") > -1) {        //엑사바이트\r\n        ret = parseInt(sizestr.replace('EB')) * 1024 * 1024 * 1024 * 1024 * 1024 * 1024;\r\n    } else if (sizestr.indexOf(\"ZB\") > -1) {        //제타바이트\r\n        ret = parseInt(sizestr.replace('ZB')) * 1024 * 1024 * 1024 * 1024 * 1024 * 1024 * 1024;\r\n    } else if (sizestr.indexOf(\"YB\") > -1) {        //요타바이트\r\n        ret = parseInt(sizestr.replace('YB')) * 1024 * 1024 * 1024 * 1024 * 1024 * 1024 * 1024 * 1024;\r\n    }\r\n    return ret;\r\n}\r\n\r\n/**\r\n * Display용 파일 사이즈 String 반환\r\n * @param {Number} size \r\n * @return {String} 파일 사이즈(단위)\r\n */\r\nexports.getDisplFileSize = function(size) {\r\n    let unit = \"B\";\r\n    const units = [\"KB\",\"MB\",\"GB\",\"TB\",\"PB\",\"EB\",\"ZB\",\"YB\"];\r\n    for (let i=0; i<units.length; i++) {\r\n        if (size > 1024) {\r\n            size = Number(size / 1024).toFixed(1);\r\n            unit = units[i];\r\n        } else break;\r\n    }\r\n    return size + unit;\r\n}\r\n\r\n/**\r\n * 한글문자를 영문문자로 반환\r\n * @param {String} src 입력값\r\n * @return {String} 영문\r\n */\r\nexports.korTypeToEng = function(src) {\r\n\tvar ENG_KEY = \"rRseEfaqQtTdwWczxvgkoiOjpuPhynbml\";\r\n\tvar KOR_KEY = \"ㄱㄲㄴㄷㄸㄹㅁㅂㅃㅅㅆㅇㅈㅉㅊㅋㅌㅍㅎㅏㅐㅑㅒㅓㅔㅕㅖㅗㅛㅜㅠㅡㅣ\";\r\n\tvar CHO_DATA = \"ㄱㄲㄴㄷㄸㄹㅁㅂㅃㅅㅆㅇㅈㅉㅊㅋㅌㅍㅎ\";\r\n\tvar JUNG_DATA = \"ㅏㅐㅑㅒㅓㅔㅕㅖㅗㅘㅙㅚㅛㅜㅝㅞㅟㅠㅡㅢㅣ\";\r\n\tvar JONG_DATA = \"ㄱㄲㄳㄴㄵㄶㄷㄹㄺㄻㄼㄽㄾㄿㅀㅁㅂㅄㅅㅆㅇㅈㅊㅋㅌㅍㅎ\";\r\n\t\r\n\tvar res = \"\";\r\n\tif (src.length === 0)\r\n\t\treturn res;\r\n\r\n\tfor (var i = 0; i < src.length; i++) {\r\n\t\tvar ch = src.charAt(i);\r\n\t\tvar nCode = ch.charCodeAt(0);\r\n\t\tvar nCho = CHO_DATA.indexOf(ch), nJung = JUNG_DATA.indexOf(ch), nJong = JONG_DATA.indexOf(ch);\r\n\t\tvar arrKeyIndex = [-1, -1, -1, -1, -1];\r\n\r\n\r\n\t\tif (0xac00 <= nCode && nCode <= 0xd7a3) {\r\n\t\t\tnCode -= 0xac00;\r\n\t\t\tarrKeyIndex[0] = Math.floor(nCode / (21 * 28)); // 초성\r\n\t\t\tarrKeyIndex[1] = Math.floor(nCode / 28) % 21; // 중성\r\n\t\t\tarrKeyIndex[3] = nCode % 28 - 1; // 종성\r\n\t\t} else if (nCho !== -1) // 초성 자음\r\n\t\t\tarrKeyIndex[0] = nCho;\r\n\t\telse if (nJung !== -1) // 중성\r\n\t\t\tarrKeyIndex[1] = nJung;\r\n\t\telse if (nJong !== -1) // 종성 자음\r\n\t\t\tarrKeyIndex[3] = nJong;\r\n\t\telse // 한글이 아님\r\n\t\t\tres += ch;\r\n\r\n\t\t// 실제 Key Index로 변경. 초성은 순서 동일\r\n\t\tif (arrKeyIndex[1] !== -1) {\r\n\t\t\tif (arrKeyIndex[1] === 9) { // ㅘ\r\n\t\t\t\tarrKeyIndex[1] = 27;\r\n\t\t\t\tarrKeyIndex[2] = 19;\r\n\t\t\t} else if (arrKeyIndex[1] === 10) { // ㅙ\r\n\t\t\t\tarrKeyIndex[1] = 27;\r\n\t\t\t\tarrKeyIndex[2] = 20;\r\n\t\t\t} else if (arrKeyIndex[1] === 11) { // ㅚ\r\n\t\t\t\tarrKeyIndex[1] = 27;\r\n\t\t\t\tarrKeyIndex[2] = 32;\r\n\t\t\t} else if (arrKeyIndex[1] === 14) { // ㅝ\r\n\t\t\t\tarrKeyIndex[1] = 29;\r\n\t\t\t\tarrKeyIndex[2] = 23;\r\n\t\t\t} else if (arrKeyIndex[1] === 15) { // ㅞ\r\n\t\t\t\tarrKeyIndex[1] = 29;\r\n\t\t\t\tarrKeyIndex[2] = 24;\r\n\t\t\t} else if (arrKeyIndex[1] === 16) { // ㅟ\r\n\t\t\t\tarrKeyIndex[1] = 29;\r\n\t\t\t\tarrKeyIndex[2] = 32;\r\n\t\t\t} else if (arrKeyIndex[1] === 19) { // ㅢ\r\n\t\t\t\tarrKeyIndex[1] = 31;\r\n\t\t\t\tarrKeyIndex[2] = 32;\r\n\t\t\t} else {\r\n\t\t\t\tarrKeyIndex[1] = KOR_KEY.indexOf(JUNG_DATA.charAt(arrKeyIndex[1]));\r\n\t\t\t\tarrKeyIndex[2] = -1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (arrKeyIndex[3] !== -1) {\r\n\t\t\tif (arrKeyIndex[3] === 2) { // ㄳ\r\n\t\t\t\tarrKeyIndex[3] = 0\r\n\t\t\t\tarrKeyIndex[4] = 9;\r\n\t\t\t} else if (arrKeyIndex[3] === 4) { // ㄵ\r\n\t\t\t\tarrKeyIndex[3] = 2;\r\n\t\t\t\tarrKeyIndex[4] = 12;\r\n\t\t\t} else if (arrKeyIndex[3] === 5) { // ㄶ\r\n\t\t\t\tarrKeyIndex[3] = 2;\r\n\t\t\t\tarrKeyIndex[4] = 18;\r\n\t\t\t} else if (arrKeyIndex[3] === 8) { // ㄺ\r\n\t\t\t\tarrKeyIndex[3] = 5;\r\n\t\t\t\tarrKeyIndex[4] = 0;\r\n\t\t\t} else if (arrKeyIndex[3] === 9) { // ㄻ\r\n\t\t\t\tarrKeyIndex[3] = 5;\r\n\t\t\t\tarrKeyIndex[4] = 6;\r\n\t\t\t} else if (arrKeyIndex[3] === 10) { // ㄼ\r\n\t\t\t\tarrKeyIndex[3] = 5;\r\n\t\t\t\tarrKeyIndex[4] = 7;\r\n\t\t\t} else if (arrKeyIndex[3] === 11) { // ㄽ\r\n\t\t\t\tarrKeyIndex[3] = 5;\r\n\t\t\t\tarrKeyIndex[4] = 9;\r\n\t\t\t} else if (arrKeyIndex[3] === 12) { // ㄾ\r\n\t\t\t\tarrKeyIndex[3] = 5;\r\n\t\t\t\tarrKeyIndex[4] = 16;\r\n\t\t\t} else if (arrKeyIndex[3] === 13) { // ㄿ\r\n\t\t\t\tarrKeyIndex[3] = 5;\r\n\t\t\t\tarrKeyIndex[4] = 17;\r\n\t\t\t} else if (arrKeyIndex[3] === 14) { // ㅀ\r\n\t\t\t\tarrKeyIndex[3] = 5;\r\n\t\t\t\tarrKeyIndex[4] = 18;\r\n\t\t\t} else if (arrKeyIndex[3] === 17) { // ㅄ\r\n\t\t\t\tarrKeyIndex[3] = 7;\r\n\t\t\t\tarrKeyIndex[4] = 9;\r\n\t\t\t} else {\r\n\t\t\t\tarrKeyIndex[3] = KOR_KEY.indexOf(JONG_DATA.charAt(arrKeyIndex[3]));\r\n\t\t\t\tarrKeyIndex[4] = -1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (var j = 0; j < 5; j++) {\r\n\t\t\tif (arrKeyIndex[j] !== -1)\r\n\t\t\t\tres += ENG_KEY.charAt(arrKeyIndex[j]);\r\n\t\t}\r\n\t}\r\n\r\n\treturn res;\r\n}\r\n\r\n/**\r\n * 영문문자를 한글문자로 반환\r\n * @param {String} src \r\n * @return {String} 한글\r\n */\r\nexports.engTypeToKor = function(src) {\r\n    var ENG_KEY = \"rRseEfaqQtTdwWczxvgkoiOjpuPhynbml\";\r\n\tvar KOR_KEY = \"ㄱㄲㄴㄷㄸㄹㅁㅂㅃㅅㅆㅇㅈㅉㅊㅋㅌㅍㅎㅏㅐㅑㅒㅓㅔㅕㅖㅗㅛㅜㅠㅡㅣ\";\r\n\tvar CHO_DATA = \"ㄱㄲㄴㄷㄸㄹㅁㅂㅃㅅㅆㅇㅈㅉㅊㅋㅌㅍㅎ\";\r\n\tvar JUNG_DATA = \"ㅏㅐㅑㅒㅓㅔㅕㅖㅗㅘㅙㅚㅛㅜㅝㅞㅟㅠㅡㅢㅣ\";\r\n    var JONG_DATA = \"ㄱㄲㄳㄴㄵㄶㄷㄹㄺㄻㄼㄽㄾㄿㅀㅁㅂㅄㅅㅆㅇㅈㅊㅋㅌㅍㅎ\";\r\n    \r\n\tvar res = \"\";\r\n\tif (src.length === 0)\r\n\treturn res;\r\n\r\n\tvar nCho = -1, nJung = -1, nJong = -1; // 초성, 중성, 종성\r\n\r\n\tfor (var i = 0; i < src.length; i++) {\r\n\t\tvar ch = src.charAt(i);\r\n\t\tvar p = ENG_KEY.indexOf(ch);\r\n\t\tif (p === -1) { // 영자판이 아님\r\n\t\t\t// 남아있는 한글이 있으면 처리\r\n\t\t\tif (nCho !== -1) {\r\n\t\t\t\tif (nJung !== -1) // 초성+중성+(종성)\r\n\t\t\t\t\tres += makeHangul(nCho, nJung, nJong);\r\n\t\t\t\telse // 초성만\r\n\t\t\t\t\tres += CHO_DATA.charAt(nCho);\r\n\t\t\t} else {\r\n\t\t\t\tif (nJung !== -1) // 중성만\r\n\t\t\t\t\tres += JUNG_DATA.charAt(nJung);\r\n\t\t\t\telse if (nJong !== -1) // 복자음\r\n\t\t\t\t\tres += JONG_DATA.charAt(nJong);\r\n\t\t\t}\r\n\t\t\tnCho = -1;\r\n\t\t\tnJung = -1;\r\n\t\t\tnJong = -1;\r\n\t\t\tres += ch;\r\n\t\t} else if (p < 19) { // 자음\r\n\t\t\tif (nJung !== -1) {\r\n\t\t\t\tif (nCho === -1) { // 중성만 입력됨, 초성으로\r\n\t\t\t\t\tres += JUNG_DATA.charAt(nJung);\r\n\t\t\t\t\tnJung = -1;\r\n\t\t\t\t\tnCho = CHO_DATA.indexOf(KOR_KEY.charAt(p));\r\n\t\t\t\t} else { // 종성이다\r\n\t\t\t\t\tif (nJong === -1) { // 종성 입력 중\r\n\t\t\t\t\t\tnJong = JONG_DATA.indexOf(KOR_KEY.charAt(p));\r\n\t\t\t\t\t\tif (nJong === -1) { // 종성이 아니라 초성이다\r\n\t\t\t\t\t\t\tres += makeHangul(nCho, nJung, nJong);\r\n\t\t\t\t\t\t\tnCho = CHO_DATA.indexOf(KOR_KEY.charAt(p));\r\n\t\t\t\t\t\t\tnJung = -1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (nJong === 0 && p === 9) { // ㄳ\r\n\t\t\t\t\t\tnJong = 2;\r\n\t\t\t\t\t} else if (nJong === 3 && p === 12) { // ㄵ\r\n\t\t\t\t\t\tnJong = 4;\r\n\t\t\t\t\t} else if (nJong === 3 && p === 18) { // ㄶ\r\n\t\t\t\t\t\tnJong = 5;\r\n\t\t\t\t\t} else if (nJong === 7 && p === 0) { // ㄺ\r\n\t\t\t\t\t\tnJong = 8;\r\n\t\t\t\t\t} else if (nJong === 7 && p === 6) { // ㄻ\r\n\t\t\t\t\t\tnJong = 9;\r\n\t\t\t\t\t} else if (nJong === 7 && p === 7) { // ㄼ\r\n\t\t\t\t\t\tnJong = 10;\r\n\t\t\t\t\t} else if (nJong === 7 && p === 9) { // ㄽ\r\n\t\t\t\t\t\tnJong = 11;\r\n\t\t\t\t\t} else if (nJong === 7 && p === 16) { // ㄾ\r\n\t\t\t\t\t\tnJong = 12;\r\n\t\t\t\t\t} else if (nJong === 7 && p === 17) { // ㄿ\r\n\t\t\t\t\t\tnJong = 13;\r\n\t\t\t\t\t} else if (nJong === 7 && p === 18) { // ㅀ\r\n\t\t\t\t\t\tnJong = 14;\r\n\t\t\t\t\t} else if (nJong === 16 && p === 9) { // ㅄ\r\n\t\t\t\t\t\tnJong = 17;\r\n\t\t\t\t\t} else { // 종성 입력 끝, 초성으로\r\n\t\t\t\t\t\tres += makeHangul(nCho, nJung, nJong);\r\n\t\t\t\t\t\tnCho = CHO_DATA.indexOf(KOR_KEY.charAt(p));\r\n\t\t\t\t\t\tnJung = -1;\r\n\t\t\t\t\t\tnJong = -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else { // 초성 또는 (단/복)자음이다\r\n\t\t\t\tif (nCho === -1) { // 초성 입력 시작\r\n\t\t\t\t\tif (nJong !== -1) { // 복자음 후 초성\r\n\t\t\t\t\t\tres += JONG_DATA.charAt(nJong);\r\n\t\t\t\t\t\tnJong = -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnCho = CHO_DATA.indexOf(KOR_KEY.charAt(p));\r\n\t\t\t\t} else if (nCho === 0 && p === 9) { // ㄳ\r\n\t\t\t\t\tnCho = -1;\r\n\t\t\t\t\tnJong = 2;\r\n\t\t\t\t} else if (nCho === 2 && p === 12) { // ㄵ\r\n\t\t\t\t\tnCho = -1;\r\n\t\t\t\t\tnJong = 4;\r\n\t\t\t\t} else if (nCho === 2 && p === 18) { // ㄶ\r\n\t\t\t\t\tnCho = -1;\r\n\t\t\t\t\tnJong = 5;\r\n\t\t\t\t} else if (nCho === 5 && p === 0) { // ㄺ\r\n\t\t\t\t\tnCho = -1;\r\n\t\t\t\t\tnJong = 8;\r\n\t\t\t\t} else if (nCho === 5 && p === 6) { // ㄻ\r\n\t\t\t\t\tnCho = -1;\r\n\t\t\t\t\tnJong = 9;\r\n\t\t\t\t} else if (nCho === 5 && p === 7) { // ㄼ\r\n\t\t\t\t\tnCho = -1;\r\n\t\t\t\t\tnJong = 10;\r\n\t\t\t\t} else if (nCho === 5 && p === 9) { // ㄽ\r\n\t\t\t\t\tnCho = -1;\r\n\t\t\t\t\tnJong = 11;\r\n\t\t\t\t} else if (nCho === 5 && p === 16) { // ㄾ\r\n\t\t\t\t\tnCho = -1;\r\n\t\t\t\t\tnJong = 12;\r\n\t\t\t\t} else if (nCho === 5 && p === 17) { // ㄿ\r\n\t\t\t\t\tnCho = -1;\r\n\t\t\t\t\tnJong = 13;\r\n\t\t\t\t} else if (nCho === 5 && p === 18) { // ㅀ\r\n\t\t\t\t\tnCho = -1;\r\n\t\t\t\t\tnJong = 14;\r\n\t\t\t\t} else if (nCho === 7 && p === 9) { // ㅄ\r\n\t\t\t\t\tnCho = -1;\r\n\t\t\t\t\tnJong = 17;\r\n\t\t\t\t} else { // 단자음을 연타\r\n\t\t\t\t\tres += CHO_DATA.charAt(nCho);\r\n\t\t\t\t\tnCho = CHO_DATA.indexOf(KOR_KEY.charAt(p));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else { // 모음\r\n\t\t\tif (nJong !== -1) { // (앞글자 종성), 초성+중성\r\n\t\t\t\t// 복자음 다시 분해\r\n\t\t\t\tvar newCho; // (임시용) 초성\r\n\t\t\t\tif (nJong === 2) { // ㄱ, ㅅ\r\n\t\t\t\t\tnJong = 0;\r\n\t\t\t\t\tnewCho = 9;\r\n\t\t\t\t} else if (nJong === 4) { // ㄴ, ㅈ\r\n\t\t\t\t\tnJong = 3;\r\n\t\t\t\t\tnewCho = 12;\r\n\t\t\t\t} else if (nJong === 5) { // ㄴ, ㅎ\r\n\t\t\t\t\tnJong = 3;\r\n\t\t\t\t\tnewCho = 18;\r\n\t\t\t\t} else if (nJong === 8) { // ㄹ, ㄱ\r\n\t\t\t\t\tnJong = 7;\r\n\t\t\t\t\tnewCho = 0;\r\n\t\t\t\t} else if (nJong === 9) { // ㄹ, ㅁ\r\n\t\t\t\t\tnJong = 7;\r\n\t\t\t\t\tnewCho = 6;\r\n\t\t\t\t} else if (nJong === 10) { // ㄹ, ㅂ\r\n\t\t\t\t\tnJong = 7;\r\n\t\t\t\t\tnewCho = 7;\r\n\t\t\t\t} else if (nJong === 11) { // ㄹ, ㅅ\r\n\t\t\t\t\tnJong = 7;\r\n\t\t\t\t\tnewCho = 9;\r\n\t\t\t\t} else if (nJong === 12) { // ㄹ, ㅌ\r\n\t\t\t\t\tnJong = 7;\r\n\t\t\t\t\tnewCho = 16;\r\n\t\t\t\t} else if (nJong === 13) { // ㄹ, ㅍ\r\n\t\t\t\t\tnJong = 7;\r\n\t\t\t\t\tnewCho = 17;\r\n\t\t\t\t} else if (nJong === 14) { // ㄹ, ㅎ\r\n\t\t\t\t\tnJong = 7;\r\n\t\t\t\t\tnewCho = 18;\r\n\t\t\t\t} else if (nJong === 17) { // ㅂ, ㅅ\r\n\t\t\t\t\tnJong = 16;\r\n\t\t\t\t\tnewCho = 9;\r\n\t\t\t\t} else { // 복자음 아님\r\n\t\t\t\t\tnewCho = CHO_DATA.indexOf(JONG_DATA.charAt(nJong));\r\n\t\t\t\t\tnJong = -1;\r\n\t\t\t\t}\r\n\t\t\t\tif (nCho !== -1) // 앞글자가 초성+중성+(종성)\r\n\t\t\t\t\tres += makeHangul(nCho, nJung, nJong);\r\n\t\t\t\telse                    // 복자음만 있음\r\n\t\t\t\t\tres += JONG_DATA.charAt(nJong);\r\n\r\n\r\n\t\t\t\tnCho = newCho;\r\n\t\t\t\tnJung = -1;\r\n\t\t\t\tnJong = -1;\r\n\t\t\t}\r\n\t\t\tif (nJung === -1) { // 중성 입력 중\r\n\t\t\t\tnJung = JUNG_DATA.indexOf(KOR_KEY.charAt(p));\r\n\t\t\t} else if (nJung === 8 && p === 19) {            // ㅘ\r\n\t\t\t\tnJung = 9;\r\n\t\t\t} else if (nJung === 8 && p === 20) {            // ㅙ\r\n\t\t\t\tnJung = 10;\r\n\t\t\t} else if (nJung === 8 && p === 32) {            // ㅚ\r\n\t\t\t\tnJung = 11;\r\n\t\t\t} else if (nJung === 13 && p === 23) {           // ㅝ\r\n\t\t\t\tnJung = 14;\r\n\t\t\t} else if (nJung === 13 && p === 24) {           // ㅞ\r\n\t\t\t\tnJung = 15;\r\n\t\t\t} else if (nJung === 13 && p === 32) {           // ㅟ\r\n\t\t\t\tnJung = 16;\r\n\t\t\t} else if (nJung === 18 && p === 32) {           // ㅢ\r\n\t\t\t\tnJung = 19;\r\n\t\t\t} else { // 조합 안되는 모음 입력\r\n\t\t\t\tif (nCho !== -1) { // 초성+중성 후 중성\r\n\t\t\t\t\tres += makeHangul(nCho, nJung, nJong);\r\n\t\t\t\t\tnCho = -1;\r\n\t\t\t\t} else // 중성 후 중성\r\n\t\t\t\t\tres += JUNG_DATA.charAt(nJung);\r\n\t\t\t\tnJung = -1;\r\n\t\t\t\tres += KOR_KEY.charAt(p);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// 마지막 한글이 있으면 처리\r\n\tif (nCho !== -1) {\r\n\t\tif (nJung !== -1) // 초성+중성+(종성)\r\n\t\t\tres += makeHangul(nCho, nJung, nJong);\r\n\t\telse                 // 초성만\r\n\t\t\tres += CHO_DATA.charAt(nCho);\r\n\t} else {\r\n\t\tif (nJung !== -1) // 중성만\r\n\t\t\tres += JUNG_DATA.charAt(nJung);\r\n\t\telse { // 복자음\r\n\t\t\tif (nJong !== -1)\r\n\t\t\t\tres += JONG_DATA.charAt(nJong);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction makeHangul(nCho, nJung, nJong) {\r\n\t\treturn String.fromCharCode(0xac00 + nCho * 21 * 28 + nJung * 28 + nJong + 1);\r\n\t}\r\n\r\n\treturn res;\r\n}\r\n\r\n/**\r\n * 숫자를 천단위 , 표시 반환\r\n * @param {Number} x \r\n * @return {String} 천단위 ,\r\n */\r\nexports.displNum = function(x) {\r\n\tif (x === undefined) x=0;\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}","import React , {Component}from 'react';\r\n\r\n/**\r\n * Loading\r\n */\r\nclass Loading extends Component {\r\n    render() {\r\n        return <div className={\"lds-ring\"}><div></div><div></div><div></div><div></div></div>;\r\n    }\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\n/**\r\n * Example\r\n * \r\n * <Grid ref={'grid'} onClick={this.onClickGrid}\r\n                    data={this.state.gridData}\r\n                    columns={this.state.columns}\r\n                    bodyHeight={this.state.bodyHeight}\r\n                />\r\n * <Pagination ref={'page'}\r\n                    page={this.state.pagesPage}\r\n                    totalCount={this.state.pagesTotalCount}\r\n                    perPage={this.state.pagesPerPage} pageCount={this.state.pagesPageCount}\r\n                    onClickItem={this.onClickPageItem}/>\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listData:[],\r\n            gridData:[],\r\n            ...\r\n            pagesPage:1,\r\n            pagesTotalCount:0,\r\n            pagesPerPage:5\r\n        };\r\n        this.onClickPageItem = this.onClickPageItem.bind(this);\r\n    }\r\n    onClickPageItem(page,startIdx,lastIdx) {\r\n        let newGridData = [];\r\n        for (let i=startIdx; i<lastIdx; i++) {\r\n            newGridData.push(this.state.listData[i]);\r\n        }\r\n        this.setState({pagesPage:page,gridData:newGridData});\r\n    }\r\n */\r\nclass Pagination extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClickItem = this.onClickItem.bind(this);\r\n        this.state = {\r\n            firstPage:1,\r\n            lastPage:10,\r\n            pageCount:10\r\n        };\r\n    }\r\n    \r\n    onClickItem(page) {\r\n        let {firstPage,pageCount} = this.state;\r\n        const maxPage = parseInt(Math.ceil(this.props.totalCount / this.props.perPage));\r\n        let movePage = (pageCount * parseInt(maxPage / pageCount))+1;\r\n        if (movePage >= maxPage) {\r\n            movePage = maxPage;\r\n        }\r\n        if (this.props.page === 1) {\r\n            firstPage=1;\r\n        }\r\n\r\n        if (page === this.props.page) return;\r\n        if (page === '<<') {\r\n            this.setState({firstPage:1});\r\n            this.props.onClickItem(1);\r\n        } else if (page === '>>') {\r\n            this.setState({firstPage:movePage});\r\n            this.props.onClickItem(maxPage);\r\n        } else if (page === '>') {\r\n            this.setState({firstPage:firstPage + pageCount});\r\n            this.props.onClickItem(firstPage + pageCount);\r\n        } else if (page === '<') {\r\n            this.setState({firstPage:firstPage - pageCount});\r\n            this.props.onClickItem(firstPage - pageCount);\r\n        } else{\r\n            let realMovePage = page;\r\n            if (realMovePage > maxPage) {\r\n                realMovePage = maxPage;\r\n            }\r\n            this.props.onClickItem(realMovePage);\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        let {firstPage,pageCount} = this.state;\r\n        if (this.props.pageCount && this.state.pageCount !== this.props.pageCount) \r\n            this.setState( {pageCount:this.props.pageCount} );\r\n        \r\n        const maxPage = parseInt(Math.ceil(this.props.totalCount / this.props.perPage));\r\n        \r\n        let pages = [];\r\n        if (firstPage > maxPage || this.props.page === 1) {\r\n            firstPage = 1;\r\n        }\r\n        let p=firstPage;\r\n                \r\n        if (this.props.totalCount === 0) {\r\n            // 한페이지도 없을 때\r\n            pages.push(<PageItem page={1} index={0} activate={true} onClick={(e) => console.log(e)} key={Math.random()} />); \r\n        } else {\r\n            // 1페이지 이상 있을 때\r\n            for (let i = 0; i <this.props.totalCount; i += this.props.perPage) {\r\n                if (p > pageCount && p === firstPage) {\r\n                    if (p > pageCount*2) {\r\n                        pages.push(<PageItem appendClass=\"first\" page={'<<'} index={i} onClick={this.onClickItem} key={Math.random()} />);\r\n                    }\r\n                    pages.push(<PageItem appendClass=\"pre\" page={'<'} index={i} onClick={this.onClickItem} key={Math.random()} />);\r\n                }\r\n\r\n                if (maxPage < p) break;\r\n                \r\n                if (p >= firstPage + pageCount) {\r\n                    if (p === firstPage + pageCount) {\r\n                        pages.push(<PageItem appendClass=\"next\" page={'>'} index={i} onClick={this.onClickItem} key={Math.random()} />);\r\n                        if (maxPage-firstPage > (pageCount*2)) {\r\n                            pages.push(<PageItem appendClass=\"last\" page={'>>'} index={i} onClick={this.onClickItem} key={Math.random()} />);\r\n                        }\r\n                        break;\r\n                    } \r\n                }\r\n                pages.push(<PageItem page={p} index={i} active={this.props.page === p} onClick={this.onClickItem} key={Math.random()} />);\r\n                p++;\r\n            }\r\n        }\r\n\r\n        // if (pages.length < 1) pages.push(<PageItem page={1} index={0} active={true} onClick={(e) => console.log(e)} key={Math.random()}/>);\r\n\r\n        return <div className={'pages'}>\r\n            {pages}\r\n        </div>\r\n    }\r\n}\r\n\r\nclass PageItem extends React.Component {\r\n    render() {\r\n        let {appendClass} = this.props;\r\n        const {active, onClick, page} = this.props;\r\n        if (appendClass === undefined )\r\n            appendClass = \"\";\r\n        return <div className={'pageItem' + (active ? ' active' : '') + \" \" + appendClass} onClick={(e) => onClick(page)}>{page}</div>\r\n    }\r\n}\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport { common } from 'comp';\r\n\r\n/**\r\n * 공통 메세지\r\n */\r\nclass Msg extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            option:{\r\n                position: \"top-right\",\r\n                autoClose: 4000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined\r\n            }\r\n        }\r\n        this.ok = this.ok.bind(this);\r\n        this.info = this.info.bind(this);\r\n        this.warn = this.warn.bind(this);\r\n        this.error = this.error.bind(this);\r\n        this.msg = this.msg.bind(this);\r\n        this.setUserOption = this.setUserOption.bind(this);\r\n    }\r\n    \r\n    setUserOption(opts,useropts) {\r\n        if (!useropts) return opts;\r\n\r\n        if (useropts.position)\r\n            opts.position = useropts.position;\r\n        if (useropts.autoClose)\r\n            opts.autoClose = useropts.autoClose;\r\n        if (useropts.hideProgressBar)\r\n            opts.hideProgressBar = useropts.hideProgressBar;\r\n        if (useropts.closeOnClick)\r\n            opts.closeOnClick = useropts.closeOnClick;\r\n        if (useropts.pauseOnHover)\r\n            opts.pauseOnHover = useropts.pauseOnHover;\r\n        if (useropts.draggable)\r\n            opts.draggable = useropts.draggable;\r\n        if (useropts.progress)\r\n            opts.progress = useropts.progress;\r\n        return opts;\r\n    }\r\n    \r\n    ok(msg,useropt) {\r\n        if (process.env.NODE_ENV === \"development\") {\r\n            console.log(common.main);\r\n            console.log(\">> msg type : ok\");\r\n            console.log(msg);\r\n        }\r\n        msg = this.shutMsg(msg);\r\n        common.main.msg(msg);\r\n        // let opt = this.state.option;\r\n        // opt = this.setUserOption(opt,useropt);\r\n        // opt.autoClose = 4000;\r\n        // toast.success(msg, opt);\r\n    }\r\n    \r\n    info(msg,useropt) {\r\n        if (process.env.NODE_ENV === \"development\") {\r\n            console.log(common.main);\r\n            console.log(\">> msg type : ok\");\r\n            console.log(msg);\r\n        }\r\n        msg = this.shutMsg(msg);\r\n        common.main.msg(msg);\r\n        // let opt = this.state.option;\r\n        // opt = this.setUserOption(opt,useropt);\r\n        // opt.autoClose = 4000;\r\n        // toast.info(msg, opt);\r\n    }\r\n    \r\n    warn(msg,useropt) {\r\n        if (process.env.NODE_ENV === \"development\") {\r\n            console.log(common.main);\r\n            console.log(\">> msg type : ok\");\r\n            console.log(msg);\r\n        }\r\n        msg = this.shutMsg(msg);\r\n        common.main.msg(msg);\r\n        // let opt = this.state.option;\r\n        // opt = this.setUserOption(opt,useropt);\r\n        // opt.autoClose = 4000;\r\n        // toast.warn(msg, opt);\r\n    }\r\n    \r\n    error(msg,useropt) {\r\n        if (process.env.NODE_ENV === \"development\") {\r\n            console.log(common.main);\r\n            console.log(\">> msg type : ok\");\r\n            console.log(msg);\r\n        }\r\n        msg = this.shutMsg(msg);\r\n        common.main.msg(msg);\r\n        // let opt = this.state.option;\r\n        // opt = this.setUserOption(opt,useropt);\r\n        // opt.autoClose = 4000;\r\n        // toast.error(msg, opt);\r\n    }\r\n    \r\n    msg(msg,useropt) {\r\n        if (process.env.NODE_ENV === \"development\") {\r\n            console.log(common.main);\r\n            console.log(\">> msg type : ok\");\r\n            console.log(msg);\r\n        }\r\n        msg = this.shutMsg(msg);\r\n        common.main.msg(msg);\r\n        // let opt = this.state.option;\r\n        // opt = this.setUserOption(opt,useropt);\r\n        // opt.autoClose = 4000;\r\n        // toast(msg, opt);\r\n    }\r\n    \r\n    shutMsg(msg) {\r\n        const maxLen = 40;\r\n        if (msg.length > maxLen)\r\n            msg = msg.substr(0,maxLen) + \"...\";\r\n        return msg;\r\n    }\r\n}\r\n\r\nexport default new Msg();","import React, { Component } from 'react';\r\n\r\n/**\r\n * 화면명 : 확인 팝업\r\n * 화면 경로 : 확인 팝업\r\n * 화면 코드 : \r\n * 참고 : \r\n */\r\nclass Confirm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClose = this.onClose.bind(this);\r\n        this.onOk = this.onOk.bind(this);\r\n    }\r\n\r\n    /**\r\n     * 닫기 버튼 클릭 핸들러\r\n     */\r\n    onClose() {\r\n        try {\r\n            if (this.props.confirmCancelFn) this.props.confirmCancelFn();\r\n        } catch (err) { console.log(err) }\r\n        this.props.main.hideConfirm();\r\n    }\r\n\r\n    /**\r\n     * 확인 버튼 클릭 핸들러\r\n     */\r\n    onOk() {\r\n        try {\r\n            if (this.props.confirmOkfn) this.props.confirmOkfn();\r\n        } catch (err) { console.log(err) }\r\n        this.props.main.hideConfirm();\r\n    }\r\n\r\n    render() {\r\n        let {\r\n            confirmMessage, okLabel, cancelLabel\r\n        } = this.props;\r\n        if (okLabel === undefined) okLabel = \"확인\";\r\n        if (cancelLabel === undefined) cancelLabel = \"닫기\";\r\n        let top = ((document.getElementById('root').clientHeight - (330)) / 2);\r\n        return <div className=\"modal_wrapper\">\r\n            <div className=\"modal_content dialog_modal\" style={{ top: top }}>\r\n                <div className=\"modal_body\">\r\n                    <div className=\"msg\">\r\n                        <p className=\"txt t1\">{confirmMessage}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal_footer\" style={{ display: \"flex\" }}>\r\n                    <a href={() => console.log('cancel')} className=\"btn btn_white\" onClick={() => this.onClose()}>{cancelLabel}</a>\r\n                    <a href={() => console.log('ok')} className=\"btn btn_black\" onClick={() => this.onOk()} style={{ marginLeft: 7 }}>{okLabel}</a>\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default Confirm;","import React,{Component} from 'react';\r\n\r\n/**\r\n * 화면명 : 요청시 서버 반응없을때 표시\r\n * 화면 경로 : \r\n * 화면 코드 : \r\n * 참고 : \r\n */\r\nclass DeadServer extends Component {\r\n    render() {\r\n        return <div className=\"deadServer mainContent\">\r\n            <div><i className=\"axi axi-exclamation-triangle\"></i>서버와 통신이 되지 않습니다.</div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default DeadServer;","import React,{Component} from 'react';\r\n// import CommonCode from 'main/CommonCode';\r\n\r\n/**\r\n * 시스템 점검중\r\n */\r\nclass SystemChecking extends Component {\r\n    render() {\r\n        // const msg = CommonCode.getValue(\"SYSTEM_CONFIG\",\"SYS_CHECKING_MSG\");\r\n        return <div className=\"page_wrapper\">\r\n            <div className=\"page_header2\">\r\n            <div className=\"brand\">\r\n                <h1 className=\"logo\"><a><span className=\"hide\">ESP Energy Intelligence</span></a></h1>\r\n            </div>\r\n            </div>\r\n            <div className=\"page_container2\">\r\n                <div className=\"service_check\">\r\n                    <h3 className=\"tit\">서버 점검으로 인한 서비스 지연 안내</h3>\r\n                    <p className=\"txt\">이용에 불편을 드려 죄송합니다.<br />현재 서버 점검을 실시하고 있어, 접속에 어려움이 있습니다.<br />잠시 후 다시 접속해주세요.</p>          \r\n                </div>\r\n        </div>\r\n      </div>;\r\n    }\r\n}\r\n\r\nexport default SystemChecking;","import React,{Component} from 'react';\r\nimport Draggable from 'react-draggable';\r\n\r\n/**\r\n * 공통 팝업\r\n */\r\nclass Popup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeDrags: 0,\r\n            deltaPosition: {\r\n                x: 0, y: 0\r\n            },\r\n            controlledPosition: {\r\n                x: -400, y: 200\r\n            }\r\n        };\r\n        this.onStart = this.onStart.bind(this);\r\n        this.onStop = this.onStop.bind(this);\r\n        this.onClickOk = this.onClickOk.bind(this);\r\n    }\r\n    \r\n    /**\r\n     * 드래그 시작\r\n     */\r\n    onStart = () => {\r\n        this.setState({activeDrags: ++this.state.activeDrags});\r\n    };\r\n    \r\n    /**\r\n     * 드래그 종료\r\n     */\r\n    onStop = () => {\r\n        this.setState({activeDrags: --this.state.activeDrags});\r\n    };\r\n    \r\n    /**\r\n     * 확인 버튼 클릭 핸들러\r\n     */\r\n    onClickOk() {\r\n        if (this.props.okFn)\r\n            this.props.okFn();\r\n        this.props.onClose();\r\n    }\r\n    \r\n    render() {\r\n        const {title, onClose} = this.props;\r\n        let {opts,content} = this.props;\r\n        if (opts === undefined) opts = {headerVisiable:true,popupBtnAreaVisible:true};\r\n        let {headerVisiable,popupBtnAreaVisible, contentAppendClass} = opts;\r\n        if (headerVisiable === undefined) headerVisiable = true;\r\n        if (popupBtnAreaVisible === undefined) popupBtnAreaVisible = true;\r\n        if (contentAppendClass === undefined) contentAppendClass = \"model_content\";\r\n        let popupSty = {};\r\n        let okLabel = \"확인\";\r\n        let closeLabel = \"취소\";\r\n        if (opts) {\r\n            if (opts.width)\r\n                popupSty.width = parseInt(String(opts.width).replace(/px/gi,\"\"));\r\n            if (opts.height) {\r\n                popupSty.height = parseInt(String(opts.height).replace(/px/gi,\"\"));\r\n                // 가운데 위치\r\n                try {\r\n                    popupSty.top = ((document.getElementById('root').clientHeight - (popupSty.height+200)) / 2);\r\n                } catch (err) {\r\n                    console.log(err);\r\n                }\r\n            }\r\n            if (opts.okLabel)\r\n                okLabel = opts.okLabel;\r\n            if (opts.closeLabel)\r\n                closeLabel = opts.closeLabel;\r\n        }\r\n        // content가 JSX가 아닌 그냥 메세지 일때\r\n        if ((typeof content) === \"string\") {\r\n            content = <div className={\"popupContent msg\" + (popupBtnAreaVisible ? '' : ' addbtnarea')}><div className=\"content\"><div>{content}</div></div></div>;\r\n        } else {\r\n            content = <div className={\"popupContent\" + (popupBtnAreaVisible ? '' : ' addbtnarea')}><div className=\"content\">{content}</div></div>;\r\n        }\r\n        return <div className=\"modal_wrapper\">\r\n            <Draggable\r\n                axis=\"both\"\r\n                handle=\".popupHandler\"\r\n                defaultPosition={{x: 0, y: 0}}\r\n                position={null}\r\n                grid={[1, 1]}\r\n                scale={1}\r\n                onStart={this.onStart}\r\n                // onDrag={this.handleDrag}\r\n                onStop={this.onStop}>\r\n            <div className={\"modal_content popup \" + contentAppendClass} style={popupSty}>\r\n                <div className=\"popupHandler\"></div>\r\n                {headerVisiable ? <h2 className=\"modal_tit\">{title}</h2> : null}\r\n                {content}\r\n                {popupBtnAreaVisible\r\n                    ? <div className={\"popupBtnArea btn_area\"}><p className=\"btn2\">\r\n                        <button className=\"btn btn_white\" onClick={onClose}>{closeLabel}</button>\r\n                        <button className=\"btn btn_black\" onClick={() => this.onClickOk()}>{okLabel}</button>\r\n                    </p></div> : null}\r\n                <button className=\"btn btn_close\" onClick={onClose}><span className=\"hide\">닫기</span></button>\r\n            </div>\r\n            </Draggable>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default Popup;","import React, {Component} from 'react';\r\n\r\n/**\r\n * 모달 배경\r\n */\r\nclass Modal extends Component {\r\n    render() {\r\n        return <div className=\"mainModal\"></div>\r\n    }\r\n}\r\n\r\nexport default Modal;","/**\r\n * 그리드에 명칭 컬럼 클릭 랜더러\r\n * use example\r\n * \r\n * import {NameRenderer} from 'comp';\r\n * constructor(props) {\r\n *  ...\r\n *  this.onClickGridNameColumn = this.onClickGridNameColumn.bind(this);\r\n * }\r\n * onResultList(res) {\r\n *  ...\r\n *  const columns = [\r\n      ...\r\n      {name:'modelName',header:'모델명', minWidth:100,\r\n            renderer: { type: NameRenderer ,options: {\r\n                listData:res.list,labelKey:\"modelName\",\r\n                onClickGridNameColumn:this.onClickGridNameColumn\r\n            } }\r\n        }\r\n *  ];\r\n *  this.setState({... columns:columns});\r\n * }\r\n * onClickGrid(gridEvt) {\r\n        this.setState( {selectionRowKey:gridEvt.rowKey,selectionItem:this.state.gridData[gridEvt.rowKey],selectionColumName:gridEvt.columnName} );\r\n    }\r\n    onDClickGrid(gridEvt) {\r\n        this.setState({showDetail:true});\r\n    }\r\n * \r\n */\r\nclass NameRenderer {\r\n    constructor(props) {\r\n        const el = document.createElement('a');\r\n        // el.className = \"button basefont btn btn-info btn-sm\";\r\n        \r\n        const { listData, onClickGridNameColumn,labelKey } = props.columnInfo.renderer.options;\r\n        let item = undefined;\r\n        if (listData && listData.length > 0)\r\n        item = listData[props.rowKey];\r\n        if (item === undefined) item = {};\r\n        el.className=\"nameLink link\";\r\n        el.title=item[labelKey];\r\n        el.innerText = item[labelKey];\r\n        el.href=\"#\";\r\n        el.addEventListener(\"click\",(e) => onClickGridNameColumn(item,e,props));\r\n        this.el = el;\r\n    }\r\n    \r\n    getElement() {\r\n        return this.el;\r\n    }\r\n}\r\n\r\nexport default NameRenderer;","import React from 'react';\r\n\r\nclass Validation extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.chkPhone = this.chkPhone.bind(this);\r\n        this.chkEmail = this.chkEmail.bind(this);\r\n        this.chkId = this.chkId.bind(this);\r\n        this.chkPw = this.chkPw.bind(this);\r\n        this.chkNumber = this.chkNumber.bind(this);\r\n        this.filterSchKeyword = this.filterSchKeyword.bind(this);\r\n    }\r\n\r\n    // 숫자만 체크 정규식\r\n    /* eslint-disable */\r\n    numberExp = /^[0-9]+$/;\r\n\r\n    // 이메일 체크 정규식\r\n    /* eslint-disable */\r\n    emailExp = /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\r\n    // 일반 전화번호 정규식\r\n    /* eslint-disable */\r\n    telNoExp = /^\\d{2,3}-\\d{3,4}-\\d{4}$/;\r\n\r\n    // 아이디나 비밀번호 정규식\r\n    /* eslint-disable */\r\n    idExp = /^[a-z0-9_]{4,20}$/;\r\n\r\n    // 비밀번호 정규식 : 영문자,특수문자 조합 4자리에서 12자리 이하\r\n    /* eslint-disable */\r\n    pwExp = /^(?=.*[~`!@#$%\\\\^&*()-])(?=.*[a-zA-Z]).{4,12}$/;\r\n\r\n    // 숫자,영소문자,영대문자,특수문자 조합된 4자리이상 12자리 이하\r\n    // /^(?=.*[0-9])(?=.*[~`!@#$%\\\\^&*()-])(?=.*[a-z])(?=.*[A-Z]).{4,12}$/\r\n    // 휴대폰번호 체크 정규식\r\n    /* eslint-disable */\r\n    phoneExp = /^01([0|1|6|7|8|9])-?([0-9]{3,4})-?([0-9]{4})$/;\r\n    // phoneNoExp = /^\\d{3}-\\d{3,4}-\\d{4}$/;\r\n\r\n    // 모델명\r\n    /* eslint-disable */\r\n    modelNameExp=/^[가-힣a-zA-Z-_0-9 ]{1,50}$/;\r\n\r\n    // 모델 닉네임\r\n    /* eslint-disable */\r\n    modelNickExp=/^[a-z_]{1,10}$/;\r\n\r\n    // Service명\r\n    /* eslint-disable */\r\n    serviceNameExp=/^[가-힣a-zA-Z-_0-9 ]{1,50}$/;\r\n    // 자원 그룹명\r\n    /* eslint-disable */\r\n    resourceGroupNameExp=/^[가-힣a-zA-Z-_0-9 ]{1,20}$/;\r\n    // 서비스 그룹명\r\n    /* eslint-disable */\r\n    serviceGroupNameExp=/^[가-힣a-zA-Z-_0-9 ]{1,50}$/;\r\n    // 서비스 DAG ID\r\n    /* eslint-disable */\r\n    serviceDagIdExp=/^[a-zA-Z_0-9]{1,30}$/;\r\n\r\n    // 검색어에 특수문자 제거하기위한 정규식\r\n    /* eslint-disable */\r\n    searchExp = /[\\{\\}\\[\\]\\/?.,;:|\\)*~`!^\\-+<>@\\#$%&\\\\\\=\\(\\'\\\"]/gi;\r\n    \r\n    // 공통 코드\r\n    /* eslint-disable */\r\n    commCodeExp = /^[a-zA-Z_0-9]{2,30}$/;\r\n\r\n    chkTelNo(chkVal) {\r\n        let ret = {result:true, errMsg:\"\"};\r\n        let chk = this.telNoExp.test(chkVal);\r\n        ret.result = chk;\r\n        if (!chk) ret.errMsg = \"전화번호 형식에 맞지 않습니다\";\r\n        return ret;\r\n    }\r\n\r\n    chkPhone(chkVal) {\r\n        let ret = {result:true, errMsg:\"\"};\r\n        let chk = this.phoneExp.test(chkVal);\r\n        ret.result = chk;\r\n        if (!chk) ret.errMsg = \"휴대번호 형식에 맞지 않습니다\";\r\n        return ret;\r\n    }\r\n\r\n    chkEmail(chkVal) {\r\n        let ret = {result:true, errMsg:\"\"};\r\n        let chk = this.emailExp.test(chkVal);\r\n        ret.result = chk;\r\n        if (!chk) ret.errMsg = \"이메일 형식에 맞지 않습니다\";\r\n        return ret;\r\n    }\r\n\r\n    chkId(chkVal) {\r\n        let ret = {result:true, errMsg:\"\"};\r\n        let chk = this.idExp.test(chkVal);\r\n        ret.result = chk;\r\n        if (!chk) ret.errMsg = \"아이디 형식에 맞지 않습니다\";\r\n        return ret;\r\n    }\r\n\r\n    chkPw(chkVal) {\r\n        let ret = {result:true, errMsg:\"\"};\r\n        let chk = this.pwExp.test(chkVal);\r\n        ret.result = chk;\r\n        if (!chk) ret.errMsg = \"비밀번호 형식에 맞지 않습니다\";\r\n        return ret;\r\n    }\r\n\r\n    chkNumber(chkVal) {\r\n        let ret = {result:true, errMsg:\"\"};\r\n        let chk = this.numberExp.test(chkVal);\r\n        ret.result = chk;\r\n        if (!chk) ret.errMsg = \"숫자가 아닙니다.\";\r\n        return ret;\r\n    }\r\n\r\n    chkModelName(chkVal) {\r\n        let ret = {result:true, errMsg:\"\"};\r\n        let chk = this.modelNameExp.test(chkVal);\r\n        ret.result = chk;\r\n        if (!chk) ret.errMsg = \"모델명 형식에 맞지 않습니다\";\r\n        return ret;\r\n    }\r\n    chkModelNick(chkVal) {\r\n        let ret = {result:true, errMsg:\"\"};\r\n        let chk = this.modelNickExp.test(chkVal);\r\n        ret.result = chk;\r\n        if (!chk) ret.errMsg = \"모델 닉네임 형식에 맞지 않습니다\";\r\n        return ret;\r\n    }\r\n\r\n    chkServiceName(chkVal) {\r\n        let ret = {result:true, errMsg:\"\"};\r\n        let chk = this.serviceNameExp.test(chkVal);\r\n        ret.result = chk;\r\n        if (!chk) ret.errMsg = \"Service명 형식에 맞지 않습니다\";\r\n        return ret;\r\n    }\r\n\r\n    chkResourceGroupName(chkVal) {\r\n        let ret = {result:true, errMsg:\"\"};\r\n        let chk = this.resourceGroupNameExp.test(chkVal);\r\n        ret.result = chk;\r\n        if (!chk) ret.errMsg = \"자원 그룹명 형식에 맞지 않습니다\";\r\n        return ret;\r\n    }\r\n\r\n    chkCommonCode(chkVal) {\r\n        let ret = {result:true, errMsg:\"\"};\r\n        let chk = this.commCodeExp.test(chkVal);\r\n        ret.result = chk;\r\n        if (!chk) ret.errMsg = \"공통코드 형식에 맞지 않습니다\";\r\n        return ret;\r\n    }\r\n\r\n    filterSchKeyword(chkVal) {\r\n        if (!this.searchExp.test(chkVal))\r\n            return chkVal;\r\n        return chkVal.replace(this.searchExp,\"\");\r\n    }\r\n\r\n    chkServiceGroupName(chkVal) {\r\n        let ret = {result:true, errMsg:\"\"};\r\n        let chk = this.serviceGroupNameExp.test(chkVal);\r\n        ret.result = chk;\r\n        if (!chk) ret.errMsg = \"서비스 그룹명 형식에 맞지 않습니다\";\r\n        return ret;\r\n    }\r\n\r\n    chkServiceDagIdExp(chkVal) {\r\n        let ret = {result:true, errMsg:\"\"};\r\n        let chk = this.serviceDagIdExp.test(chkVal);\r\n        ret.result = chk;\r\n        if (!chk) ret.errMsg = \"DAG ID 형식에 맞지 않습니다\";\r\n        return ret;\r\n    }\r\n\r\n}\r\n\r\nexport default new Validation();\r\n","import React, {Component} from 'react';\r\n\r\n/**\r\n * Message 팝업\r\n */\r\nclass Message extends Component {\r\n    render() {\r\n\t\tlet {okLabel, onClickOk} = this.props;\r\n\t\tif (okLabel === undefined) okLabel = \"확인\";\r\n\t\tlet top = ((document.getElementById('root').clientHeight - (330)) / 2);\r\n\t\treturn <div className=\"modal_wrapper\">\r\n\t\t\t<div className=\"modal_content dialog_modal\" style={{top:top}}>\r\n\t\t\t\t<div className=\"modal_body\">\r\n\t\t\t\t<div className=\"msg\">\r\n\t\t\t\t\t<p className=\"txt t1\">{this.props.message}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"modal_footer\">\r\n\t\t\t\t<a className=\"btn btn_black\" onClick={onClickOk}>{okLabel}</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>;\r\n    }\r\n}\r\n\r\nexport default Message;","import React, {Component} from 'react';\r\n\r\n/**\r\n * 화면명 : 심플 그리드\r\n * 화면 경로 : 심플 그리드\r\n * 화면 코드 : \r\n * 참고 : 간단히 리스트 표현시 TUI GRID를 사용하지 않고 가볍게 보여주기위한 컴퍼넌트\r\n */\r\nclass GridList extends Component {\r\n    render() {\r\n        let {columns,gridData,noDataMsg} = this.props;\r\n        if (noDataMsg === undefined) noDataMsg = \"데이터가 없습니다.\";\r\n        let bodyHeight = 236;\r\n        if (this.props.bodyHeight !== undefined) bodyHeight = this.props.bodyHeight;\r\n        let headers = [];\r\n        let colGroup = [];\r\n        let i;\r\n        let col;\r\n        let colsty;\r\n        let headercellsty;\r\n        const headersty = {height:40};\r\n        const rowsty = {height:40};\r\n        let itm;\r\n        for (i=0; i<columns.length; i++) {\r\n            col = columns[i];\r\n            colsty = {};\r\n            if (col.width !== undefined)\r\n                colsty.width = col.width;\r\n            if (col.align !== undefined)\r\n                colsty.align = col.align;\r\n            colGroup.push(<col style={colsty} key={Math.random()}/>);\r\n\r\n            headercellsty = {verticalAlign:\"middle\"};\r\n            if (col.align !== undefined) {\r\n                headercellsty.textAlign = col.align;\r\n                if (col.align === \"left\")\r\n                    headercellsty.padding = \"0px 13px\";\r\n            }\r\n            headers.push(<th className=\"tui-grid-cell tui-grid-cell-header tui-grid-cell-head\" style={headercellsty} key={Math.random()}>{col.header}</th>);\r\n\r\n        }\r\n\r\n        // make rows\r\n        let rowcols;\r\n        let rows = [];\r\n        let rowcolsty;\r\n        if (gridData.length < 1) {\r\n            rows.push(<NoneRow colSpan={columns.length} noneContent={noDataMsg} key={Math.random()}/>);\r\n        } else {\r\n            for (let j=0; j<gridData.length; j++) {\r\n                itm = gridData[j];\r\n                rowcols = [];\r\n                for (i=0; i<columns.length; i++) {\r\n                    col = columns[i];\r\n                    rowcolsty = {};\r\n                    rowcolsty = {verticalAlign:\"middle\"};\r\n                    for (let s in col) {\r\n                        if (s === \"align\" || s.indexOf(\"padding\") > -1 || s.indexOf(\"margin\") > -1 || s.indexOf(\"Width\") > -1 || s.indexOf(\"Height\") > -1) {\r\n                            if (s === \"align\") {\r\n                                rowcolsty[\"textAlign\"] = col[s];\r\n                                if (col[s] === \"left\")\r\n                                    rowcolsty[\"padding\"] = \"0px 5px\";\r\n                            }\r\n                            else\r\n                                rowcolsty[s] = col[s];\r\n                        }\r\n                    }\r\n                    rowcols.push( \r\n                        <td className=\"tui-grid-cell tui-grid-cell-has-input\" style={rowcolsty} key={Math.random()}>\r\n                            {col.renderer !== undefined\r\n                                ? <col.renderer.type options={col.renderer.options} item={itm} key={Math.random()}/>\r\n                                : <div className=\"tui-grid-cell-content\" key={Math.random()}>{itm[ col.name ]}</div>}\r\n                        </td>\r\n                    );\r\n                }\r\n                rows.push( <tr className=\"tui-grid-row-odd\" style={rowsty}>{rowcols}</tr> );\r\n            }\r\n        }\r\n\r\n        return <div className=\"gridList\">\r\n            <div className=\"tui-grid-header-area\" style={headersty}>\r\n                <table className=\"tui-grid-table\">\r\n                    <colgroup>\r\n                        {colGroup}\r\n                    </colgroup>\r\n                    <tbody>\r\n                        <tr style={headersty}>{headers}</tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"tui-grid-body-area\">\r\n                <div className=\"tui-grid-body-container\" style={{height: bodyHeight,width: \"100%\",overflow: \"auto\"}}>\r\n                    <div className=\"tui-grid-table-container\" style={{top: 0,left: 0,overflow: \"auto\"}}>\r\n                        <table className=\"tui-grid-table\">\r\n                            <colgroup>{colGroup}</colgroup>\r\n                            <tbody>{rows}</tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nclass NoneRow extends Component {\r\n    render() {\r\n        const {colspan} = this.props;\r\n        let {noneContent} = this.props;\r\n        if (!noneContent) noneContent = \"데이터가 없습니다.\";\r\n        return <tr className=\"tui-grid-row-odd\">\r\n            <td className=\"tui-grid-cell tui-grid-cell-has-input\" style={{height:40,textAlign: \"center\"}} colSpan={colspan}>\r\n                <div className=\"tui-grid-cell-content\">{noneContent}</div>\r\n            </td>\r\n        </tr>;\r\n    }\r\n}\r\n\r\nexport default GridList;","import React, { Component } from 'react';\r\nimport { MenuCode, MenuData, MainService, ChangeUserPassword, Logo } from 'main';\r\n\r\n/**\r\n * 화면명 : 메인 상단\r\n * 화면 경로 : 없음.\r\n * 화면 코드 : 없음.\r\n * 참고 : \r\n */\r\nclass MainTop extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            subBgHei: 235\r\n        };\r\n        this.isMenuItemActive = this.isMenuItemActive.bind(this);\r\n        this.onLogout = this.onLogout.bind(this);\r\n        this.onLogoutResult = this.onLogoutResult.bind(this);\r\n        this.onClickChangePw = this.onClickChangePw.bind(this);\r\n    }\r\n\r\n    /**************************************************************************/\r\n    /* 기능 */\r\n    /**************************************************************************/\r\n    /**\r\n     * 메뉴 활성 여부\r\n     * @param {String} menuCode 메뉴 코드\r\n     * @return {boolean} 메뉴 활성여부\r\n     */\r\n    isMenuItemActive(menuCode) {\r\n        return this.props.main.state.menuCode.substr(0, 7) === menuCode;\r\n    }\r\n\r\n    /**\r\n     * 로그아웃\r\n     */\r\n    onLogout() {\r\n        MainService.logout(this.onLogoutResult, this.onLogoutResult);\r\n    }\r\n\r\n    /**************************************************************************/\r\n    /* 핸들러 */\r\n    /**************************************************************************/\r\n    /**\r\n     * 로그아웃 결과 핸들러\r\n     * @param {Object} res\r\n     */\r\n    onLogoutResult(res) {\r\n        this.props.main.setState({ login: false, role: '', username: '', sessionId: '', userInfo: {} });\r\n        this.props.main.onMenuChange(MenuCode.DASHBOARD);\r\n    }\r\n\r\n    /**\r\n     * 비밀번호 변경\r\n     */\r\n    onClickChangePw() {\r\n        const popTitle = \"Change User Password\";\r\n        this.props.main.showPopup(\r\n            popTitle,\r\n            <ChangeUserPassword main={this.props.main} onClose={(e) => this.props.main.hidePopup(popTitle)} />,\r\n            { width: 560, height: 288, popupBtnAreaVisible: false }, null, null\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { role, onMenuChange } = this.props;\r\n        let menuItems = [];\r\n\r\n        // 관리자 메뉴\r\n        if (role === \"ADMIN\") {\r\n            menuItems.push(<MenuItem menu=\"Dashboard\" menuCode={MenuCode.DASHBOARD} currentMenuCode={this.props.main.state.menuCode} onMenuChange={onMenuChange} key={Math.random()} active={this.isMenuItemActive(MenuCode.DASHBOARD)} />);\r\n            menuItems.push(<MenuItem menu=\"Model\" menuCode={MenuCode.MODEL_MANAGER} currentMenuCode={this.props.main.state.menuCode} onMenuChange={onMenuChange} key={Math.random()} active={this.isMenuItemActive(MenuCode.MODEL)} />); // Model\r\n            menuItems.push(<MenuItem menu=\"Serivce\" menuCode={MenuCode.SERVICE} currentMenuCode={this.props.main.state.menuCode} subMenu={MenuData.service} onMenuChange={onMenuChange} key={Math.random()} active={this.isMenuItemActive(MenuCode.SERVICE)} />); // Service\r\n            menuItems.push(<MenuItem menu=\"Admin\" menuCode={MenuCode.ADMIN} currentMenuCode={this.props.main.state.menuCode} subMenu={MenuData.admin} onMenuChange={onMenuChange} key={Math.random()} active={this.isMenuItemActive(MenuCode.ADMIN)} />); // Administrator\r\n        }\r\n        // 모델러 메뉴\r\n        else if (role === \"MODELER\") {\r\n            menuItems.push(<MenuItem menu=\"Model\" menuCode={MenuCode.MODEL_MANAGER} currentMenuCode={this.props.main.state.menuCode} onMenuChange={onMenuChange} key={Math.random()} active={this.isMenuItemActive(MenuCode.MODEL)} />); // Model\r\n            menuItems.push(<MenuItem menu=\"Serivce\" menuCode={MenuCode.SERVICE} currentMenuCode={this.props.main.state.menuCode} subMenu={MenuData.service} onMenuChange={onMenuChange} key={Math.random()} active={this.isMenuItemActive(MenuCode.SERVICE)} />); // Service\r\n        }\r\n        return <div className=\"page_header\">\r\n            <div className=\"page_inner\">\r\n                <Logo onMenuChange={onMenuChange} />\r\n\r\n                <div className=\"gnb\">\r\n                    <ul>{menuItems}</ul>\r\n                </div>\r\n\r\n                <ul className=\"login_sts\">\r\n                    {this.props.main.state.login\r\n                        ? <li><a>{this.props.username}</a>\r\n                            <ul className=\"user_menu\">\r\n                                <li><a onClick={() => this.onClickChangePw()}>PW 변경</a></li>\r\n                                <li><a onClick={() => this.onLogout()}>Logout</a></li>\r\n                            </ul>\r\n                        </li>\r\n                        : <li><a onClick={() => onMenuChange(MenuCode.LOGIN)}>Login</a></li>}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nclass MenuItem extends Component {\r\n    render() {\r\n        let { menu, menuCode, subMenu, active, onMenuChange, currentMenuCode } = this.props;\r\n        let subMenuItems = [];\r\n        if (!subMenu) subMenu = [];\r\n        for (let i = 0; i < subMenu.length; i++) {\r\n            subMenuItems.push(<li className={subMenu[i].menuCode === currentMenuCode ? 'active' : ''} key={Math.random()}><a onClick={() => onMenuChange(subMenu[i].menuCode)}>{subMenu[i].menu}</a></li>)\r\n        }\r\n        return <li className={active ? 'active' : ''} >\r\n            {subMenu.length > 0\r\n                ? <a onClick={() => console.log(menu)}>{menu}</a>\r\n                : <a onClick={() => onMenuChange(menuCode)}>{menu}</a>\r\n            }\r\n            {subMenu.length > 0 ? <ul>{subMenuItems}</ul> : null}\r\n        </li>\r\n    }\r\n}\r\n\r\nexport default MainTop;","import { MenuCode } from 'main';\r\nimport {Component} from 'react';\r\n\r\nclass MenuData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getPaths = this.getPaths.bind(this);\r\n        this.getMenuMap = this.getMenuMap.bind(this);\r\n    }\r\n    \r\n    /* 홈 */\r\n    home = [\r\n        {menuCode:MenuCode.DASHBOARD, menu:\"Dashboard\", paths:[\"Dashboard\",MenuCode.DASHBOARD]} //DashBoard\r\n    ];\r\n    \r\n    /* Model */\r\n    model = [];\r\n    \r\n    /* Service */\r\n    service = [\r\n        {menuCode:MenuCode.SERVICE_MANAGER, menu:\"Service Management\", paths:[\"Service\",MenuCode.SERVICE_MANAGER]}\r\n        ,{menuCode:MenuCode.ADMIN_HIST_SERVICEEXEC, menu:\"Service History\", paths:[\"Service\",MenuCode.ADMIN_HIST_SERVICEEXEC]}\r\n    ];\r\n    \r\n    /* 관리자 */\r\n    admin = [\r\n        {menuCode:MenuCode.ADMIN_USERMGR, menu:\"User Managerment\", paths:[\"Admin\",MenuCode.ADMIN_USERMGR]}\r\n        ,{menuCode:MenuCode.ADMIN_HIST_LOGIN, menu:\"Login History\", paths:[\"Admin\",MenuCode.ADMIN_HIST_LOGIN]}\r\n        ,{menuCode:MenuCode.ADMIN_HIST_MODELREG, menu:\"Model History\", paths:[\"Admin\",MenuCode.ADMIN_HIST_MODELREG]}\r\n        ,{menuCode:MenuCode.ADMIN_HIST_SCALEINOUT, menu:\"Resource History\", paths:[\"Admin\",MenuCode.ADMIN_HIST_SCALEINOUT]}\r\n        ,{menuCode:MenuCode.ADMIN_SACLEINOUTMGR, menu:\"Scale In/Out Management\", paths:[\"Admin\",MenuCode.ADMIN_SACLEINOUTMGR]}\r\n        ,{menuCode:MenuCode.ADMIN_SERVICEGROUP, menu:\"Service Group Management\", paths:[\"Admin\",MenuCode.ADMIN_SERVICEGROUP]}\r\n        ,{menuCode:MenuCode.ADMIN_COMMONCODE, menu:\"Common Code\", paths:[\"Admin\",MenuCode.ADMIN_COMMONCODE]}\r\n    ];\r\n\r\n    // 메뉴 맵 {}\r\n    map = null;\r\n\r\n    /**\r\n     * 메뉴 경로 반환\r\n     * @param {String} menuCode 메뉴 코드\r\n     * @return {Array} 메뉴경로\r\n     */\r\n    getPaths(menuCode) {\r\n        let m = this.getMenuMap();\r\n        let paths;\r\n        let ret = [];\r\n        if (menuCode === MenuCode.DASHBOARD)   // DashBoard\r\n            ret.push( {name:\"Dashboard\", menuCode:menuCode} );\r\n        else if (menuCode === MenuCode.MODEL_MANAGER)   // Model\r\n            ret.push( {name:\"Model\", menuCode:menuCode} );\r\n        if (m[menuCode] !== null && m[menuCode] !== undefined) {\r\n            paths = m[menuCode][\"paths\"];\r\n            for (let i=0; i<paths.length; i++) {\r\n                try {\r\n                    if (paths[i].indexOf(\"MENU\") > -1) {\r\n                        ret.push( {name:m[paths[i]].menu, menuCode:paths[i]} );\r\n                    } else {\r\n                        ret.push( {name:paths[i]} );\r\n                    }\r\n                } catch (err) {}\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * 메뉴 맵 데이터 생성 / 반환\r\n     * @return {Object} menuMap {(MENUCODE):{menuCode,menu(메뉴명),paths:[(경로)]}}\r\n     */\r\n    getMenuMap() {\r\n        if (this.map !== null) return this.map;\r\n        let map = {};\r\n        let i;\r\n        let itm;\r\n        let iitm;\r\n        for (i=0; i<this.model.length; i++) {\r\n            itm = this.model[i];\r\n            if (map[itm.menuCode] === null || map[itm.menuCode] === undefined) {\r\n                map[itm.menuCode] = itm;\r\n            }\r\n        }\r\n        for (i=0; i<this.service.length; i++) {\r\n            itm = this.service[i];\r\n            if (map[itm.menuCode] === null || map[itm.menuCode] === undefined) {\r\n                map[itm.menuCode] = itm;\r\n            }\r\n        }\r\n        for (i=0; i<this.admin.length; i++) {\r\n            itm = this.admin[i];\r\n            if (map[itm.menuCode] === null || map[itm.menuCode] === undefined) {\r\n                map[itm.menuCode] = itm;\r\n            }\r\n            if (itm.children && itm.children.length > 0) {\r\n                for (i=0; i<itm.children.length; i++) {\r\n                    iitm = itm.children[i];\r\n                    if (map[iitm.menuCode] === null || map[iitm.menuCode] === undefined) {\r\n                        map[iitm.menuCode] = iitm;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.map = map;\r\n        return map;\r\n    }\r\n}\r\n\r\nexport default new MenuData();","import React, {Component} from 'react';\r\nimport {MainService,MenuCode,CookieNames} from 'main';\r\nimport { common, Msg } from 'comp';\r\n\r\n/**\r\n * 화면명 : 로그인 팝업\r\n * 화면 경로 : 없음.\r\n * 화면 코드 : 없음.\r\n * 참고 : \r\n */\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onLoginResult = this.onLoginResult.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        const {\r\n            REACT_APP_DEBUG,REACT_APP_DEV_AUTO_LOGIN\r\n        } = process.env;\r\n        if (REACT_APP_DEBUG && REACT_APP_DEV_AUTO_LOGIN === \"true\") {\r\n            MainService.login(this.refs.uid.value,this.refs.pw.value,this.onLoginResult,(err) => console.log(err));\r\n        } else\r\n        this.refs.uid.focus();\r\n    }\r\n    \r\n\t/**************************************************************************/\r\n\t/* 핸들러 */\r\n\t/**************************************************************************/\r\n    /**\r\n     * 로그인 결과 핸들러\r\n     * @param {Object} res {result:ok|fail,userInfo,data:{sessionId}}\r\n     */\r\n    onLoginResult(res) {\r\n        if (res.result === \"ok\") {\r\n            let role = \"\";\r\n            let userId = \"\";\r\n            let userInfo = {};\r\n            if (res.data && res.data.userInfo) {\r\n                userInfo = res.data.userInfo;\r\n                role = res.data.userInfo.userPermission;\r\n                userId = res.data.userInfo.userId;\r\n            }\r\n            common.setCookie(CookieNames.SESSION_ID,res.data.sessionId);\r\n            this.props.main.setState({login:true,sessionId:res.data.sessionId,role:role,username:userId,showLogin:false,userInfo:userInfo});\r\n            if (process.env.REACT_APP_DEBUG && process.env.REACT_APP_FIRST_MENU_CODE)\r\n                this.props.main.onMenuChange(process.env.REACT_APP_FIRST_MENU_CODE,true);\r\n            else\r\n                this.props.main.onMenuChange(MenuCode.DASHBOARD,true);\r\n        } else if (res.result === \"fail\"){\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const {onClose} = this.props;\r\n        const {\r\n            REACT_APP_DEBUG,REACT_APP_DEV_LOGIN_ID,REACT_APP_DEV_LOGIN_PW\r\n        } = process.env;\r\n        return <div className=\"modal_wrapper\">\r\n        <div className=\"modal_content login_modal\">\r\n      \r\n          <h2 className=\"logo\"><span className=\"hide\">ESP Energy Intelligence</span></h2>\r\n          <input ref='uid' type=\"text\" className=\"ipt_text2\" placeholder=\"아이디를 입력해주세요\" autocomplete=\"off\"\r\n            onKeyDown={(e) => {\r\n                if (e.keyCode === 13) {\r\n                    this.refs.pw.focus();\r\n                }\r\n            }}\r\n            defaultValue={REACT_APP_DEBUG ? REACT_APP_DEV_LOGIN_ID : null}\r\n          />\r\n          <input ref='pw' type=\"password\" className=\"ipt_text2\" placeholder=\"비밀번호\" autocomplete=\"off\" \r\n            onKeyDown={(e) => {\r\n                if (e.keyCode === 13) {\r\n                    MainService.login(this.refs.uid.value,this.refs.pw.value,this.onLoginResult,(err) => console.log(err));\r\n                }\r\n            }}\r\n            defaultValue={REACT_APP_DEBUG ? REACT_APP_DEV_LOGIN_PW : null}\r\n          />\r\n          <p className=\"msg\">\r\n            <span className=\"error\" style={{display:\"none\"}}>등록되지 않은 아이디이이거나 올바르지 않은 비밀번호입니다.<br />아이디와 비밀번호를 확인 후 다시 시도해 주세요.</span>\r\n          </p>\r\n          <a href={(e) => console.log(\"login\")} className=\"btn btn_blue btn_login\" onClick={(e) => {\r\n                MainService.login(this.refs.uid.value,this.refs.pw.value,this.onLoginResult,(err) => console.log(err));\r\n            }}>로그인</a>\r\n          <ul className=\"account_menu\">\r\n            <li><a href={(e) => console.log(\"find id pw\")} onClick={() => Msg.warn(\"관리자에게 문의하세요.\")}>아이디 / 비밀번호 찾기</a></li>\r\n            {/* <li><a href=\"#\">회원가입</a></li> */}\r\n          </ul>\r\n          <a href={() => {onClose()}} onClick={() => {onClose()}} className=\"btn btn_close\"><span className=\"hide\">닫기</span></a>\r\n      \r\n        </div>\r\n      </div>;\r\n    }\r\n}\r\n\r\nexport default Login;","import axios from \"axios\";\r\n\r\n/**\r\n * 서버 요청\r\n */\r\nexport default axios.create({\r\n    baseURL: process.env.REACT_APP_WAS_URL,\r\n    headers: {\r\n        \"Content-type\": \"application/json\"\r\n    }\r\n});","import http from \"comp/http-common\";\r\n\r\n/**\r\n * 화면명 : 없음.\r\n * 화면 경로 : 없음.\r\n * 화면 코드 : 없음.\r\n * 참고 : 메인 관련 서비스 호출부분\r\n */\r\nclass MainService {\r\n    /**\r\n     * 로그인 요청\r\n     * @param {String} id 아이디\r\n     * @param {String} pw 비밀번호\r\n     * @param {Function} resFn 결과 콜백 함수\r\n     * @param {Function} errFn 실패 콜백 함수\r\n     */\r\n    login(id,pw,resFn,errFn) {\r\n        let formData = new FormData();\r\n        formData.append(\"username\",id);\r\n        formData.append(\"password\",pw);\r\n        return http.post(\"/login\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    \r\n    /**\r\n     * 로그아웃 요청\r\n     * @param {Function} resFn 결과 콜백 함수\r\n     * @param {Function} errFn 실패 콜백 함수\r\n     */\r\n    logout(resFn, errFn) {\r\n        return http.get(\"/logout\").then(function(res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        }).catch(function(err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        })\r\n    }\r\n    \r\n    /**\r\n     * 로그인 여부 확인 요청\r\n     * @param {String} sessionId 세션 아이디\r\n     * @param {Function} resFn 결과 콜백 함수\r\n     * @param {Function} errFn 실패 콜백 함수\r\n     */\r\n    chkLogin(sessionId, resFn, errFn) {\r\n        let formData = new FormData();\r\n        formData.append(\"sessionId\",sessionId);\r\n        return http.post(\"/chkLogin\",formData)\r\n            .then(function(res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            }).catch(function(err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    \r\n    /**\r\n     * 회원 가입 요청\r\n     * @param {Object} parm 파라미터\r\n     * @param {Function} resFn 결과 콜백 함수\r\n     * @param {Function} errFn 실패 콜백 함수\r\n     */\r\n    signUp(parm, resFn, errFn) {\r\n        let formData = new FormData();\r\n        for (let v in parm) {\r\n            formData.append(v,parm[v]);\r\n        }\r\n        return http.post(\"/signup\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    \r\n    /**\r\n     * 아이디 중복 체크 요청\r\n     * @param {Object} parm 파라미터\r\n     * @param {Function} resFn 결과 콜백 함수\r\n     * @param {Function} errFn 실패 콜백 함수\r\n     */\r\n    chkId(parm, resFn, errFn) {\r\n        let formData = new FormData();\r\n        for (let v in parm) {\r\n            formData.append(v,parm[v]);\r\n        }\r\n        return http.post(\"/chkId\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    \r\n    /**\r\n     * 공통코드 리스트 요청\r\n     * @param {Function} resFn 결과 콜백 함수\r\n     * @param {Function} errFn 실패 콜백 함수\r\n     */\r\n    commonCodeList(resFn, errFn) {\r\n        let parm = {groupUseYn:'Y',useYn:'Y'};\r\n        let formData = new FormData();\r\n        for (let v in parm) {\r\n            formData.append(v,parm[v]);\r\n        }\r\n        return http.post(\"/code/list\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    \r\n    /**\r\n     * 비밀번호 변경 요청\r\n     * @param {Object} parm 파라미터\r\n     * @param {Function} resFn 결과 콜백 함수\r\n     * @param {Function} errFn 실패 콜백 함수\r\n     */\r\n    changeUserPw(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let v in parm) {\r\n            formData.append(v,parm[v]);\r\n        }\r\n        return http.post(\"/changeUserPw\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n\t}\r\n}\r\n\r\nexport default new MainService();","import http from \"comp/http-common\";\r\n// import airflow from \"comp/http-airflow\";\r\n\r\nclass DashboardService {\r\n    /**\r\n     * 대시보드 자원관련 데이터\r\n     * @param {Object} parm 파라미터\r\n     * @param {Funtion} resFn 결과 핸들러\r\n     * @param {Function} errFn 에러 핸들러\r\n     */\r\n    dashboardResourceData(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/dashboard/dashboardResourceData\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    \r\n    /**\r\n     * 대시보드 서비스 관련 데이터\r\n     * @param {Object} parm 파라미터\r\n     * @param {Funtion} resFn 결과 핸들러\r\n     * @param {Function} errFn 에러 핸들러\r\n     */\r\n    dashboardServiceData(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/dashboard/dashboardServiceData\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    \r\n    /**\r\n     * 실시간 데이터\r\n     * @param {Object} parm 파라미터\r\n     * @param {Funtion} resFn 결과 핸들러\r\n     * @param {Function} errFn 에러 핸들러\r\n     */\r\n    dashboardRealData(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/dashboard/dashboardRealData\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    \r\n    /**\r\n     * 실시간 데이터2\r\n     * @param {Object} parm 파라미터\r\n     * @param {Funtion} resFn 결과 핸들러\r\n     * @param {Function} errFn 에러 핸들러\r\n     */\r\n    dashboardRealData2(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/dashboard/dashboardRealData2\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport default new DashboardService();","import React, {Component} from 'react';\r\n\r\n/**\r\n * 대시보드 Scale In/Out 그리드\r\n */\r\nclass ScaleInOutGrid extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cellHeight:30,\r\n            cellColsCount:7\r\n        };\r\n    }\r\n    \r\n    render() {\r\n        let {gridData,height} = this.props;\r\n\t\tif (gridData === undefined) gridData = [];\r\n\t\tif (height === undefined) height=190;\r\n        let itm;\r\n        let rows = [];\r\n        const rowHei = ((height-25-(10*gridData.length-1))/gridData.length) + \"px\";\r\n        for (let i=0; i<gridData.length; i++) {\r\n            itm = gridData[i];\r\n            rows.push(<Row rowData={itm} rowHei={rowHei}/>);\r\n        }        \r\n        let days = [];\r\n        var moment = require('moment');\r\n        for (let i = 6; i >= 0; i--) {\r\n            days.push(moment().add(-i, 'd').format(\"MM/DD\"));\r\n        }\r\n        return <table className=\"scale_table\" ><tbody>\r\n            {rows}\r\n\t\t\t<tr className=\"sts_day\">\r\n\t\t\t\t<th></th>\r\n\t\t\t\t<td>{days[0]}</td>\r\n\t\t\t\t<td>{days[1]}</td>\r\n\t\t\t\t<td>{days[2]}</td>\r\n\t\t\t\t<td>{days[3]}</td>\r\n\t\t\t\t<td>{days[4]}</td>\r\n\t\t\t\t<td>{days[5]}</td>\r\n\t\t\t\t<td>{days[6]}</td>\r\n\t\t\t</tr>\r\n        </tbody></table>;\r\n    }\r\n}\r\n\r\nclass Row extends Component {\r\n    render() {\r\n        let {rowData,labelKey,cellCount,rowHei} = this.props;\r\n        if (labelKey === undefined) labelKey = \"serverRole\";\r\n        if (cellCount === undefined) cellCount = 7;\r\n        if (rowHei === undefined) rowHei = 30;\r\n        let cells = [];\r\n        let cls = \"\";\r\n        let key = \"\";\r\n        for (let i=1; i<=cellCount; i++) {\r\n            cls = \"cell\";\r\n            key = \"v\" + i;\r\n\t\t\tif (rowData[key] === \"0\")\r\n\t\t\t\tcls += \" scalein\";\r\n\t\t\telse if (rowData[key] === \"1\")\r\n\t\t\t\tcls += \" scaleout\";\r\n\t\t\tcells.push(<td className={cls} style={{height:rowHei}}></td>);\r\n        }\r\n\t\treturn <tr>\r\n\t\t\t<th>{rowData === \"label\" ? \"Date\" : rowData[labelKey]}</th>\r\n\t\t\t{cells}\r\n\t\t</tr>;\r\n    }\r\n}\r\n\r\nexport default ScaleInOutGrid;","import React, { Component } from 'react';\r\nimport { DashboardService } from 'dashboard';\r\nimport { Msg, GridList, common } from 'comp';\r\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Legend, Tooltip, PieChart, Pie, Cell } from 'recharts';\r\nimport ScaleInOutGrid from './ScaleInOutGrid';\r\n\r\n/**\r\n * 화면명 : Dashboard\r\n * 화면 경로 : Dashboard\r\n * 화면 코드 : MENU001\r\n * 참고 : \r\n */\r\nclass Dashboard extends Component {\r\n  timerID;\r\n  timer2ID;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      serviceExecHistoryColumns: [],\r\n      serviceExecSummColumns: [\r\n        { name: \"serviceGroupName\", header: \"Service Group\", width: 100 },\r\n        { name: \"serviceCount\", header: \"Service\", width: 80 },\r\n        { name: \"execCount\", header: \"Execution\", width: 80 },\r\n        { name: \"success\", header: \"Success\", width: 80 },\r\n        { name: \"fail\", header: \"Fail\", width: 80 }\r\n      ],\r\n      serviceExecStatusForToday: [],\r\n      serviceTodayExecSummForGroup: {},\r\n      serviceTotalExecSummForGroup: {},\r\n      serviceExecHistory: [],\r\n      serviceExecSummListForGroup: [],\r\n      scaleInOutSummary: [],\r\n      containerInfo: {},\r\n      cpuAvgList: [],\r\n      cpuSummListForDay: [],\r\n      cpuSummListForMonth: [],\r\n      cpuSummListForHour: [],\r\n      cpuAvgListForHour: [],\r\n      todayCpuAvg: 0,\r\n      serverNames: [],\r\n      cpuSummList: undefined,\r\n      cpuSummType: undefined\r\n    }\r\n    this.onResultResourceData = this.onResultResourceData.bind(this);\r\n    this.onResultServiceData = this.onResultServiceData.bind(this);\r\n    this.onTimerDashboard = this.onTimerDashboard.bind(this);\r\n    this.onTimerDashboard2 = this.onTimerDashboard2.bind(this);\r\n    this.onResultRealData = this.onResultRealData.bind(this);\r\n    this.onResultRealData2 = this.onResultRealData2.bind(this);\r\n    this.onClickTab = this.onClickTab.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.main.showLoading();\r\n    DashboardService.dashboardServiceData({}, this.onResultServiceData, (err) => Msg.error(err.message));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n    clearInterval(this.timer2ID);\r\n  };\r\n\r\n  /**************************************************************************/\r\n  /* 기능 */\r\n  /**************************************************************************/\r\n  /**\r\n   * 실시간 데이터 요청 타이머 핸들러(3초)\r\n   */\r\n  onTimerDashboard() {\r\n    DashboardService.dashboardRealData({}, this.onResultRealData, (err) => Msg.error(err.message));\r\n  }\r\n  /**\r\n   * 실시간 데이터 요청 타이머 핸들러(30초)\r\n   */\r\n  onTimerDashboard2() {\r\n    DashboardService.dashboardRealData2({}, this.onResultRealData2, (err) => Msg.error(err.message));\r\n  }\r\n\r\n  /**************************************************************************/\r\n  /* 핸들러 */\r\n  /**************************************************************************/\r\n  /**\r\n   * 대시보드 리소스 데이터 결과 핸들러\r\n   * @param {Object} res {result:ok|fail,data:{\r\n   * \t\t\t\t\t\t\tscaleInOutSummary:Scale In/Out 최근 일주일,\r\n   * \t\t\t\t\t\t\tcontainerInfo:Container 현황,\r\n   * \t\t\t\t\t\t\tcpuAvgList:최근 CPU 데이터,\r\n   * \t\t\t\t\t\t\tcpuSummListForDay:CPU 이번달 일자별 현황,\r\n   * \t\t\t\t\t\t\tcpuSummListForMonth:CPU 이번달 현황,\r\n   * \t\t\t\t\t\t\tcpuSummListForHour:CPU 금일 시간별 현황,\r\n   * \t\t\t\t\t\t\ttodayCpuAvg:금일 현재 CPU 평균,\r\n   * \t\t\t\t\t\t\tserverNames:서버명 리스트(차트 라인을 동적으로 만들기위해)\r\n   * \t\t\t\t\t\t}}\r\n   */\r\n  onResultResourceData(res) {\r\n    this.props.main.hideLoading();\r\n    if (res.result === \"ok\") {\r\n      let {\r\n        scaleInOutSummary,\r\n        containerInfo,\r\n        cpuAvgList,\r\n        cpuSummListForDay,\r\n        cpuSummListForMonth,\r\n        cpuAvgListForHour,\r\n        cpuSummListForHour,\r\n        todayCpuAvg,\r\n        serverNames\r\n      } = res.data;\r\n      let i;\r\n      let itm;\r\n      for (i = 0; i < cpuSummListForHour.length; i++) {\r\n        itm = cpuSummListForHour[i];\r\n        for (let j = 0; j < serverNames.length; j++) {\r\n          itm[serverNames[j]] = parseFloat(itm[serverNames[j]]);\r\n        }\r\n      }\r\n      /* 데이터를 float 형식으로 변환 */\r\n      cpuSummListForDay = cpuSummListForDay.map(day => {\r\n        Object.keys(day).forEach(key => {\r\n          if (key !== 'receiveDate') {\r\n            day[key] = parseFloat(day[key])\r\n          }\r\n        })\r\n        return day;\r\n      })\r\n      cpuSummListForMonth.map(month => {\r\n        Object.keys(month).forEach(key => {\r\n          if (key !== 'receiveDate') {\r\n            month[key] = parseFloat(month[key])\r\n          }\r\n        })\r\n        return month;\r\n      })\r\n      cpuSummListForHour.map(hour => {\r\n        Object.keys(hour).forEach(key => {\r\n          if (key !== 'receiveDate') {\r\n            hour[key] = parseFloat(hour[key])\r\n          }\r\n        })\r\n        return hour;\r\n      })\r\n      this.setState({\r\n        scaleInOutSummary: scaleInOutSummary,\r\n        containerInfo: containerInfo,\r\n        cpuAvgList: cpuAvgList,\r\n        cpuSummListForDay: cpuSummListForDay,\r\n        cpuSummListForMonth: cpuSummListForMonth,\r\n        cpuSummListForHour: cpuSummListForHour,\r\n        cpuAvgListForHour: cpuAvgListForHour,\r\n        todayCpuAvg: todayCpuAvg === undefined || (todayCpuAvg !== undefined && todayCpuAvg.cpuAverage === undefined) ? 0 : todayCpuAvg.cpuAverage,\r\n        serverNames: serverNames\r\n      });\r\n    } else if (res.result === \"fail\") {\r\n      Msg.error(res.message);\r\n    }\r\n\r\n    // 실시간 데이터 요청 실행\r\n    this.timerID = setInterval(() => this.onTimerDashboard(), 3000);\t\t//3초\r\n    this.timer2ID = setInterval(() => this.onTimerDashboard2(), 30000);\t//30초\r\n  }\r\n\r\n  /**\r\n   * 대시보드 서비스 데이터 결과 핸들러\r\n   * @param {Object} res {result:ok|fail,data:{\r\n   * \t\t\t\t\t\t\tserviceExecStatusForToday:금일 시간대별 서비스 실행 현황,\r\n   * \t\t\t\t\t\t\tserviceExecHistory:금일 서비스 실행 이력 리스트,\r\n   * \t\t\t\t\t\t\tserviceTodayExecSummForGroup:금일 서비스 실행 현황,\r\n   * \t\t\t\t\t\t\tserviceTotalExecSummForGroup:전체 서비스 실행 현황,\r\n   * \t\t\t\t\t\t\tserviceExecSummListForGroup:그룹별 서비스 실행 현황 리스트\r\n   * \t\t\t\t\t\t}}\r\n   */\r\n  onResultServiceData(res) {\r\n    this.props.main.hideLoading();\r\n    if (res.result === \"ok\") {\r\n      // console.log(res.data);\r\n      const {\r\n        serviceExecStatusForToday,\r\n        serviceTodayExecSummForGroup,\r\n        serviceTotalExecSummForGroup,\r\n        serviceExecHistory,\r\n        serviceExecSummListForGroup\r\n      } = res.data;\r\n      const serviceExecHistoryColumns = [\r\n        { name: \"serviceName\", header: \"Service Name\", width: 150, align: \"left\" },\r\n        { name: \"serviceGroupName\", header: \"Service Group\", width: 100 },\r\n        { name: \"startDate\", header: \"Start\", width: 100 },\r\n        { name: \"elasped\", header: \"Elasped\", width: 90 },\r\n        {\r\n          name: \"serviceStatus\", header: \"Result\", width: 40, align: \"center\", paddingRight: 5, sortable: true,\r\n          renderer: { type: StatusRenderer, options: { listData: serviceExecHistory } }\r\n        }\r\n      ];\r\n      let i;\r\n      let itm;\r\n      for (i = 0; i < serviceExecStatusForToday.length; i++) {\r\n        itm = serviceExecStatusForToday[i];\r\n        for (let j = 0; j < serviceExecSummListForGroup.length; j++) {\r\n          itm[serviceExecSummListForGroup[j].serviceGroupName] = parseInt(itm[serviceExecSummListForGroup[j].serviceGroupName]);\r\n        }\r\n      }\r\n      this.setState({\r\n        serviceExecStatusForToday: serviceExecStatusForToday,\r\n        serviceTodayExecSummForGroup: serviceTodayExecSummForGroup,\r\n        serviceTotalExecSummForGroup: serviceTotalExecSummForGroup,\r\n        serviceExecHistory: serviceExecHistory,\r\n        serviceExecHistoryColumns: serviceExecHistoryColumns,\r\n        serviceExecSummListForGroup: serviceExecSummListForGroup\r\n      });\r\n      this.props.main.showLoading();\r\n      DashboardService.dashboardResourceData({}, this.onResultResourceData, (err) => Msg.error(err.message));\r\n    } else if (res.result === \"fail\") {\r\n      Msg.error(res.message);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 실시간 데이터 요청(3초) 결과 핸들러\r\n   * @param {Object} res {result:ok|fail, data:{{\r\n   * \t\t\t\t\t\t\tcontainerInfo:Container 현황,\r\n   * \t\t\t\t\t\t\tcpuAvgList:최근 CPU 데이터,\r\n   * \t\t\t\t\t\t\ttodayCpuAvg:금일 현재 CPU 평균\r\n   * \t\t\t\t\t\t}}\r\n   */\r\n  onResultRealData(res) {\r\n    if (res.result === \"ok\") {\r\n      const {\r\n        containerInfo,\r\n        cpuAvgList,\r\n        todayCpuAvg\r\n      } = res.data;\r\n      this.setState({\r\n        containerInfo: containerInfo,\r\n        cpuAvgList: cpuAvgList,\r\n        todayCpuAvg: todayCpuAvg === undefined || (todayCpuAvg !== undefined && todayCpuAvg.cpuAverage === undefined) ? 0 : todayCpuAvg.cpuAverage\r\n      });\r\n    } else if (res.result === \"fail\") {\r\n      Msg.error(res.message);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 실시간 데이터 요청(30초) 결과 핸들러\r\n   * @param {Object} res {result:ok|fail, data:{{\r\n   * \t\t\t\t\t\t\tcpuSummListForHour:CPU 금일 시간별 현황,\r\n   * \t\t\t\t\t\t\tscaleInOutSummary:Scale In/Out 최근 일주일,\r\n   * \t\t\t\t\t\t\tserviceExecHistory:금일 서비스 실행 이력 리스트,\r\n   * \t\t\t\t\t\t\tserviceTodayExecSummForGroup:금일 서비스 실행 현황,\r\n   * \t\t\t\t\t\t\tserviceTotalExecSummForGroup:전체 서비스 실행 현황,\r\n   * \t\t\t\t\t\t\tserviceExecSummListForGroup:그룹별 서비스 실행 현황 리스트\r\n   * \t\t\t\t\t\t}}\r\n   */\r\n  onResultRealData2(res) {\r\n    if (res.result === \"ok\") {\r\n      // console.log(res.data);\r\n      const { serverNames } = this.state;\r\n      const {\r\n        cpuSummListForHour,\r\n        serviceExecHistory,\r\n        serviceExecStatusForToday,\r\n        serviceTodayExecSummForGroup,\r\n        serviceTotalExecSummForGroup,\r\n        serviceExecSummListForGroup,\r\n        onResultRealData2\r\n      } = res.data;\r\n      let i;\r\n      let itm;\r\n      for (i = 0; i < cpuSummListForHour.length; i++) {\r\n        itm = cpuSummListForHour[i];\r\n        for (let j = 0; j < serverNames.length; j++) {\r\n          itm[serverNames[j]] = parseFloat(itm[serverNames[j]]);\r\n        }\r\n      }\r\n      for (i = 0; i < serviceExecStatusForToday.length; i++) {\r\n        itm = serviceExecStatusForToday[i];\r\n        for (let j = 0; j < serviceExecSummListForGroup.length; j++) {\r\n          itm[serviceExecSummListForGroup[j].serviceGroupName] = parseInt(itm[serviceExecSummListForGroup[j].serviceGroupName]);\r\n        }\r\n      }\r\n      this.setState({\r\n        onResultRealData2: onResultRealData2,\r\n        cpuSummListForHour: cpuSummListForHour,\r\n        serviceExecHistory: serviceExecHistory,\r\n        serviceExecStatusForToday: serviceExecStatusForToday,\r\n        serviceTodayExecSummForGroup: serviceTodayExecSummForGroup,\r\n        serviceTotalExecSummForGroup: serviceTotalExecSummForGroup,\r\n        serviceExecSummListForGroup: serviceExecSummListForGroup\r\n      });\r\n    } else if (res.result === \"fail\") {\r\n      Msg.error(res.message);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cpu 현황 타입 클릭 핸들러\r\n   * @param {String} type Cpu 현황 타입\r\n   */\r\n  onClickTab(type) {\r\n    const { cpuSummListForHour, cpuSummListForDay, cpuSummListForMonth } = this.state;\r\n    let cpuSummList = [];\r\n    if (type === \"time\")\r\n      cpuSummList = cpuSummListForHour;\r\n    else if (type === \"day\")\r\n      cpuSummList = cpuSummListForDay;\r\n    else if (type === \"month\")\r\n      cpuSummList = cpuSummListForMonth;\r\n    this.setState({ cpuSummList: cpuSummList, cpuSummType: type });\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      serviceExecStatusForToday, serviceTodayExecSummForGroup, serviceTotalExecSummForGroup, serviceExecHistory, serviceExecSummListForGroup,\r\n      scaleInOutSummary, cpuAvgList, cpuSummListForHour, serverNames, todayCpuAvg, containerInfo,\r\n      serviceExecHistoryColumns, serviceExecSummColumns, cpuSummList, cpuSummType\r\n    } = this.state;\r\n    if (cpuSummList === undefined) cpuSummList = cpuSummListForHour;\r\n    if (cpuSummType === undefined) cpuSummType = \"time\";\r\n    if (containerInfo === undefined) containerInfo = [];\r\n    let i;\r\n    let contains = [];\r\n    for (i = containerInfo.length - 1; i >= 0; i--) {\r\n      contains.push(<tr><td>{containerInfo[i].role}</td><td>{containerInfo[i].hasContainer}</td></tr>);\r\n    }\r\n\r\n\r\n    const RealCpuTooltip = ({ active, payload, label }) => {\r\n      try {\r\n        if (active) {\r\n          let lblStr = payload[0].payload.receiveDate;\r\n          return (\r\n            <div className=\"custom-tooltip\" style={{ border: \"dotted 1px #419efa\", background: \"#FFF\", padding: \"10px\", color: payload[0].color }}>\r\n              {lblStr + \" : \" + (isNaN(payload[0].value) ? 0 : payload[0].value) + \"%\"}\r\n            </div>\r\n          );\r\n        }\r\n      } catch (err) { }\r\n\r\n      return null;\r\n    };\r\n\r\n    const CpuUtilizationTooltip = ({ active, payload, label }) => {\r\n      try {\r\n        if (active) {\r\n          let tooltips = [<div style={{ color: \"#000\", fontWeight: \"bold\" }}>{label + (cpuSummType === \"time\" ? \"시\" : \"\")}</div>];\r\n          /* payload.length는 서버의 개수 */\r\n          for (let i = 0; i < payload.length; i++) {\r\n            tooltips.push(<div style={{ color: payload[i].color }}>{payload[i].name + \" : \" + (isNaN(payload[i].payload[payload[i].dataKey]) ? 0 : payload[i].payload[payload[i].dataKey]) + \"%\"}</div>);\r\n          }\r\n          return (\r\n            <div className=\"custom-tooltip\" style={{ border: \"dotted 1px #CECECE\", background: \"#FFF\", padding: \"10px\", color: payload[0].color }}>\r\n              {tooltips}\r\n            </div>\r\n          );\r\n        }\r\n      } catch (err) { }\r\n\r\n      return null;\r\n    };\r\n    const ServiceExecutionTooltip = ({ active, payload, label }) => {\r\n      try {\r\n        if (active) {\r\n          let tooltips = [<div style={{ color: \"#000\", fontWeight: \"bold\" }}>{label + \"시 (성공/실패)\"}</div>];\r\n          for (let i = 0; i < payload.length; i++) {\r\n            tooltips.push(<div style={{ color: payload[i].color }}>{payload[i].name + \" : \" + (isNaN(payload[i].payload[payload[i].dataKey]) ? 0 : payload[i].payload[payload[i].dataKey]) + \" (\" + payload[i].payload[payload[i].dataKey + \"_success\"] + \"/\" + payload[i].payload[payload[i].dataKey + \"_fail\"] + \")\"}</div>);\r\n          }\r\n          return (\r\n            <div className=\"custom-tooltip\" style={{ border: \"dotted 1px #CECECE\", background: \"#FFF\", padding: \"10px\", color: payload[0].color }}>\r\n              {/* {lblStr + \" : \" + payload[0].value + \"%\"} */}\r\n              {tooltips}\r\n            </div>\r\n          );\r\n        }\r\n      } catch (err) { }\r\n\r\n      return null;\r\n    };\r\n\r\n    const pieData = [{ name: 'todayAvg', value: todayCpuAvg }, { name: 'blank', value: 100 - todayCpuAvg }];\r\n    let todayCpuAvgSty = { right: 86 };\r\n    /*\r\n        fontsize 40\r\n  \t\r\n        1(1)\r\n        102\t\t\t\t(86+16)\r\n  \t\r\n        11(2)\r\n        93\t\t\t\t(86+7)\r\n  \t\r\n        1.1(3)\r\n        86\r\n  \t\r\n        11.1(4)\r\n        78\t\t\t\t(86-8)\r\n    */\r\n    // 자리수에 따른 가운데 위치하기위해 스타일 조절\r\n    if (todayCpuAvg.length === 1) todayCpuAvgSty.right = 102;\r\n    else if (todayCpuAvg.length === 2) todayCpuAvgSty.right = 93;\r\n    else if (todayCpuAvg.length === 4) todayCpuAvgSty.right = 78;\r\n\r\n    const colors = [\"#f4b922\", \"#71b8ff\", \"#07c180\", \"#fc8d27\", \"#8f8dfc\"];\r\n    let itm;\r\n    let cpuUtilizationLines = [];\r\n    for (i = 0; i < serverNames.length; i++) {\r\n      itm = serverNames[i];\r\n      if (itm === \"Total\")\r\n        cpuUtilizationLines.push(<Line type=\"linear\" dataKey={itm} fill=\"#FF0000\" stroke={\"#FF0000\"} strokeWidth={2} dot={{ r: 3 }} isAnimationActive={false} />);\r\n      else\r\n        cpuUtilizationLines.push(<Line type=\"linear\" dataKey={itm} stroke={colors[i]} fill={colors[i]} dot={{ r: 3 }} isAnimationActive={false} />);\r\n    }\r\n\r\n    let serviceExecutionLines = [];\r\n    for (i = 0; i < serviceExecSummListForGroup.length; i++) {\r\n      itm = serviceExecSummListForGroup[i];\r\n      serviceExecutionLines.push(<Line type=\"linear\" dataKey={itm.serviceGroupName} stroke={colors[i]} fill={colors[i]} activeDot={{ r: 3 }} isAnimationActive={false} />);\r\n    }\r\n\r\n    return <div className=\"dashboard_container\">\r\n      <div className=\"dash_tit\">\r\n        <h3>Resource</h3>\r\n        {this.props.main.state.login ? <div className=\"float\">\r\n          <a href=\"http://61.97.187.199:9900\" target=\"_blank\" className=\"img_link\" alt=\"visualizer\"></a>\r\n          <a href=\"http://61.97.187.199:9000\" target=\"_blank\" className=\"img_link\" alt=\"swarmpit\"></a>\r\n        </div> : null}\r\n      </div>\r\n      <ul className=\"dash_layout dash_layout1\">\r\n        {/* <!-- Server/Container --> */}\r\n        <li>\r\n          <ul className=\"inner_layout\">\r\n            <li><dl>\r\n              <dt>Server</dt>\r\n              <dd>\r\n                <b>{containerInfo.length}</b>\r\n                <p>nodes</p>\r\n              </dd>\r\n            </dl></li>\r\n            <li><dl>\r\n              <dt>Container</dt>\r\n              <dd>\r\n                <table>\r\n                  <colgroup>\r\n                    <col style={{ width: 120 }} />\r\n                    <col style={{ width: 60 }} />\r\n                  </colgroup>\r\n                  {contains}\r\n                </table>\r\n              </dd>\r\n            </dl>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        {/* <!-- CPU --> */}\r\n        <li>\r\n          <ul className=\"inner_layout\">\r\n            <li>\r\n              <dl>\r\n                <dt>CPU</dt>\r\n                <dd style={{ display: \"flex\", justifyContent: \"center\", marginLeft: 20 }}>\r\n                  <LineChart width={590} height={210} data={cpuAvgList}\r\n                    margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                    <XAxis dataKey=\"receiveDate\" />\r\n                    <YAxis type=\"number\" domain={[0, 100]} width={10} />\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <Tooltip content={<RealCpuTooltip />} />\r\n                    <Line type=\"monotone\" dataKey=\"cpuAverage\" stroke=\"#419efa\" isAnimationActive={false} dot={false} activeDot={{ r: 5 }} />\r\n                  </LineChart>\r\n                </dd>\r\n              </dl>\r\n            </li>\r\n            <li>\r\n              <div className=\"graph_wrap\" style={{ marginTop: -10, height: 220 }}>\r\n                <dl><dt>Today CPU Avg.</dt></dl>\r\n                <PieChart width={220} height={200} unit=\"%\">\r\n                  <Pie dataKey={\"value\"}\r\n                    data={pieData}\r\n                    cx={70}\r\n                    cy={90}\r\n                    innerRadius={50}\r\n                    outerRadius={70}\r\n                    paddingAngle={0}\r\n                  >\r\n                    <Cell fill=\"#419efa\" />\r\n                    <Cell fill=\"#ebedf1\" />\r\n                  </Pie>\r\n                </PieChart>\r\n              </div>\r\n              <span className=\"percent_value\" style={todayCpuAvgSty}>{todayCpuAvg}<sup>%</sup></span>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        {/* <!-- Scale In / Out --> */}\r\n        <li>\r\n          <dl>\r\n            <dt>Scale In / Out</dt>\r\n            <dd><ScaleInOutGrid gridData={scaleInOutSummary} /></dd>\r\n          </dl>\r\n        </li>\r\n        {/* <!-- CPU Utilization --> */}\r\n        <li>\r\n          <dl>\r\n            <dt>CPU Utilization</dt>\r\n            <dd>\r\n              {/* </dd><!-- 시간/일/월 라디오 커스텀 버튼 --> */}\r\n              <div className=\"ipradio_group\">\r\n                <label className=\"term_radio\">\r\n                  <input type=\"radio\" name=\"cp_item\" value=\"시간\" defaultChecked={cpuSummType === \"time\"} onClick={() => this.onClickTab('time')} />\r\n                  <span>시간</span>\r\n                </label>\r\n                <label className=\"term_radio\">\r\n                  <input type=\"radio\" name=\"cp_item\" value=\"일\" defaultChecked={cpuSummType === \"day\"} onClick={() => this.onClickTab('day')} />\r\n                  <span>일</span>\r\n                </label>\r\n                <label className=\"term_radio\">\r\n                  <input type=\"radio\" name=\"cp_item\" value=\"월\" defaultChecked={cpuSummType === \"month\"} onClick={() => this.onClickTab('month')} />\r\n                  <span>월</span>\r\n                </label>\r\n              </div>\r\n              <div className=\"graph_wrap\">\r\n                <LineChart width={723} height={240} data={cpuSummList}>\r\n                  <XAxis dataKey=\"receiveDate\" />\r\n                  <YAxis unit=\"%\" />\r\n                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                  <Tooltip content={<CpuUtilizationTooltip />} />\r\n                  <Legend verticalAlign=\"bottom\" iconType=\"circle\" />\r\n                  {cpuUtilizationLines}\r\n                </LineChart>\r\n              </div>\r\n            </dd>\r\n          </dl>\r\n        </li>\r\n        {/* <!-- Service Execution --> */}\r\n        <li>\r\n          <dl>\r\n            <dt>Service Execution</dt>\r\n            <dd>\r\n              <div className=\"graph_wrap\" style={{ marginTop: 20 }}>\r\n                <LineChart width={952} height={240} data={serviceExecStatusForToday}>\r\n                  <XAxis unit=\"시\" dataKey=\"hour\" width={20} />\r\n                  <YAxis unit=\"건\" />\r\n                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                  <Tooltip content={<ServiceExecutionTooltip />} />\r\n                  <Legend verticalAlign=\"bottom\" iconType=\"circle\" />\r\n                  {serviceExecutionLines}\r\n                </LineChart>\r\n              </div>\r\n            </dd>\r\n          </dl>\r\n        </li>\r\n\r\n      </ul>\r\n\r\n      <div className=\"dash_tit\">\r\n        <h3>Service</h3>\r\n      </div>\r\n\r\n      <ul className=\"dash_layout dash_layout2\">\r\n        {/* <!-- Today Execution --> */}\r\n        <li>\r\n          <dl>\r\n            <dt>Today Execution</dt>\r\n            <dd>\r\n              <table className=\"table_execution\"><tbody>\r\n                <tr>\r\n                  <td colSpan=\"2\">\r\n                    <h2>{common.displNum(serviceTodayExecSummForGroup.total)}</h2>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <span className=\"blue\">{common.displNum(serviceTodayExecSummForGroup.success)}</span>\r\n                    <p>success</p>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"orange\">{common.displNum(serviceTodayExecSummForGroup.fail)}</span>\r\n                    <p>fail</p>\r\n                  </td>\r\n                </tr>\r\n              </tbody></table>\r\n            </dd>\r\n          </dl>\r\n        </li>\r\n        {/* <!-- Total Execution --> */}\r\n        <li>\r\n          <dl>\r\n            <dt>Total Execution</dt>\r\n            <dd>\r\n              <ul className=\"inner_layout\">\r\n                <li>\r\n                  <table className=\"table_execution\">\r\n                    <tbody>\r\n                      <tr>\r\n                        <td colSpan=\"2\">\r\n                          <h3>{common.displNum(serviceTotalExecSummForGroup.total)}</h3>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>\r\n                          <span>{common.displNum(serviceTotalExecSummForGroup.success)}</span>\r\n                          <p>success</p>\r\n                        </td>\r\n                        <td>\r\n                          <span>{common.displNum(serviceTotalExecSummForGroup.fail)}</span>\r\n                          <p>fail</p>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </li>\r\n                <li className=\"graph_wrap\" style={{ marginLeft: 14 }}>\r\n                  <div className=\"table_type1 table_type3\">\r\n                    <GridList columns={serviceExecSummColumns} gridData={serviceExecSummListForGroup} bodyHeight={130} key={Math.random()} />\r\n                  </div>\r\n                </li>\r\n\r\n              </ul>\r\n            </dd>\r\n          </dl>\r\n        </li>\r\n        <li>\r\n          <div className=\"graph_wrap\">\r\n            <div className=\"table_type1\">\r\n              <GridList columns={serviceExecHistoryColumns} gridData={serviceExecHistory} bodyHeight={160} key={Math.random()} />\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>;\r\n  }\r\n}\r\n\r\n/**\r\n * Status 컬럼 랜더러\r\n */\r\nclass StatusRenderer extends Component {\r\n  render() {\r\n    const { item } = this.props;\r\n    let cls = item.serviceStatus === \"success\" ? \"staus staus_completion\" : \"staus staus_warning\";\r\n    return <span className={cls} title={item.serviceStatus}></span>;\r\n  }\r\n}\r\n\r\nexport default Dashboard;","import React, { Component } from 'react';\r\nimport Grid from '@toast-ui/react-grid';\r\nimport TuiGrid from 'tui-grid';\r\nimport { Pagination, Msg, NameRenderer, common, Validation } from 'comp';\r\nimport { ModelService, ModelReg, ModelDetail } from 'model';\r\n\r\n/**\r\n * 화면명 : 모델 관리\r\n * 화면 경로 : 모델 > 모델 관리\r\n * 화면 코드 : MENU00201\r\n * 참고 : https://nhn.github.io/tui.grid/latest/Grid\r\n */\r\nclass ModelManager extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      gridData: [],\r\n      columns: [],\r\n      bodyHeight: 200,\r\n      pagesPage: 1,\r\n      pagesTotalCount: 0,\r\n      pagesPerPage: 5\r\n    };\r\n    this.requestData = this.requestData.bind(this);\r\n    this.onResultList = this.onResultList.bind(this);\r\n    this.onClickPageItem = this.onClickPageItem.bind(this);\r\n    this.onClickDel = this.onClickDel.bind(this);\r\n    this.onResultDel = this.onResultDel.bind(this);\r\n    this.onConfirmOkDel = this.onConfirmOkDel.bind(this);\r\n    this.onConfirmCancelDel = this.onConfirmCancelDel.bind(this);\r\n    this.onClickReg = this.onClickReg.bind(this);\r\n    this.onCloseReg = this.onCloseReg.bind(this);\r\n    this.popupModify = this.popupModify.bind(this);\r\n    this.onClickSch = this.onClickSch.bind(this);\r\n    this.onClickGridNameColumn = this.onClickGridNameColumn.bind(this);\r\n    this.onClickTestReq = this.onClickTestReq.bind(this);\r\n    this.onResultTestReq = this.onResultTestReq.bind(this);\r\n    this.onClickFileReq = this.onClickFileReq.bind(this);\r\n    this.onResultFileReq = this.onResultFileReq.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    TuiGrid.setLanguage('ko');\r\n    TuiGrid.applyTheme('clean'); // default, striped, clean\r\n    this.requestData(1);\r\n  }\r\n\r\n  /**\r\n * 페이지 클릭 이벤트 핸들러\r\n * @param {int} page \r\n */\r\n  onClickPageItem(page) {\r\n    const { schKey, schType } = this.refs;\r\n    if (schKey.value.length > 0 && schType.value.length > 0)\r\n      this.requestData(page, schType.value, schKey.value);\r\n    else\r\n      this.requestData(page);\r\n\r\n  }\r\n\r\n  /**\r\n   * 모델 리스트\r\n   * @param {int} page \r\n   * @param {String} schType \r\n   * @param {String} schKeyword \r\n   */\r\n  requestData(page, schType, schKeyword) {\r\n    if (page === undefined) page = this.state.pagesPage;\r\n    this.props.main.showLoading();\r\n    const parm = {\r\n      page: page\r\n    };\r\n    \r\n    \r\n    if (schType !== undefined && schKeyword !== undefined) {\r\n      // Msg.info(\"필터전 : \" + schKeyword);\r\n      schKeyword = Validation.filterSchKeyword(schKeyword);\r\n      // Msg.info(\"필터후 : \" + schKeyword);\r\n      parm.schKey = schKeyword;\r\n      parm.schType = schType;\r\n    } else if (this.refs.schKey.value !== null && this.refs.schKey.value !== \"\") {\r\n      parm.schKey = Validation.filterSchKeyword(this.refs.schKey.value);\r\n      parm.schType = this.refs.schType.value;\r\n    }\r\n    ModelService.list(parm, this.onResultList, (err) => Msg.error(err.message));\r\n  }\r\n\r\n  /**\r\n   * 모델 리스트 결과 핸들러\r\n   * @param {Object} res \r\n   */\r\n  onResultList(res) {\r\n    this.props.main.hideLoading();\r\n    if (res.result === \"ok\") {\r\n      const pagesInfo = res.data;\r\n      const columns = [\r\n        {\r\n          name: 'modelName', header: 'Model Name', minWidth: 300, sortable: true,\r\n          renderer: {\r\n            type: NameRenderer, options: {\r\n              listData: res.list, labelKey: \"modelName\",\r\n              onClickGridNameColumn: this.onClickGridNameColumn\r\n            }\r\n          }\r\n        }, \r\n        { name: 'modelId', header: 'Model ID', align: \"center\", sortable: true, whiteSpace: \"normal\" },\r\n        { name: 'priorityNm', header: 'Priority', align: \"center\", sortable: true, whiteSpace: \"normal\" },\r\n        { name: 'limitRuntime', header: 'Limit (Min.)', align: \"center\", sortable: true, whiteSpace: \"normal\" },\r\n        { name: 'regDate', header: 'Update Date', align: \"center\", sortable: true, whiteSpace: \"normal\" },\r\n        { name: 'userId', header: 'User', align: \"center\", sortable: true, whiteSpace: \"normal\" },\r\n        { name: 'testResult', header: 'Test Result (CPU/Duration)', align: \"center\" },\r\n        {\r\n          name: 'file', header: 'File', width: 100, align: \"center\",\r\n          renderer: { type: FileRenderer, options: { listData: res.list, onClickFileReq: this.onClickFileReq} }\r\n        },\r\n        {\r\n          name: 'resourceTest', header: 'Resource Test', width: 100, align: \"center\",\r\n          renderer: { type: LinkRenderer, options: { listData: res.list, onClickTestReq: this.onClickTestReq } }\r\n        }\r\n      ];\r\n      this.setState({ gridData: res.list, pagesPage: pagesInfo.page, pagesTotalCount: pagesInfo.totalCount, pagesPerPage: pagesInfo.pageCount, columns: columns });\r\n    } else if (res.result === \"fail\") {\r\n      Msg.error(res.message);\r\n      if (res.errCode === \"401\") {\r\n        console.log(res.errCode);\r\n        this.props.main.setState({ login: false, role: '', username: '', sessionId: '', userInfo: {} });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n * 랜더러 클릭 이벤트 핸들러\r\n * @param {Object} item 선택 Row 데이터\r\n * @param {MouseEvent} e 클릭 이벤트\r\n * @param {Object} props 랜더러 Options\r\n */\r\n  onClickGridNameColumn(item, e, props) {\r\n    if (this.props.isPopup && this.props.onChangeItem) {\r\n      this.props.onChangeItem(item);\r\n    }\r\n    if (this.props.isPopup) {\r\n      this.props.onSelection();\r\n      this.props.onClose();\r\n    } else {\r\n      try {\r\n        let { userInfo } = this.props.main.state;\r\n        // userInfo.userPermission = \"MODELER\"; // TEST\r\n        // 관리자/등록자는 수정 팝업\r\n        if (userInfo.userPermission === \"ADMIN\" || (item.userId === userInfo.userId)) {\r\n          ModelService.getModelInfo(item.modelId, (res) => {\r\n            if (res.result === \"ok\") {\r\n              this.popupModify(res.data.modelInfo, res.list);\r\n            }\r\n            else if (res.result === \"fail\") {\r\n              Msg.error(res.message);\r\n            }\r\n          }, (e) => console.log(e));\r\n        } else {\r\n          this.setState({ selectionRowKey: e.rowKey, selectionItem: item, selectionColumName: e.columnName, showDetail: true });\r\n          const popTitle = \"Model Info.\";\r\n          this.props.main.showPopup(\r\n            popTitle,\r\n            <ModelDetail title={popTitle} main={this.props.main} selectionItem={item} onClose={(e) => this.onCloseDetail(popTitle)} />,\r\n            { width: 735, height: 677, popupBtnAreaVisible: false, contentAppendClass: \"model_content\" }, \r\n            null, \r\n            null\r\n          );\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n * 검색 클릭 핸들러\r\n */\r\n  onClickSch() {\r\n    this.requestData(1, this.refs.schType.value, this.refs.schKey.value);\r\n  }\r\n\r\n  /**\r\n   * 삭제 클릭 핸들러\r\n   */\r\n  onClickDel() {\r\n    const popTitle = \"모델 삭제\";\r\n    this.props.main.showPopup(\r\n      popTitle,\r\n      \"모델 삭제하시겠습니까?\",\r\n      { width: 300, height: 200, headerVisiable: false }, () => this.onConfirmOkDel(), null\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 모델 삭제 확인 OK\r\n   */\r\n  onConfirmOkDel() {\r\n    // console.log( this.refs.grid.getInstance().getCheckedRows() );\r\n    const chkedModels = this.refs.grid.getInstance().getCheckedRows();\r\n    let delModels = [];\r\n    for (let i = 0; i < chkedModels.length; i++) {\r\n      delModels.push(chkedModels[i].modelId);\r\n    }\r\n    ModelService.delete(delModels, this.onResultDel, (e) => console.log(e));\r\n  }\r\n\r\n  /**\r\n   * 모델 삭제 확인 취소\r\n   */\r\n  onConfirmCancelDel() {\r\n    // 삭제 확인 취소시\r\n  }\r\n\r\n  /**\r\n   * 모델 삭제 결과 핸들러\r\n   * @param {Object} res \r\n   */\r\n  onResultDel(res) {\r\n    this.requestData();\r\n    if (res.result === \"ok\") {\r\n      Msg.ok(\"모델 삭제 되었습니다.\");\r\n    }\r\n    else if (res.result === \"fail\") {\r\n      Msg.error(res.message);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 모델 등록 클릭 핸들러\r\n   */\r\n  onClickReg() {\r\n    const {\r\n      modifyModelInfo, modifyModelFiles\r\n    } = this.state;\r\n    // this.setState({showReg:true});\r\n    const popTitle = \"Model Regist\";\r\n    this.props.main.showPopup(\r\n      popTitle,\r\n      <ModelReg title={popTitle} main={this.props.main} modifyFlag={modifyModelInfo !== undefined} modifyModelInfo={modifyModelInfo} modifyModelFiles={modifyModelFiles} onClose={(e) => this.onCloseReg(popTitle)} />,\r\n      { width: 735, height: 530, okLabel: \"등록\", popupBtnAreaVisible: false, contentAppendClass: \"model_content\" }, null, null\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 모델 수정 팝업\r\n   * @param {Object} modelInfo \r\n   * @param {Array} modelFiles \r\n   */\r\n  popupModify(modelInfo, modelFiles) {\r\n    // this.setState({modifyModelInfo:modelInfo, modifyModelFiles:modelFiles, showDetail:false, showReg:true});\r\n    const popTitle = \"Model Modify\";\r\n    this.props.main.showPopup(\r\n      popTitle,\r\n      <ModelReg main={this.props.main} modifyFlag={modelInfo !== undefined} modifyModelInfo={modelInfo} modifyModelFiles={modelFiles} onClose={(e) => this.onCloseReg(popTitle)} />,\r\n      { width: 735, height: 530, okLabel: \"저장\", popupBtnAreaVisible: false, contentAppendClass: \"model_content\" }, null, null\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 등록 / 수정 팝업 닫힘 핸들러\r\n   * @param {String} title \r\n   */\r\n  onCloseReg(title) {\r\n    this.requestData(this.state.pagesPage);\r\n    this.setState({ modifyModelInfo: undefined, modifyModelFiles: undefined });\r\n    this.props.main.hidePopup(title);\r\n  }\r\n\r\n  /**\r\n   * 리스트 평가 버튼 클릭 핸들러\r\n   * @param {Object} item \r\n   * @param {Event} e \r\n   * @param {Object} props \r\n   */\r\n  onClickTestReq(item, e, props) {\r\n    // console.log('onClickTestReq');\r\n    // console.log(item);\r\n    // console.log(e);\r\n    // console.log(props);\r\n    ModelService.modelTestReq(item.modelId, this.onResultTestReq, (err) => Msg.error(err.message));\r\n  }\r\n\r\n  /**\r\n   * 소스보기 버튼 클릭 핸들러\r\n   * @param {Object} item \r\n   * @param {Event} e \r\n   * @param {Object} props \r\n   */\r\n  onClickFileReq(item, e, props) {\r\n    ModelService.getModelFile(item.modelId, this.onResultFileReq, (err) => Msg.error(err.message));\r\n  }\r\n\r\n  /**\r\n   * 평가 결과 핸들러\r\n   * @param {Object} res \r\n   */\r\n  onResultTestReq(res) {\r\n    if (res.result === \"ok\") {\r\n      Msg.ok(res.message);\r\n    }\r\n    else if (res.result === \"fail\") {\r\n      Msg.error(res.message);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 모델 소스 보기\r\n   * @param {*} res\r\n   * @param {String} modleId\r\n   */\r\n  onResultFileReq(res) {\r\n    if (res.result === \"ok\") {\r\n      this.props.main.showPopup(res.data.fileName, <textarea value={res.data.contents} style={ {height: '600px'} }></textarea> );\r\n    }\r\n    else if (res.result === \"fail\") {\r\n      Msg.error(res.message);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      gridData, bodyHeight, columns,\r\n      pagesPage, pagesTotalCount, pagesPerPage\r\n    } = this.state;\r\n    let rh = [];\r\n    return <div className=\"page_layout\">\r\n\r\n      <div className=\"layout_contents\">\r\n        <div className=\"content_list model_aid_list table_type1\">\r\n\r\n          <div className=\"content_title\">\r\n            <h3 className=\"tit\">Model Management</h3>\r\n          </div>\r\n\r\n          <div className=\"search_condition marginbottomremove\" >\r\n            <div className=\"ipt_group search_basis\">\r\n              <div className=\"group_center\">\r\n                <select ref=\"schType\" className=\"combobox\" style={{ float: \"left\", marginLeft: 10 }}>\r\n                  <option value=\"modelName\">Model Name</option>\r\n                  <option value=\"user\">User</option>\r\n                </select>\r\n                <input ref=\"schKey\" type=\"text\" className=\"ipt_text ml10\" placeholder=\"검색어를 입력해 주세요.\" style={{ width: 495 }} />\r\n                <button className=\"btn btn_black\" onClick={() => this.onClickSch()}>검색</button>\r\n              </div>\r\n            </div>\r\n            <button className=\"btn btn_add btn_blue\" onClick={this.onClickReg}></button>\r\n          </div>\r\n\r\n          <div className=\"content_stitle\">\r\n            <span>Total : {common.displNum(pagesTotalCount)}</span>\r\n          </div>\r\n          <Grid ref=\"grid\" rowHeaders={rh} header={{ height: 50, whiteSpace: \"normal\" }}\r\n            data={gridData} columnOptions={{ resizable: true }}\r\n            columns={columns}\r\n            scrollX={false} scrollY={false}\r\n          />\r\n          <div className=\"gridControlArea btn_area\">\r\n            <Pagination ref={'page'}\r\n              page={pagesPage}\r\n              totalCount={pagesTotalCount}\r\n              perPage={pagesPerPage}\r\n              onClickItem={this.onClickPageItem} />\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>;\r\n  }\r\n}\r\n\r\n/**\r\n * 평가 컬럼 랜더러\r\n */\r\nclass LinkRenderer {\r\n  constructor(props) {\r\n    const { onClickTestReq, listData } = props.columnInfo.renderer.options;\r\n    let item = undefined;\r\n    if (listData && listData.length > 0)\r\n      item = listData[props.rowKey];\r\n    if (item === undefined) item = {};\r\n    let el = document.createElement('b');\r\n    // 평가 중이아닐경우 평가 버튼 표시\r\n    // 평가 중일경우 Testing.. 텍스트 표시\r\n    if (item.evaluationStatus === 'tested' || item.evaluationStatus === 'init') {\r\n      el = document.createElement('a');\r\n      el.className = \"table_btn btn_lineblue btn_resource gridItemBtn\";\r\n      el.innerText = \"TEST\";\r\n      el.title = \"TEST\";\r\n      el.addEventListener(\"click\", (e) => onClickTestReq(item, e, props));\r\n    } else {\r\n      el.className = \"font_blue\";\r\n      el.innerText = \"Testing..\";\r\n    }\r\n    this.el = el;\r\n  }\r\n  getElement() {\r\n    return this.el;\r\n  }\r\n}\r\n\r\nclass FileRenderer {\r\n  constructor(props) {\r\n    const { onClickFileReq, listData } = props.columnInfo.renderer.options;\r\n    let item = undefined;\r\n    if (listData && listData.length > 0)\r\n      item = listData[props.rowKey];\r\n    if (item === undefined) item = {};\r\n    let el = document.createElement('button');\r\n      el.className = 'btn_history';\r\n      el.innerText = \"\";\r\n      el.title = \"FILE\";\r\n      el.addEventListener(\"click\", (e) => onClickFileReq(item, e, props));\r\n    this.el = el;\r\n  }\r\n\r\n  getElement() {\r\n    return this.el\r\n  }\r\n}\r\n\r\nexport default ModelManager;","import http from \"comp/http-common\";\r\n\r\n/**\r\n * ModelService\r\n * use Example\r\n *  ModelService.list(function(res) {\r\n    if (res.result === \"ok\") {\r\n        // TODO :: success process\r\n    }\r\n    ,(err) => Msg.error(err.message));\r\n **/\r\nclass ModelService {\r\n  /**\r\n   * 모델 리스트\r\n   * @param {Object} parm \r\n   * @param {Function} resFn \r\n   * @param {Function} errFn \r\n   */\r\n  list(parm, resFn, errFn) {\r\n    let formData = new FormData();\r\n    for (let k in parm) {\r\n      formData.append(k, parm[k]);\r\n    }\r\n    return http.post(\"/model/list\", formData).then(function (res) {\r\n      if (resFn) {\r\n        resFn(res.data);\r\n      }\r\n    })\r\n      .catch(function (err) {\r\n        if (errFn) {\r\n          errFn(err);\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  /**\r\n   * 모델 등록2\r\n   * @param {Object} parm \r\n   * @param {Function} resFn \r\n   * @param {Function} errFn \r\n   */\r\n  regist(parm, resFn, errFn) { \r\n    let formData = new FormData();\r\n    if (process.env.NODE_ENV === \"development\") {\r\n      formData.append(\"developing\", \"true\");\r\n    }\r\n    for (let k in parm) {\r\n      formData.append(k, parm[k]);\r\n    }\r\n    return http.post(\"/model/regist\", formData).then(function (res) {\r\n      if (resFn) {\r\n        resFn(res.data);\r\n      }\r\n    }).catch(function (err) {\r\n      if (errFn) {\r\n        errFn(err);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 모델명 중복 체크\r\n   * @param {Object} parm \r\n   * @param {Function} resFn \r\n   * @param {Function} errFn \r\n   */\r\n  chkModelName(modelName, resFn, errFn) {\r\n    let formData = new FormData();\r\n    formData.append(\"modelName\", modelName);\r\n    return http.post(\"/model/chkModelName\", formData).then(function (res) {\r\n      if (resFn) {\r\n        resFn(res.data);\r\n      }\r\n    })\r\n      .catch(function (err) {\r\n        if (errFn) {\r\n          errFn(err);\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * 모델닉 중복 체크\r\n   * @param {Object} parm \r\n   * @param {Function} resFn \r\n   * @param {Function} errFn \r\n   */\r\n  chkModelNick(modelNick, resFn, errFn) {\r\n    let formData = new FormData();\r\n    formData.append(\"modelNick\", modelNick);\r\n    return http.post(\"/model/chkModelNick\", formData).then(function (res) {\r\n      if (resFn) {\r\n        resFn(res.data);\r\n      }\r\n    })\r\n      .catch(function (err) {\r\n        if (errFn) {\r\n          errFn(err);\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * 모델 정보\r\n   * @param {Object} parm \r\n   * @param {Function} resFn \r\n   * @param {Function} errFn \r\n   */\r\n  getModelInfo(modelId, resFn, errFn) {\r\n    let formData = new FormData();\r\n    formData.append(\"modelId\", modelId);\r\n    return http.post(\"/model/modelInfo\", formData).then(function (res) {\r\n      if (resFn) {\r\n        resFn(res.data);\r\n      }\r\n    })\r\n      .catch(function (err) {\r\n        if (errFn) {\r\n          errFn(err);\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * 모델 정보(이력)\r\n   * @param {Object} parm \r\n   * @param {Function} resFn \r\n   * @param {Function} errFn \r\n   */\r\n  getModelHistInfo(parm, resFn, errFn) {\r\n    let formData = new FormData();\r\n    console.log(parm);\r\n    formData.append(\"modelId\", parm.modelId);\r\n    formData.append(\"regDate\", parm.regDate);\r\n    return http.post(\"/model/modelHistInfo\", formData).then(function (res) {\r\n      if (resFn) {\r\n        resFn(res.data);\r\n      }\r\n    })\r\n      .catch(function (err) {\r\n        if (errFn) {\r\n          errFn(err);\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * 모델 등록 이력 리스트\r\n   * @param {Object} parm \r\n   * @param {Function} resFn \r\n   * @param {Function} errFn \r\n   */\r\n  regHistory(parm, resFn, errFn) {\r\n    let formData = new FormData();\r\n    for (let k in parm) {\r\n      formData.append(k, parm[k]);\r\n    }\r\n    return http.post(\"/model/regHistory\", formData).then(function (res) {\r\n      if (resFn) {\r\n        resFn(res.data);\r\n      }\r\n    })\r\n      .catch(function (err) {\r\n        if (errFn) {\r\n          errFn(err);\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * 모델 평가\r\n   * @param {Object} parm \r\n   * @param {Function} resFn \r\n   * @param {Function} errFn \r\n   */\r\n  modelTestReq(modelId, resFn, errFn) {\r\n    let formData = new FormData();\r\n    formData.append(\"modelId\", modelId);\r\n    return http.post(\"/model/modelTestReq\", formData).then(function (res) {\r\n      if (resFn) {\r\n        resFn(res.data);\r\n      }\r\n    })\r\n      .catch(function (err) {\r\n        if (errFn) {\r\n          errFn(err);\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * 모델 소스 파일 읽기\r\n   * @param {String} parm \r\n   * @param {Function} resFn \r\n   * @param {Function} errFn \r\n   */\r\n  getModelFile(modelId, resFn, errFn) {\r\n    let formData = new FormData();\r\n    formData.append(\"modelId\", modelId);\r\n    return http.post(\"/model/modelSourceView\", formData).then(function (res) {\r\n      if (resFn) {\r\n        resFn(res.data);\r\n      }\r\n    })\r\n      .catch(function (err) {\r\n        if (errFn) {\r\n          errFn(err);\r\n        }\r\n      });\r\n  }\r\n}\r\n\r\nexport default new ModelService();","import http from \"comp/http-common\";\r\n\r\n\r\nclass UploadFilesService {\r\n    upload(file, onUploadProgress) {\r\n        let formData = new FormData();\r\n\r\n        formData.append(\"uploadfile\", file);\r\n\r\n        return http.post(\"/file/upload \", formData, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n            onUploadProgress,\r\n        });\r\n    }\r\n\r\n    getFiles() {\r\n        return http.get(\"/file/files\");\r\n    }\r\n}\r\n\r\nexport default new UploadFilesService();","import React, { Component } from 'react';\r\nimport { CommonCode } from 'main';\r\nimport { Msg, common, Validation } from 'comp';\r\nimport { makeParam } from 'comp/common';\r\nimport UploadService from 'comp/file/services/upload-files.service';\r\nimport ModelService from './ModelService';\r\n\r\n/**\r\n * 화면명 : 모델 등록\r\n * 화면 경로 : 모델 > 모델 관리 > 모델 등록\r\n * 화면 코드 : \r\n * 참고 : 모델 관리 화면에서 사용하는 등록 화면\r\n */\r\nclass ModelReg extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      nameValid: null,\r\n      nickValid: null,\r\n      modelFileValid: null,\r\n      descLength: 0,\r\n      progress: 0,\r\n      currentFile: undefined,\r\n      modelFiles: [],\r\n      modelFile: null,\r\n      initModify: false,\r\n      inputChange: false,\r\n      checkedPriority: undefined\r\n    };\r\n    this.onClickReg = this.onClickReg.bind(this);\r\n    this.validationCheck = this.validationCheck.bind(this);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onResultRegist = this.onResultRegist.bind(this);\r\n    this.onChangeDesc = this.onChangeDesc.bind(this);\r\n    this.selectFile = this.selectFile.bind(this);\r\n    this.upload = this.upload.bind(this);\r\n    this.onResultFileReq = this.onResultFileReq.bind(this);\r\n    // this.fileValidationCheck = this.fileValidationCheck.bind(this);\r\n    this.onChangePriority = this.onChangePriority.bind(this);\r\n    this.onClickRadio = this.onClickRadio.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refs.modelName.focus();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { initModify } = this.state;\r\n    let { modifyFlag } = this.props;\r\n    if (modifyFlag && !initModify) {\r\n      this.setState({\r\n        initModify: true\r\n        , modifyFlag: modifyFlag\r\n      });   // 수정일경우 처음에 중복확인 PASS\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 모델명 변경 핸들러\r\n   */\r\n  onChangeName() {\r\n    this.setState({ inputChange: true });\r\n  }\r\n\r\n  /**\r\n   * 설명 변경 핸들러\r\n   */\r\n  onChangeDesc() {\r\n    const maxLen = 100;\r\n    if (this.refs.modelDesc.value.length > maxLen) {\r\n      this.refs.modelDesc.value = this.refs.modelDesc.value.substr(0, maxLen);\r\n    }\r\n    this.setState({ descLength: this.refs.modelDesc.value.length, inputChange: true });\r\n  }\r\n\r\n  /**\r\n   * 파일 선택\r\n   * @param {FileEvent} event \r\n   */\r\n  selectFile(event) {\r\n    if (event.target.files.length < 1) return;\r\n    const file = event.target.files[0];\r\n    // if (!this.fileValidationCheck(file)) return;\r\n    this.upload(file);\r\n  }\r\n\r\n  /**\r\n   * 파일 업로드\r\n   * @param {File} uploadFile \r\n   */\r\n  upload(uploadFile) {\r\n    this.setState({ progress: 0, currentFile: uploadFile });\r\n    if (uploadFile.size > common.getFileSizeByte(\"10MB\")) {\r\n      Msg.error(\"업로드 가능한 파일사이즈 : 10MB\");\r\n      return;\r\n    }\r\n    this.props.main.showLoading();\r\n    UploadService.upload(uploadFile, (event) => {\r\n      this.setState({ progress: Math.round((100 * event.loaded) / event.total) })\r\n    })\r\n      .then((response) => {\r\n        this.props.main.hideLoading();\r\n        const res = response.data;\r\n        if (res.result === \"ok\") {\r\n          let files = [];\r\n          files.push(res.data.file);\r\n          this.setState({ modelFiles: files, modelFile: res.data.file, inputChange: true });\r\n        } else if (res.result === \"fail\") {\r\n          Msg.error(res.message);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        this.props.main.hideLoading();\r\n        Msg.error(\"정보 확인 실패 실패되었습니다.\");\r\n        this.setState({\r\n          progress: 0,\r\n          message: \"Could not inform the file!\",\r\n          currentFile: undefined,\r\n        });\r\n      });\r\n  }\r\n\r\n  /**\r\n   * 파일리스트에 동일한 파일 체크\r\n   * @param {File} file \r\n   */\r\n  // fileValidationCheck(file) {\r\n  //     const files = this.state.modelFiles;\r\n  //     for (let i=0; i<files.length; i++) {\r\n  //         if (files[i].fileName === file.name && Number(files[i].fileSize) === file.size) {\r\n  //             Msg.warn(\"이미 동일한 파일이 추가되어 있습니다.\");\r\n  //             return false;\r\n  //         }\r\n  //     }\r\n  //     return true;\r\n  // }\r\n\r\n  /**\r\n   * 모델 등록 클릭 핸들러\r\n   */\r\n  onClickReg() {\r\n    if (!this.validationCheck()) return;\r\n    const { checkedPriority } = this.state;\r\n    const currentFile = this.state.currentFile;\r\n    // console.log(currentFile);\r\n    let parm = makeParam(this);\r\n    let ext = \"\"\r\n    let file = this.state.modelFile;\r\n    if (file.fileName.indexOf(\".\") > -1) {\r\n      ext = file.fileName.substr(file.fileName.lastIndexOf(\".\") + 1, file.fileName.length).toUpperCase();\r\n    }\r\n    parm.fileName = file.fileName;\r\n    parm.fileSize = currentFile.size;\r\n    parm.baseImage = ext;\r\n    parm.priority = checkedPriority;\r\n    parm.modelFileContext = currentFile;\r\n    ModelService.regist(parm, this.onResultRegist, (e) => console.log(e));\r\n  }\r\n\r\n  /**\r\n   * 모델 등록전 입력값 확인\r\n   * @return {Boolean} 확인결과\r\n   */\r\n  validationCheck() {\r\n    const { inputChange, checkedPriority,\r\n      // isNameChk, isNickChk, \r\n      modelFiles } = this.state;\r\n    let chkState = {};\r\n    if (!inputChange) {\r\n      Msg.warn(\"변경된 사항이 없습니다.\");\r\n      return false;\r\n    }\r\n    // 초기화\r\n    this.setState({ nameValid: null, nickValid: null, modelFileValid: null, priorityValid: null });\r\n    // 모델명\r\n    let chkVal = this.refs.modelName.value;\r\n    let valiRes = Validation.chkModelName(chkVal);\r\n    chkState.validName = true;\r\n    if (!valiRes.result) {\r\n      Msg.error(valiRes.errMsg);\r\n      chkState.validName = false;\r\n      this.setState(chkState);\r\n      return false;\r\n    }\r\n\r\n    chkState.priorityValid = true;\r\n\r\n    if (checkedPriority === null) {\r\n      Msg.error(\"우선순위를 선택해 주세요.\");\r\n      chkState.priorityValid = false;\r\n      this.setState(chkState);\r\n      return false;\r\n    }\r\n\r\n    // Limit\r\n    chkVal = this.refs.limitRuntime.value;\r\n    if (chkVal.length < 1) {\r\n      Msg.error(\"Limit 입력해 주세요.\");\r\n      this.setState(chkState);\r\n      return false;\r\n    } else if (isNaN(chkVal)) {\r\n      Msg.error(\"Limit 잘못된 입력입니다.\");\r\n      this.setState(chkState);\r\n      return false;\r\n    }\r\n\r\n    chkState.modelFileValid = true;\r\n    if (modelFiles.length < 1) {\r\n      Msg.error(\"모델파일은 필수 입니다.\");\r\n      chkState.modelFileValid = false;\r\n      this.setState(chkState);\r\n      return false;\r\n    }\r\n\r\n    this.setState(chkState);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * 등록 결과 핸들러\r\n   * @param {Object} res \r\n   */\r\n  onResultRegist(res) {\r\n    this.setState(this.defaultState);\r\n    if (res.result === \"ok\") {\r\n      Msg.ok(\"등록 완료되었습니다.\");\r\n      this.props.onClose();\r\n    } else if (res.result === \"fail\") {\r\n      Msg.error(res.message);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * 우선순위 변경 핸들러\r\n   */\r\n  onChangePriority() {\r\n    try {\r\n      let { modifyModelInfo } = this.props;\r\n      modifyModelInfo.priority = this.refs.priority.value;\r\n      this.setState({ inputChange: true });\r\n    } catch (err) { }\r\n  }\r\n\r\n  /**\r\n   * 모델 우선순위 Radio 클릭 이벤트 핸들러\r\n   * @param {MouseEvent} e \r\n   */\r\n  onClickRadio(e) {\r\n    this.setState({ checkedPriority: e.currentTarget.value, inputChange: true });\r\n  }\r\n\r\n  /**\r\n * 소스보기 버튼 클릭 핸들러\r\n * @param {Object} item \r\n * @param {Event} e \r\n * @param {Object} props \r\n */\r\n  onClickFileReq(item, e, props) {\r\n    // this.props.onClose();\r\n    ModelService.getModelFile(item.modelId, this.onResultFileReq, (err) => Msg.error(err.message));\r\n  }\r\n  /**\r\n   * 모델 소스 보기\r\n   * @param {*} res\r\n   * @param {String} modleId\r\n   */\r\n  onResultFileReq(res) {\r\n    if (res.result === \"ok\") {\r\n        this.props.main.showPopup(res.data.fileName, <textarea value={res.data.contents} style={{ height: '600px' }}></textarea>);\r\n    }\r\n    else if (res.result === \"fail\") {\r\n        Msg.error(res.message);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      // selectedFiles,progress,\r\n      modelFiles, initModify, checkedPriority, modelFile,\r\n      descLength } = this.state;\r\n    let { modifyFlag, modifyModelInfo, modifyModelFiles } = this.props;\r\n    if (modifyModelInfo === undefined) modifyModelInfo = {};\r\n    if (!initModify && (modelFiles && modifyModelFiles) && (modelFiles.length !== modifyModelFiles.length))\r\n      this.setState({ modelFiles: modifyModelFiles });\r\n    if (!checkedPriority) {\r\n      if (modifyModelInfo.priority !== undefined) {\r\n        checkedPriority = String(modifyModelInfo.priority);\r\n      } else {\r\n        checkedPriority = \"3\";// LOW (Default Value)\r\n      }\r\n      this.setState({ checkedPriority: checkedPriority });\r\n    }\r\n\r\n    let modelFileName = \"\";\r\n    if (modelFile) {\r\n      modelFileName = modelFile.fileName + \"(\" + common.getDisplFileSize(Number(modelFile.fileSize)) + \")\";\r\n    }\r\n\r\n    let radios = [];\r\n    const prioritys = CommonCode.getCodeList(\"MODEL_PRIORITY\");\r\n    let priority;\r\n    for (let i = 0; i < prioritys.length; i++) {\r\n      priority = prioritys[i];\r\n      radios.push(<input id={priority.code} type=\"radio\" name=\"priority\" value={priority.value}\r\n        checked={checkedPriority === priority.value} onClick={(e) => this.onClickRadio(e)} />);\r\n      radios.push(<label for={priority.code}>{priority.codeName}</label>);\r\n    }\r\n\r\n    if (descLength === 0 && modifyModelInfo.modelDesc !== null && modifyModelInfo.modelDesc !== undefined && modifyModelInfo.modelDesc.length > 0)\r\n      descLength = modifyModelInfo.modelDesc.length;\r\n\r\n\r\n    return <div className=\"table_type2\">\r\n      {modifyFlag ?\r\n        <input type=\"text\" ref=\"modelId\" style={{ display: \"none\" }} id=\"inputId\" defaultValue={modifyModelInfo.modelId} disabled />\r\n        : null}\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <th>Model Name <span className=\"necessary\">*</span></th>\r\n            <td>\r\n              <div className=\"ipt_group\">\r\n                <input ref=\"modelName\" type=\"text\" className=\"ipt_text\" placeholder=\"한글,영문 최대 50자\" style={{ width: 430 }}\r\n                  onChange={(e) => { this.onChangeName() }}\r\n                  maxLength=\"50\" defaultValue={modifyModelInfo.modelName} />\r\n              </div>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <th>Model File<span className=\"necessary\">*</span>\r\n            </th>\r\n            <td>\r\n              <div className=\"ipt_group\">\r\n                <label className=\"ipt_file\" for=\"iptFile\" style={{ width: \"100%\" }}>\r\n                  <input type=\"text\" className=\"ipt_text\" readonly=\"readonly\" style={{ width: \"calc(100% - 67px)\", paddingLeft: 44 }} placeholder=\"업로드 제한 : 10M이하 / 파일명 최대 길이 90자\"\r\n                    defaultValue={modelFileName} title={modelFileName} />\r\n                  <span className=\"btn btn_blue btn_file\"></span>\r\n                  <input type=\"file\" id=\"iptFile\" onChange={this.selectFile} />\r\n                </label>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <th>Priority <span className=\"necessary\">*</span></th>\r\n            <td><div className=\"radio_group\">{radios}</div></td>\r\n          </tr>\r\n          <tr>\r\n            <th>Limit <span className=\"necessary\">*</span></th>\r\n            <td><div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <input ref=\"limitRuntime\" type=\"number\" className=\"ipt_number\" style={{ width: 90 }} defaultValue={modifyModelInfo.limitRuntime ? modifyModelInfo.limitRuntime : 0} min={0} max={99999} step={1}\r\n                onChange={(e) => this.setState({ inputChange: true })} />&nbsp;분 <span class=\"font_blue\">(제한없는 경우, 0 입력)</span>\r\n            </div></td>\r\n          </tr>\r\n          <tr>\r\n            <th>Description</th>\r\n            <td style={{ textAlign: \"right\" }}>\r\n              <textarea ref=\"modelDesc\" rows=\"3\" cols=\"100\" maxlength=\"100\" onChange={(e) => this.onChangeDesc()} defaultValue={modifyModelInfo.modelDesc}></textarea>\r\n              <span className=\"font_gray\" style={{ paddingRight: 5 }}>(<span style={{ color: \"#ff7272\" }}>{descLength}</span> / 100)</span>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div className=\"popupBtnArea btn_area addbtnarea\"><p className=\"btn2\">\r\n        <button className=\"btn btn_white\" onClick={() => this.props.onClose()}>취소</button>\r\n        <button className=\"btn btn_black\" onClick={(e) => this.onClickReg()}>저장</button>\r\n        {this.props.sourceView===true ? (<button className=\"btn btn_blue\" onClick={(e) => this.onClickFileReq(modifyModelInfo)}>소스보기</button>) : null }\r\n      </p></div>\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default ModelReg;","import React, { Component } from 'react';\r\nimport { CommonCode } from 'main';\r\nimport { Msg, common } from 'comp';\r\nimport { ModelService } from 'model';\r\n\r\n/**\r\n * 모델 상세\r\n */\r\nclass ModelDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modelInfo: undefined,\r\n            files: []\r\n        };\r\n        this.onResultInfo = this.onResultInfo.bind(this);\r\n        this.onResultFileReq = this.onResultFileReq.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.main.showLoading();\r\n        ModelService.getModelInfo(this.props.selectionItem.modelId, this.onResultInfo, (e) => console.log(e));\r\n    }\r\n\r\n    /**\r\n     * 모델 정보 결과 핸들러\r\n     * @param {Object} res \r\n     */\r\n    onResultInfo(res) {\r\n        this.props.main.hideLoading();\r\n        if (res.result === \"ok\") {\r\n            this.setState({ modelInfo: res.data.modelInfo, files: res.list });\r\n        }\r\n        else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 소스보기 버튼 클릭 핸들러\r\n     * @param {Object} item \r\n     * @param {Event} e \r\n     * @param {Object} props \r\n     */\r\n    onClickFileReq(item, e, props) {\r\n        ModelService.getModelFile(item.modelId, this.onResultFileReq, (err) => Msg.error(err.message));\r\n    }\r\n    /**\r\n     * 모델 소스 보기\r\n     * @param {*} res\r\n     * @param {String} modleId\r\n     */\r\n    onResultFileReq(res) {\r\n        if (res.result === \"ok\") {\r\n            this.props.main.showPopup(res.data.fileName, <textarea value={res.data.contents} style={{ height: '600px' }}></textarea>);\r\n        }\r\n        else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { modelInfo, files } = this.state;\r\n        let modelFileItems = [];\r\n        if (modelInfo === undefined) modelInfo = {};\r\n        let itm;\r\n        if (files.length < 1) {\r\n            modelFileItems.push(<tr><td colSpan={4} style={{ textAlign: \"center\" }}><span className=\"font_gray\">파일이 없습니다.</span></td></tr>);\r\n        }\r\n        for (let i = 0; i < files.length; i++) {\r\n            itm = files[i];\r\n            modelFileItems.push(<FileRow file={itm} />);\r\n        }\r\n        const optsPriority = CommonCode.getCodeSelectList(\"MODEL_PRIORITY\", \"value\");\r\n        let defaultValuePriority = undefined;\r\n        for (let i = 0; i < optsPriority.length; i++) {\r\n            if (optsPriority[i].value === String(modelInfo.priority)) {\r\n                defaultValuePriority = optsPriority[i];\r\n                break;\r\n            }\r\n        }\r\n\r\n        return <div className=\"table_type2\">\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <th>모델명</th>\r\n                        <td>\r\n                            <div className=\"ipt_group\">\r\n                                <span className=\"txt\">{modelInfo.modelName}</span>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>모델 파일</th>\r\n                        <td>\r\n                            <fieldset id=\"modelMain\">\r\n                                <table className=\"fileTable\">\r\n                                    <tr>\r\n                                        <th>파일명</th>\r\n                                        <th style={{ width: 80 }}>사이즈</th>\r\n                                        <th style={{ width: 80 }}>타입</th>\r\n                                    </tr>\r\n                                    {modelFileItems}\r\n                                </table>\r\n                            </fieldset>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Priority</th>\r\n                        <td><span className=\"txt\">{defaultValuePriority ? defaultValuePriority.label : ''}</span>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Limit</th>\r\n                        <td><div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                            <span className=\"txt\">{modelInfo.limitRuntime ? modelInfo.limitRuntime : '0'}</span>\r\n                            <span className=\"font_gray\" style={{ paddingLeft: 10 }}>분 (제한없는경우 0)</span>\r\n                        </div></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>설명 (최대 100자)</th>\r\n                        <td><textarea ref=\"modelDesc\" rows=\"2\" cols=\"100\" maxLength=\"100\" disabled defaultValue={modelInfo.modelDesc}>{modelInfo.modelDesc}</textarea></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>CPU Cores</th>\r\n                        <td>\r\n                            <div className=\"ipt_group\">\r\n                                <span className=\"txt\">{modelInfo.cpuCores}</span>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Memory</th>\r\n                        <td>\r\n                            <div className=\"ipt_group\">\r\n                                <span className=\"txt\">{modelInfo.mem}</span>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>수행시간</th>\r\n                        <td>\r\n                            <div className=\"ipt_group\">\r\n                                <span className=\"txt\">{modelInfo.elapsed}</span>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <div className=\"popupBtnArea btn_area addbtnarea\"><p className=\"btn2\">\r\n                <button className=\"btn btn_white\" onClick={() => this.props.main.hidePopup(this.props.title)}>닫기</button>\r\n                {this.props.sourceView===true ? (<button className=\"btn btn_blue\" onClick={(e) => this.onClickFileReq(modelInfo)}>소스보기</button>) : null }\r\n            </p></div>\r\n        </div>;\r\n    }\r\n}\r\n\r\n/**\r\n * 파일리스트 Row\r\n */\r\nclass FileRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mainYn: \"N\"\r\n        };\r\n    }\r\n    render() {\r\n        const { file } = this.props;\r\n        const { fileName, fileSize, fileExt } = file;\r\n        return <tr>\r\n            <td>{fileName}</td>\r\n            <td>{common.getDisplFileSize(fileSize)}</td>\r\n            <td>{fileExt && fileExt.length > 0 ? fileExt.toUpperCase() : \"\"}</td>\r\n        </tr>;\r\n    }\r\n}\r\n\r\nexport default ModelDetail;\r\n","import React, { Component } from 'react';\r\nimport { ModelService } from 'model';\r\nimport { common, Msg } from 'comp';\r\nimport { CommonCode } from 'main';\r\n\r\n/**\r\n * 화면명 : 이력 모델 상세\r\n * 화면 경로 : 모델 > 모델 관리 > 모델 상세\r\n * 화면 코드 : \r\n * 참고 : 모델 관리 화면에서 사용하는 등록 화면\r\n */\r\nclass ModelHistDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modelInfo: undefined,\r\n            files: []\r\n        };\r\n        this.onResultInfo = this.onResultInfo.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.main.showLoading();\r\n        ModelService.getModelHistInfo(this.props.selectionItem, this.onResultInfo, (e) => this.props.main.hideLoading());\r\n    }\r\n\r\n    onResultInfo(res) {\r\n        this.props.main.hideLoading();\r\n        console.log(res.data);\r\n        if (res.result === \"ok\") {\r\n            this.setState({ modelInfo: res.data.modelInfo, files: res.list });\r\n        }\r\n        else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { modelInfo, files } = this.state;\r\n        let modelFileItems = [];\r\n        if (modelInfo === undefined) modelInfo = {};\r\n        let itm;\r\n        if (files.length < 1) {\r\n            modelFileItems.push(<tr><td colSpan={4} style={{ textAlign: \"center\" }}><span className=\"font_gray\">파일이 없습니다.</span></td></tr>);\r\n        }\r\n        for (let i = 0; i < files.length; i++) {\r\n            itm = files[i];\r\n            modelFileItems.push(<FileRow file={itm} />);\r\n        }\r\n        return <div className=\"table_type2\">\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <th>모델명</th>\r\n                        <td>\r\n                            <div className=\"ipt_group\">\r\n                                <span className=\"txt\">{modelInfo.modelName}</span>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>모델 파일</th>\r\n                        <td>\r\n                            <fieldset id=\"modelMain\">\r\n                                <table className=\"fileTable\">\r\n                                    <tr>\r\n                                        <th>파일명</th>\r\n                                        <th style={{ width: 80 }}>사이즈</th>\r\n                                        <th style={{ width: 80 }}>타입</th>\r\n                                    </tr>\r\n                                    {modelFileItems}\r\n                                </table>\r\n                            </fieldset>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Priority</th>\r\n                        <td><span className=\"txt\">{modelInfo.priorityNm}</span>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Limit</th>\r\n                        <td><div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                            <span className=\"txt\">{modelInfo.limitRuntime ? modelInfo.limitRuntime : '0'}</span>\r\n                            <span className=\"font_gray\" style={{ paddingLeft: 10 }}>분 (제한없는경우 0)</span>\r\n                        </div></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>설명</th>\r\n                        <td><textarea ref=\"modelDesc\" rows=\"2\" cols=\"100\" maxLength=\"100\" disabled defaultValue={modelInfo.modelDesc}>{modelInfo.modelDesc}</textarea></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <div className=\"popupBtnArea btn_area addbtnarea\"><p className=\"btn2\">\r\n                <button className=\"btn btn_white\" onClick={() => this.props.main.hidePopup(this.props.title)}>닫기</button>\r\n            </p></div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nclass FileRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mainYn: \"N\"\r\n        };\r\n    }\r\n    render() {\r\n        const { file } = this.props;\r\n        const { fileName, fileSize, fileExt } = file;\r\n        return <tr>\r\n            <td>{fileName}</td>\r\n            <td>{common.getDisplFileSize(fileSize)}</td>\r\n            <td>{fileExt && fileExt.length > 0 ? fileExt.toUpperCase() : \"\"}</td>\r\n        </tr>;\r\n    }\r\n}\r\n\r\nexport default ModelHistDetail;","import http from \"comp/http-common\";\r\n\r\n/**\r\n * ServiceService\r\n * use Example\r\n *  ServiceService.list(function(res) {\r\n    if (res.result === \"ok\") {\r\n        // TODO :: success process\r\n    }\r\n    ,(err) => Msg.error(err.message));\r\n **/\r\nclass ServiceService {\r\n    list(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/service/list\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    \r\n    create(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        if (process.env.NODE_ENV === \"development\")\r\n            formData.append(\"developing\",\"true\");// 로컬에서 개발중일때\r\n        return http.post(\"/service/create\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    \r\n    chkServiceName(serviceName,resFn,errFn) {\r\n        let formData = new FormData();\r\n        formData.append(\"serviceName\",serviceName);\r\n        return http.post(\"/service/chkServiceName\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    \r\n    getServiceInfo(serviceId,resFn,errFn) {\r\n        let formData = new FormData();\r\n        formData.append(\"serviceId\",serviceId);\r\n        return http.post(\"/service/serviceInfo\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    \r\n    getServiceHistInfo(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        formData.append(\"serviceId\",parm.serviceId);\r\n        return http.post(\"/service/serviceHistInfo\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    \r\n    delete(serviceIds,resFn,errFn) {\r\n        let formData = new FormData();\r\n        formData.append(\"serviceIds\",serviceIds);\r\n        return http.post(\"/service/delete\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    \r\n    kill(serviceId,resFn,errFn) {\r\n        let formData = new FormData();\r\n        formData.append(\"serviceId\",serviceId);\r\n        return http.post(\"/service/kill\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n\r\n    play(dagId,resFn, errFn) {\r\n        let formData = new FormData();\r\n        formData.append(\"dagId\", dagId);\r\n        return http.post(\"/service/play\", formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default new ServiceService();","import http from \"comp/http-common\";\r\n// import airflow from \"comp/http-airflow\";\r\n\r\nclass AdminService {\r\n    /**\r\n     * 사용자 로그인 이력\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    userLoginHistory(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/admin/userLoginHistory\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    \r\n    /**\r\n     * 아이디 찾기\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    searchId(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/admin/searchId\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    \r\n    /**\r\n     * 비밀번호 찾기\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    searchPw(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/admin/searchPw\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    \r\n    /**\r\n     * 사용자 리스트\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    userList(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/admin/userList\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    \r\n    /**\r\n     * 사용자 저장\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    save(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/admin/save\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    \r\n    /**\r\n     * Service 저장 이력\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    serviceCreHistory(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/admin/serviceCreHistory\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    \r\n    /**\r\n     * Service 실행 이력\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    serviceExecHistory(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/admin/serviceExecHistory\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    \r\n    /**\r\n     * REST 실행 이력 리스트\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    restExecHistory(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/admin/restExecHistory\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    \r\n    /**\r\n     * 자원 그룹 리스트\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    resourceGroupList(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/admin/resourceGroupList\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    \r\n    /**\r\n     * Scale In/Out 이력 리스트\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    scaleHistory(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/admin/scaleHistory\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    \r\n    /**\r\n     * 자원 그룹 생성\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    createResourceGroup(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        if (process.env.NODE_ENV === \"development\")\r\n            formData.append(\"developing\",\"true\");// 로컬에서 개발중일때\r\n        return http.post(\"/admin/createResourceGroup\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    \r\n    /**\r\n     * 자원 그룹 정보\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    resourceGroupInfo(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/admin/resourceGroupInfo\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    \r\n    /**\r\n     * 자원 그룹 삭제\r\n     * @param {String} resourceIds \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    deleteResourceGroup(resourceIds,resFn,errFn) {\r\n        let formData = new FormData();\r\n        formData.append(\"resourceIds\",resourceIds);\r\n        return http.post(\"/admin/deleteResourceGroup\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    \r\n    // dagRuns(parm,resFn,errFn) {\r\n    //     let formData = new FormData();\r\n    //     for (let k in parm) {\r\n    //         formData.append(k,parm[k]);\r\n    //     }\r\n    //     return airflow.post(\"/api/experimental/dags/tutorial/dag_runs\",formData).then(function (res) {\r\n    //         if (resFn) {\r\n    //             resFn(res.data);\r\n    //         }\r\n    //     })\r\n    //     .catch(function (err) {\r\n    //         if (errFn) {\r\n    //             errFn(err);\r\n    //         }\r\n    //     });\r\n    // }\r\n    \r\n    /**\r\n     * Scale In/Out 요청\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    scaleInOut(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        let url = \"/admin/scale\";\r\n        if (parm.req_type === \"user_start\")\r\n            url += \"Out\";\r\n        else if (parm.req_type === \"user_stop\")\r\n            url += \"In\";\r\n        if (process.env.NODE_ENV === \"development\")\r\n            formData.append(\"developing\",\"true\");// 로컬에서 개발중일때\r\n        return http.post(url,formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * 장비 리스트\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    deviceList(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            if (parm[k])\r\n                formData.append(k,parm[k]);\r\n        }\r\n        let url = \"/admin/deviceList\";\r\n        if (process.env.NODE_ENV === \"development\")\r\n            formData.append(\"developing\",\"true\");// 로컬에서 개발중일때\r\n        return http.post(url,formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * 공통 코드 그룹 리스트\r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    commonGroupList(resFn,errFn) {\r\n        let formData = new FormData();\r\n        const parm = {};\r\n        for (let k in parm) {\r\n            if (parm[k])\r\n                formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/code/groupList\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * 공통 코드 리스트\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    commonCodeList(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            if (parm[k])\r\n                formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/code/list\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * 공통 코드 그룹 저장\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    saveCodeGroup(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            if (parm[k])\r\n                formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/code/saveCodeGroup\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * 공통 코드 저장\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    saveCode(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            if (parm[k])\r\n                formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/code/saveCode\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * 공통 코드 그룹 삭제\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    deleteCodeGroup(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            if (parm[k])\r\n                formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/code/deleteCodeGroup\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * 공통 코드 삭제\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    deleteCode(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            if (parm[k])\r\n                formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/code/deleteCode\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Service Group 리스트\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    serviceGroupList(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/admin/serviceGroupList\", formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    \r\n    /**\r\n     * Service Group 정보\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    serviceGroupInfo(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/admin/serviceGroupInfo\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    \r\n    /**\r\n     * Service Group 저장\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    createServiceGroup(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        if (process.env.NODE_ENV === \"development\")\r\n            formData.append(\"developing\",\"true\");// 로컬에서 개발중일때\r\n        return http.post(\"/admin/createServiceGroup\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    \r\n    /**\r\n     * Service Group Name 중복 체크\r\n     * @param {String} serviceGroupoName \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    chkServiceGroupName(serviceGroupoName,resFn,errFn) {\r\n        let formData = new FormData();\r\n        formData.append(\"serviceGroupName\",serviceGroupoName);\r\n        return http.post(\"/admin/chkServiceGroupName\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Service Group 삭제\r\n     * @param {String} serviceGroupNames \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    deleteServiceGroup(serviceGroupNames,resFn,errFn) {\r\n        let formData = new FormData();\r\n        formData.append(\"serviceGroupNames\",serviceGroupNames);\r\n        return http.post(\"/admin/deleteServiceGroup\",formData).then(function (res) {\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Service 실행 이력 결과\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    serviceExecHistoryResult(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/admin/serviceExecHistoryResult\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    \r\n    /**\r\n     * Scale Out Rule 저장\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    saveScaleOutRule(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/admin/saveScaleOutRule\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    \r\n    /**\r\n     * Scale Out Rule 데이터 가져오기\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    scaleInOutRuleInfo(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/admin/scaleInOutRuleInfo\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n    \r\n    /**\r\n     * Scale Out Rule 저장\r\n     * @param {Object} parm \r\n     * @param {Function} resFn \r\n     * @param {Function} errFn \r\n     */\r\n    saveScaleInOutRule(parm,resFn,errFn) {\r\n        let formData = new FormData();\r\n        for (let k in parm) {\r\n            formData.append(k,parm[k]);\r\n        }\r\n        return http.post(\"/admin/saveScaleInOutRule\",formData)\r\n            .then(function (res) {\r\n                if (resFn) {\r\n                    resFn(res.data);\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                if (errFn) {\r\n                    errFn(err);\r\n                }\r\n            });\r\n    }\r\n\r\n    deleteUser(userId, resFn,errFn) {\r\n        let formData = new FormData();\r\n        formData.append(\"userId\",userId);\r\n        return http.post(\"/admin/deleteUser\", formData).then(function (res){\r\n            if (resFn) {\r\n                resFn(res.data);\r\n            }\r\n        }).catch(function (err) {\r\n            if (errFn) {\r\n                errFn(err);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default new AdminService();","import React,{Component} from 'react';\r\n\r\n/**\r\n * 화면명 : 공통 코드 관련 유틸\r\n * 화면 경로 :\r\n * 화면 코드 :\r\n * 참고 : \r\n */\r\nclass CommonCode extends Component {\r\n    data = [];\r\n    map = {};\r\n\r\n    /**\r\n     * 공통 코드 메모리 저장\r\n     * @param {Object} data {groupCode,code,value}\r\n     */\r\n    setData(data) {\r\n        let itm;\r\n        for (let i=0; i<data.length; i++) {\r\n            itm = data[i];\r\n            if (!this.map[itm.groupCode])\r\n                this.map[itm.groupCode] = [];\r\n            this.map[itm.groupCode].push(itm);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * 공통코드 Value값 반환\r\n     * @param {String} groupCode 그룹 코드\r\n     * @param {String} commonCode 코드\r\n     * @return {String} Value값\r\n     */\r\n    getValue(groupCode,commonCode) {\r\n        let ret = undefined;\r\n        const arr = this.map[groupCode];\r\n        if (arr && arr.length > 0) {\r\n            for (let i=0;i<arr.length;i++) {\r\n                if (arr[i].code === commonCode)\r\n                    ret = arr[i].value;\r\n            }\r\n        } else {\r\n            return undefined;\r\n        }\r\n        return ret;\r\n    }\r\n    \r\n    /**\r\n     * select에 셋팅할 option 리스트 반환\r\n     * @param {String} groupCode 그룹 코드\r\n     * @param {String} valueKey [value로 설정할 키값]\r\n     * @param {String} labelKey [label로 설정할 키값]\r\n     * @param {*} selectedValue [선택값]\r\n     * @param {Boolean} allFlag [All option 추가여부]\r\n     * @param {String} allLabel [All 대신 보여줄 라벨]\r\n     * @return {Array} [<option />,<option />...]\r\n     */\r\n    makeOptions(groupCode, valueKey, labelKey, selectedValue, allFlag, allLabel) {\r\n        if (!valueKey) valueKey = \"code\";\r\n        if (!labelKey) labelKey = \"codeName\";\r\n        let opts = [];\r\n        if (allFlag) {\r\n            if (!allLabel) allLabel = \"All\";\r\n            opts.push( <option value=\"all\" key={Math.random()} >{allLabel}</option> );\r\n        }\r\n        const arr = this.map[groupCode];\r\n        if (arr === null || arr === undefined) arr = [];\r\n        for (let i=0; i<arr.length; i++) {\r\n            if (groupCode == 'SCALE_IN_OUT_LIST' && i == 0) continue;\r\n            opts.push( <option value={arr[i][valueKey]} key={Math.random()} selected={arr[i][valueKey] === String(selectedValue)}>{arr[i][labelKey]}</option> );\r\n        }\r\n        return opts;\r\n    }\r\n    \r\n    /**\r\n     * select에 셋팅할 option data 반환\r\n     * @param {String} groupCode 그룹 코드\r\n     * @param {String} valueKey value로 설정할 키값\r\n     * @param {String} labelKey label로 설정할 키값\r\n     * @return {Array} [{label,value}...]\r\n     */\r\n    getCodeSelectList(groupCode, valueKey, labelKey) {\r\n        if (!valueKey) valueKey = \"code\";\r\n        if (!labelKey) labelKey = \"codeName\";\r\n        let ret = [];\r\n        const arr = this.map[groupCode];\r\n        for (let i=0; i<arr.length; i++) {\r\n            ret.push( {label:arr[i][labelKey],value:arr[i][valueKey]} );\r\n        }\r\n        return ret;\r\n    }\r\n    \r\n    /**\r\n     * 공통 코드 리스트 반환\r\n     * @param {String} groupCode \r\n     * @return {Array} 코드 리스트\r\n     */\r\n    getCodeList(groupCode) {\r\n        return this.map[groupCode];\r\n    }\r\n}\r\n\r\nexport default new CommonCode();","import React, {Component} from 'react';\r\nimport CommonCode from 'main/CommonCode';\r\nimport {Msg, common, Validation} from 'comp';\r\nimport AdminService from './AdminService';\r\n\r\n/**\r\n * 화면명 : 사용자 등록\r\n * 화면 경로 : Admin > User Management > 사용자 등록\r\n * 화면 코드 : \r\n * 참고 : \r\n */\r\nclass UserReg extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputChange:false\r\n\t\t};\r\n\t\tthis.onClickSave = this.onClickSave.bind(this);\r\n\t\tthis.validationCheck = this.validationCheck.bind(this);\r\n\t\tthis.onResultSave = this.onResultSave.bind(this);\r\n\t}\r\n    \r\n\tcomponentDidMount() {\r\n\t\tthis.refs.userId.focus();\r\n\t}\r\n\r\n\t/**************************************************************************/\r\n\t/* 기능 */\r\n\t/**************************************************************************/\r\n\t\r\n\t/**************************************************************************/\r\n\t/* 핸들러 */\r\n\t/**************************************************************************/\r\n\t/**\r\n\t * 저장 버튼 클릭 핸들러\r\n\t */\r\n\tonClickSave() {\r\n\t\tconst {modifyFlag} = this.props;\r\n        if (!this.validationCheck()) return;\r\n\t\tlet param = common.makeParam(this);\r\n\t\tparam.schType = modifyFlag ? \"modi\" : \"new\";\r\n        console.log(param);\r\n        AdminService.save(param,this.onResultSave,(err) => Msg.error(err.message));\r\n\t}\r\n\t\r\n\t/**\r\n\t * 저장 전 값 체크\r\n\t */\r\n\tvalidationCheck() {\r\n        const {modifyFlag} = this.props;\r\n        // 초기화\r\n        // this.initValids();\r\n\t\tlet chkState = {};\r\n\r\n\t\t// 아이디\r\n\t\tlet chkVal = this.refs.userId.value;\r\n\t\tlet valiRes = Validation.chkId(chkVal);\r\n\t\tchkState.validId = true;\r\n\t\tif (!valiRes.result) {\r\n\t\t\tMsg.error(valiRes.errMsg);\r\n\t\t\tchkState.validId = false;\r\n\t\t\tthis.setState(chkState);\r\n\t\t\tthis.refs.userId.focus();\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n        // 이름\r\n\t\tchkVal = this.refs.userName.value;\r\n\t\t// 입력했을경우 체크\r\n\t\tif (chkVal.length > 0) {\r\n\t\t\tchkState.validName = true;\r\n\t\t\tif (chkVal.length < 2 || chkVal.length > 10) {\r\n\t\t\t\tMsg.error(\"이름의 입력가능 자릿수는 2~10 입니다.\");\r\n\t\t\t\tchkState.validName = false;\r\n\t\t\t\tthis.setState(chkState);\r\n\t\t\t\tthis.refs.userName.focus();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!modifyFlag || (modifyFlag && (this.refs.pw.value.length > 0))) {\r\n\t\t\t// 비밀번호\r\n            chkVal = this.refs.pw.value;\r\n            valiRes = Validation.chkPw(chkVal);\r\n            chkState.validPw = true;\r\n            if (!valiRes.result) {\r\n                Msg.error(valiRes.errMsg);\r\n                chkState.validPw = false;\r\n                this.setState(chkState);\r\n                return false;\r\n            }\r\n            let chkVal2 = this.refs.pwchk.value;\r\n            if (chkVal !== chkVal2) {\r\n                Msg.error(\"비밀번호가 동일하지 않습니다.\");\r\n                chkState.validPw = false;\r\n                this.setState(chkState);\r\n                return false;\r\n            }\r\n\t\t}\r\n\r\n\t\t// 이메일 : emailfirst + emaillast\r\n        chkVal = this.refs.userEmail.value;\r\n        valiRes = Validation.chkEmail(chkVal);\r\n        chkState.validEmail = true;\r\n        if (!valiRes.result) {\r\n            Msg.error(valiRes.errMsg);\r\n            chkState.validEmail = false;\r\n            this.setState(chkState);\r\n            return false;\r\n        }\r\n\r\n        this.setState(chkState);\r\n        return true;\r\n\t}\r\n\t\r\n\t/**\r\n\t * 저장 결과 핸들러\r\n\t * @param {Object} res {result:ok|fail,message}\r\n\t */\r\n\tonResultSave(res) {\r\n        if (res.result === \"ok\") {\r\n            Msg.ok(res.message);\r\n            // this.initForm();\r\n            // this.initValids();\r\n\t\t\t// this.requestData(1);\r\n\t\t\tthis.props.onClose();\r\n        } else {\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n\t\r\n    render() {\r\n\t\tlet {modifyUserInfo} = this.props;\r\n\t\tif (!modifyUserInfo) modifyUserInfo = {};\r\n\t\tif (modifyUserInfo.activate && (modifyUserInfo.activate === \"Y\" || modifyUserInfo.activate === \"N\")) {\r\n\t\t\tmodifyUserInfo.activate = modifyUserInfo.activate === \"Y\" ? \"1\" : \"0\";\r\n\t\t}\r\n\t\tconsole.log(\"modifyUserInfo\");\r\n\t\tconsole.log(modifyUserInfo);\r\n\t\tconst userPermissionOptions = CommonCode.makeOptions(\"PERMISSION\",null,null,modifyUserInfo.userPermission);\r\n\t\tconst userActiveOptions = CommonCode.makeOptions(\"USER_ACTIVE\",null,null,modifyUserInfo.activate);\r\n        return <div className=\"table_type2\">\r\n\t\t\t<table>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>User ID\r\n\t\t\t\t\t\t\t<span className=\"necessary\">*</span></th>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<div className=\"ipt_group\">\r\n\t\t\t\t\t\t\t<input ref=\"userId\" type=\"text\" className=\"ipt_text\" placeholder=\"영문자, 숫자 최대 20자리\" disabled={modifyUserInfo.userId !== undefined}\r\n\t\t\t\t\t\t\t\tmaxLength=\"20\" defaultValue={modifyUserInfo.userId}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>User Name\r\n\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<div className=\"ipt_group\">\r\n\t\t\t\t\t\t\t<input ref=\"userName\" type=\"text\" className=\"ipt_text\" placeholder=\"최대 길이 10자리\" \r\n\t\t\t\t\t\t\t\tmaxLength=\"10\" defaultValue={modifyUserInfo.userName}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>User Group\r\n\t\t\t\t\t\t\t<span className=\"necessary\">*</span>\r\n\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<div className=\"ipt_group\">\r\n\t\t\t\t\t\t\t<select ref=\"userPermission\" className=\"combobox\">\r\n\t\t\t\t\t\t\t\t{userPermissionOptions}\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Password\r\n\t\t\t\t\t\t\t<span className=\"necessary\">*</span>\r\n\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<div className=\"ipt_group\">\r\n\t\t\t\t\t\t\t<input type=\"password\" className=\"ipt_text\" ref=\"pw\" placeholder=\"영문자,특수문자 조합해서 4자리에서 12자리\"/>\r\n\t\t\t\t\t\t\t<input type=\"password\" className=\"ipt_text\" ref=\"pwchk\" placeholder=\"확인\" style={{marginTop: 4}}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Email\r\n\t\t\t\t\t\t\t<span className=\"necessary\">*</span>\r\n\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<div className=\"ipt_group\">\r\n\t\t\t\t\t\t\t<input ref=\"userEmail\" type=\"text\" className=\"ipt_text\" placeholder=\"\" maxLength={100} defaultValue={modifyUserInfo.userEmail}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Activate\r\n\t\t\t\t\t\t\t<span className=\"necessary\">*</span>\r\n\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<div className=\"ipt_group\">\r\n\t\t\t\t\t\t\t<select ref=\"activate\" className=\"combobox\">\r\n\t\t\t\t\t\t\t\t{userActiveOptions}\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t\t<div className=\"popupBtnArea btn_area addbtnarea\"><p className=\"btn2\">\r\n\t\t\t\t<button className=\"btn btn_white\" onClick={() => this.props.onClose()}>취소</button>\r\n\t\t\t\t<button className=\"btn btn_black\" onClick={(e) => this.onClickSave()}>저장</button>\r\n\t\t\t</p></div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default UserReg;","import React, { Component } from 'react';\r\nimport Grid from '@toast-ui/react-grid';\r\nimport { Pagination, Msg, NameRenderer, common } from 'comp';\r\nimport TuiGrid from 'tui-grid';\r\nimport AdminService from './AdminService';\r\nimport UserReg from './UserReg';\r\nimport { CommonCode } from 'main';\r\n\r\n/**\r\n * 화면명 : User Management\r\n * 화면 경로 : Admin > User Management\r\n * 화면 코드 : MENU0040502\r\n * 참고 : \r\n */\r\nclass UserManager extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      gridData: [],\r\n      columns: [],\r\n      bodyHeight: 200,\r\n      pagesPage: 1,\r\n      pagesTotalCount: 0,\r\n      pagesPerPage: 5,\r\n      schInfo: {}\r\n    };\r\n    this.requestData = this.requestData.bind(this);\r\n    this.onResultList = this.onResultList.bind(this);\r\n    this.onClickPageItem = this.onClickPageItem.bind(this);\r\n    this.onClickGridNameColumn = this.onClickGridNameColumn.bind(this);\r\n    this.onClickSch = this.onClickSch.bind(this);\r\n    this.onClickReg = this.onClickReg.bind(this);\r\n    this.onClickChangeActivate = this.onClickChangeActivate.bind(this);\r\n    this.onResultChangeActivate = this.onResultChangeActivate.bind(this);\r\n    this.onClickDelete = this.onClickDelete.bind(this);\r\n    this.onConfirmOkDelete = this.onConfirmOkDelete.bind(this);\r\n    this.onResultDelete = this.onResultDelete.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    TuiGrid.setLanguage('ko');\r\n    TuiGrid.applyTheme('clean'); // default, striped, clean\r\n    this.requestData(1);\r\n  }\r\n\r\n  /**************************************************************************/\r\n  /* 기능 */\r\n  /**************************************************************************/\r\n  /**\r\n   * 사용자 리스트\r\n   */\r\n  requestData(page, schKeyword) {\r\n    const { userPermission } = this.refs;\r\n    if (page === undefined) page = this.state.pagesPage;\r\n    this.props.main.showLoading();\r\n    let parm = {\r\n      page: page\r\n    };\r\n    if (userPermission.value !== \"all\") {\r\n      parm.userPermission = userPermission.value;\r\n    }\r\n    if (schKeyword !== undefined)\r\n      parm.schKey = schKeyword;\r\n    this.setState({ schInfo: parm });\r\n    AdminService.userList(parm, this.onResultList, (err) => Msg.error(err.message));\r\n  }\r\n\r\n  /**\r\n   * 사용자 Activate 변경\r\n   */\r\n  onClickChangeActivate(item, e, props) {\r\n    let parm = {};\r\n    parm.userId = item.userId;\r\n    parm.activate = item.activate === \"Y\" ? \"0\" : \"1\";\r\n    parm.schType = \"modi\";\r\n    AdminService.save(parm, this.onResultChangeActivate, (err) => Msg.error(err.message));\r\n  }\r\n\r\n  /**\r\n   * 조회 버튼 클릭 이벤트 핸들러\r\n   */\r\n  onClickSch() {\r\n    this.requestData(this.state.pagesPage, this.refs.schKey.value);\r\n  }\r\n\r\n  /**\r\n   * 추가 버튼 클릭 이벤트 핸들러\r\n   */\r\n  onClickReg() {\r\n    const {\r\n      modifyUserInfo\r\n    } = this.state;\r\n    const popTitle = \"User Regist\";\r\n    this.props.main.showPopup(\r\n      popTitle,\r\n      <UserReg title={popTitle} main={this.props.main} modifyFlag={modifyUserInfo !== undefined} modifyUserInfo={modifyUserInfo} onClose={(e) => this.onCloseReg(popTitle)} />,\r\n      { width: 600, height: 540, popupBtnAreaVisible: false, contentAppendClass: \"model_content\" }, null, null\r\n    );\r\n  }\r\n\r\n  /**************************************************************************/\r\n  /* 핸들러 */\r\n  /**************************************************************************/\r\n  /**\r\n   * 사용자 리스트 결과 핸들러\r\n   */\r\n  onResultList(res) {\r\n    this.props.main.hideLoading();\r\n    if (res.result === \"ok\") {\r\n      const pagesInfo = res.data;\r\n      const columns = [\r\n        {\r\n          name: 'userId', header: 'User ID', align: \"center\", sortable: true,\r\n          renderer: {\r\n            type: NameRenderer, options: {\r\n              listData: res.list, labelKey: \"userId\",\r\n              onClickGridNameColumn: this.onClickGridNameColumn\r\n            }\r\n          }\r\n        }\r\n        , { name: 'userName', header: 'User Name', align: \"center\", sortable: true }\r\n        , { name: 'userGroup', header: 'User Group', align: \"center\", sortable: true }\r\n        , { name: 'signupDate', header: 'Create Date', align: \"center\", sortable: true }\r\n        , { name: 'loginDate', header: 'Recent Login', align: \"center\", sortable: true }\r\n        , {\r\n          name: 'activate', header: 'Activate', width: 100, align: \"center\", sortable: true,\r\n          renderer: { type: ActivateRenderer, options: { listData: res.list, onClickChangeActivate: this.onClickChangeActivate } }\r\n        }\r\n        , {\r\n          name: 'delete', header: 'Delete User', width: 100, align: \"center\",\r\n          renderer: { type: DeleteRenderer, options: { listData: res.list, onClickDelete: this.onClickDelete } }\r\n        }\r\n      ]\r\n      this.setState({ gridData: res.list, pagesPage: pagesInfo.page, pagesTotalCount: pagesInfo.totalCount, pagesPerPage: pagesInfo.pageCount, formCover: true, columns: columns });\r\n    } else if (res.result === \"fail\") {\r\n      Msg.error(res.message);\r\n      if (res.errCode === \"401\") {\r\n        console.log(res.errCode);\r\n        this.props.main.setState({ login: false, role: '', username: '', sessionId: '', userInfo: {} });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 사용자 Activate 변경 결과 핸들러\r\n   */\r\n  onResultChangeActivate(res) {\r\n    if (res.result === \"ok\") {\r\n      Msg.ok(res.message);\r\n      this.requestData(1);\r\n    }\r\n    else if (res.result === \"fail\") {\r\n      Msg.error(res.message);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 페이지 클릭 인벤트 핸들러\r\n   */\r\n  onClickPageItem(page) {\r\n    const { schKey, schType } = this.refs;\r\n    if (schKey.value.length > 0 && schType.value.length > 0)\r\n      this.requestData(page, schType.value, schKey.value);\r\n    else\r\n      this.requestData(page);\r\n  }\r\n\r\n  /**\r\n   * 랜더러 클릭 이벤트 핸들러\r\n   * @param {Object} item 선택 Row 데이터\r\n   * @param {MouseEvent} e 클릭 이벤트\r\n   * @param {Object} props 랜더러 Options\r\n   */\r\n  onClickGridNameColumn(item, e, props) {\r\n    try {\r\n      const popTitle = \"User Modify\";\r\n      this.props.main.showPopup(\r\n        popTitle,\r\n        <UserReg title={popTitle} main={this.props.main} modifyFlag={item !== undefined} modifyUserInfo={item} onClose={(e) => this.onCloseReg(popTitle)} />,\r\n        { width: 600, height: 540, popupBtnAreaVisible: false, contentAppendClass: \"model_content\" }, null, null\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 추가 팝업 닫기시 실행\r\n   */\r\n  onCloseReg(title) {\r\n    this.requestData(1);\r\n    this.setState({ modifyModelInfo: undefined, modifyModelFiles: undefined });\r\n    this.props.main.hidePopup(title);\r\n  }\r\n\r\n  /**\r\n   * 삭제 버튼 클릭 핸들러\r\n   */\r\n  onClickDelete(item, e, props) {\r\n    console.log(item, e, props)\r\n    this.props.main.showConfirm(\"사용자 삭제\", \"사용자 삭제하시겠습니까?\", () => { this.onConfirmOkDelete(item) }, this.onConfirmCancelDelete)\r\n  }\r\n\r\n  /**\r\n   * 삭제 확인 핸들러\r\n   */\r\n  onConfirmOkDelete(item) {\r\n    console.log('onConfirmOkDelete : [' + item.userId + ']');\r\n    AdminService.deleteUser(item.userId, this.onResultDelete, (err) => Msg.error(err.message));\r\n  }\r\n\r\n  /**\r\n   * 삭제 확인 취소 핸들러\r\n   */\r\n  onConfirmCancelDelete() {\r\n    // 삭제 확인 취소시\r\n  }\r\n\r\n  onResultDelete(res) {\r\n    this.requestData();\r\n    if (res.result === \"ok\") {\r\n      Msg.ok(\"사용자 삭제 되었습니다.\");\r\n    } else if (res.result === \"fail\") {\r\n      Msg.error(res.message);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      gridData, columns, schInfo,\r\n      pagesPage, pagesTotalCount, pagesPerPage\r\n    } = this.state;\r\n    let permissionOpts = CommonCode.makeOptions(\"PERMISSION\", null, null, schInfo.userPermission, true);\r\n    return <div className=\"page_layout\">\r\n      <div className=\"layout_contents\">\r\n        <div className=\"content_list model_aid_list table_type1\">\r\n          <div className=\"content_title\">\r\n            <h3 className=\"tit\">User Management</h3>\r\n          </div>\r\n\r\n          <div className=\"search_condition\">\r\n            <div className=\"ipt_group search_basis search_basis2\"><div className=\"group_center\">\r\n              <ul>\r\n                <li>\r\n                  <span className=\"tit\">User Group</span>\r\n                  <select ref=\"userPermission\" className=\"ml5\" style={{ float: \"left\", width: 100, height: 32, marginLeft: 10, outline: \"none\", border: \"1px solid #CECECE\" }}>\r\n                    {permissionOpts}\r\n                  </select>\r\n                </li>\r\n                <li>\r\n                  <span className=\"tit\">User Name / ID</span>\r\n                  <input ref=\"schKey\" type=\"text\" className=\"ipt_text ml5\" style={{ width: 350 }} defaultValue={schInfo.schKey} />\r\n                </li>\r\n              </ul>\r\n              <button className=\"btn btn_black\" onClick={() => this.onClickSch()}>검색</button>\r\n            </div>\r\n            </div>\r\n            <button className=\"btn btn_add btn_blue\" onClick={this.onClickReg}></button>\r\n          </div>\r\n\r\n          <div className=\"content_stitle\">\r\n            <span>Total : {pagesTotalCount}</span>\r\n          </div>\r\n          <Grid ref=\"grid\" //rowHeaders={[\"checkbox\"]}\r\n            data={gridData} columnOptions={{ resizable: true }}\r\n            columns={columns}\r\n            scrollX={false} scrollY={false}\r\n          />\r\n          <div className=\"gridControlArea left btn_area\">\r\n            <div></div>\r\n            <Pagination ref={'page'}\r\n              page={pagesPage}\r\n              totalCount={pagesTotalCount}\r\n              perPage={pagesPerPage}\r\n              onClickItem={this.onClickPageItem} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>;\r\n  }\r\n}\r\n\r\n/**\r\n * Activate 컬럼 랜더러\r\n */\r\nclass ActivateRenderer {\r\n  constructor(props) {\r\n    const { onClickChangeActivate, listData } = props.columnInfo.renderer.options;\r\n    let item = undefined;\r\n    if (listData && listData.length > 0)\r\n      item = listData[props.rowKey];\r\n    if (item === undefined) item = {};\r\n    let el = document.createElement('a');\r\n    if (item.userId !== 'admin' && item.userId !== 'SYSTEM') {\r\n      el.className = \"table_btn btn_lineblue btn_resource gridItemBtn\";\r\n      el.innerText = item.activate === \"Y\" ? \"중지\" : \"사용재개\";\r\n      el.title = item.activate === \"Y\" ? \"중지\" : \"사용재개\";\r\n      el.addEventListener(\"click\", (e) => onClickChangeActivate(item, e, props));\r\n    }\r\n    this.el = el;\r\n  }\r\n  getElement() {\r\n    return this.el;\r\n  }\r\n}\r\n\r\nclass DeleteRenderer {\r\n  constructor(props) {\r\n    const { onClickDelete, listData } = props.columnInfo.renderer.options;\r\n    let item = undefined;\r\n    if (listData && listData.length > 0) {\r\n      item = listData[props.rowKey];\r\n    }\r\n    if (item === undefined) item = {};\r\n\r\n    let de = document.createElement('a');\r\n    if (item.userId !== 'admin' && item.userId !== 'SYSTEM') {\r\n      de.className = \"table_btn btn_lineblue btn_resource gridItemBtn\";\r\n      de.innerText = \"삭제\";\r\n      de.title = \"삭제\";\r\n      de.addEventListener(\"click\", (e) => onClickDelete(item, e, props));\r\n    }\r\n\r\n    this.de = de;\r\n  }\r\n  getElement() {\r\n    return this.de;\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default UserManager;","import React, { Component } from 'react';\r\nimport { Msg, common } from 'comp';\r\nimport Grid from '@toast-ui/react-grid';\r\nimport TuiGrid from 'tui-grid';\r\nimport { AdminService } from 'admin';\r\n\r\n/**\r\n * 화면명 : Scale In/Out Management\r\n * 화면 경로 : Admin > Scale In/Out Management\r\n * 화면 코드 : MENU00403\r\n * 참고 : \r\n */\r\nclass ScaleInOutManager extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      gridData: [],\r\n      columns: [],\r\n      bodyHeight: 300,\r\n      pagesPage: 1,\r\n      pagesTotalCount: 0,\r\n      pagesPerPage: 5,\r\n      showDetail: false,\r\n      selectionItem: {},\r\n      selectionColumName: '',\r\n      selectionRowKey: -1,\r\n      scaleOutRuleModifyMode: false,\r\n      scaleOutRuleEnable: true,\r\n      scaleOutCpuPercent: undefined,\r\n      scaleOutDurationMin: undefined,\r\n      scaleInRuleModifyMode: false,\r\n      scaleInRuleEnable: true,\r\n      scaleInCpuPercent: undefined,\r\n      scaleInDurationMin: undefined\r\n    }\r\n    this.requestData = this.requestData.bind(this);\r\n    this.onResultDeviceList = this.onResultDeviceList.bind(this);\r\n    this.onClickScaleInOut = this.onClickScaleInOut.bind(this);\r\n    this.onResultScaleInOut = this.onResultScaleInOut.bind(this);\r\n    this.onClickScaleOutRuleModify = this.onClickScaleOutRuleModify.bind(this);\r\n    this.onClickSaveScaleOutRule = this.onClickSaveScaleOutRule.bind(this);\r\n    this.onResultScaleInOutRuleInfo = this.onResultScaleInOutRuleInfo.bind(this);\r\n    this.onResultSaveScaleInOutRule = this.onResultSaveScaleInOutRule.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    TuiGrid.setLanguage('ko');\r\n    TuiGrid.applyTheme('clean'); // default, striped, clean\r\n    AdminService.scaleInOutRuleInfo({}, this.onResultScaleInOutRuleInfo, (err) => Msg.error(err.message));\r\n    this.requestData();\r\n  }\r\n\r\n  /**************************************************************************/\r\n  /* 기능 */\r\n  /**************************************************************************/\r\n  /**\r\n   * 리스트\r\n   */\r\n  requestData() {\r\n    this.props.main.showLoading(true);\r\n    AdminService.deviceList({}, this.onResultDeviceList, (err) => Msg.error(err.message));\r\n  }\r\n\r\n  /**\r\n   * Scale In/Out\r\n   * @param {Object} item \r\n   * @param {Event} e \r\n   * @param {Object} props \r\n   */\r\n  onClickScaleInOut(item, e, props) {\r\n    let param = {};\r\n    param.server = item.serverName;\r\n    param.req_type = item.scaleState === \"on\" ? \"user_stop\" : \"user_start\";\r\n    AdminService.scaleInOut(param, this.onResultScaleInOut, (err) => Msg.error(err.message));\r\n  }\r\n\r\n  /**************************************************************************/\r\n  /* 핸들러 */\r\n  /**************************************************************************/\r\n  /**\r\n     * 리스트 결과 핸들러\r\n     * @param {Object} res {result:ok|fail,list:그룹코드리스트}\r\n     */\r\n  onResultDeviceList(res) {\r\n    this.props.main.hideLoading();\r\n    if (res.result === \"ok\") {\r\n      let item;\r\n      for (let i = 0; i < res.list.length; i++) {\r\n        item = res.list[i];\r\n        item.nodeName = item.serverName === \"manager\" ? \"master\" : item.serverName;\r\n      }\r\n      const cols = [\r\n        { name: 'nodeName', header: 'Node Name' }\r\n        , { name: 'role', header: 'Node Type', align: \"center\" }\r\n        , { name: 'useCpu', header: 'CPU', align: \"center\" }\r\n        , { name: 'hasContainer', header: 'Container', align: \"center\" }\r\n        , {\r\n          name: 'scaleinout', header: 'Scale In/Out', align: \"center\",\r\n          renderer: {\r\n            type: CustomButtonRenderer\r\n            , options: {\r\n              listData: res.list,\r\n              onClickScaleInOut: this.onClickScaleInOut\r\n            }\r\n          }\r\n        }\r\n      ];\r\n      this.setState({ gridData: res.list, columns: cols });\r\n    } else if (res.result === \"fail\") {\r\n      Msg.error(res.message);\r\n      if (res.errCode === \"401\") {\r\n        console.log(res.errCode);\r\n        this.props.main.setState({ login: false, role: '', username: '', sessionId: '', userInfo: {} });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {Object} res \r\n   */\r\n  onResultScaleInOutRuleInfo(res) {\r\n    if (res.result === \"ok\") {\r\n      const SCALE_IN_RULE = \"scaleInRule\";\r\n      const SCALE_OUT_RULE = \"scaleOutRule\";\r\n\r\n      let list;\r\n      let map = {\r\n        scaleInRule: { cpuPercent: \"0\", durationMin: \"0\", ruleEnable: true }\r\n        , scaleOutRule: { cpuPercent: \"0\", durationMin: \"0\", ruleEnable: true }\r\n      };\r\n      const listKeys = [SCALE_IN_RULE, SCALE_OUT_RULE];\r\n      // for listKeys\r\n      for (let j = 0; j < listKeys.length; j++) {\r\n        list = res.data[listKeys[j]];\r\n        for (let i = 0; i < list.length; i++) {\r\n          if (\"CPU_PERCENT\" === list[i].code) map[listKeys[j]].cpuPercent = list[i].value;\r\n          else if (\"DURATION_MIN\" === list[i].code) map[listKeys[j]].durationMin = list[i].value;\r\n          else if (\"RULE_ENABLE\" === list[i].code) map[listKeys[j]].ruleEnable = list[i].value === \"Y\";\r\n        }\r\n      }\r\n      this.setState({\r\n        scaleInCpuPercent: map[SCALE_IN_RULE].cpuPercent, scaleInDurationMin: map[SCALE_IN_RULE].durationMin, scaleInRuleEnable: map[SCALE_IN_RULE].ruleEnable\r\n        , scaleOutCpuPercent: map[SCALE_OUT_RULE].cpuPercent, scaleOutDurationMin: map[SCALE_OUT_RULE].durationMin, scaleOutRuleEnable: map[SCALE_OUT_RULE].ruleEnable\r\n      });\r\n    } else if (res.result === \"fail\") {\r\n      Msg.error(res.message);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Scale In/Out 결과 핸들러\r\n   * @param {Object} res {result:ok|fail,message:메세지}\r\n   */\r\n  onResultScaleInOut(res) {\r\n    console.log(res);\r\n    if (res.result === \"ok\") {\r\n      Msg.ok(\"성공했습니다.\");\r\n      this.requestData(this.state.schKeyword);\r\n    } else if (res.result === \"fail\") {\r\n      Msg.error(res.message);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Scale Out Rule 수정 버튼 클릭 핸들러\r\n   */\r\n  onClickScaleOutRuleModify() {\r\n    const { scaleOutRuleModifyMode } = this.state;\r\n    this.setState({ scaleOutRuleModifyMode: !scaleOutRuleModifyMode });\r\n  }\r\n\r\n  /**\r\n   * Scale Out Rule 저장 버튼 클릭 핸들러\r\n   */\r\n  onClickSaveScaleOutRule() {\r\n    const parm = common.makeParam(this);\r\n    const p = { type: \"scaleOut\", cpuPercent: parm.scaleOutCpuPercent, durationMin: parm.scaleOutDurationMin, ruleEnable: parm.scaleOutRuleEnable };\r\n    AdminService.saveScaleInOutRule(p, this.onResultSaveScaleInOutRule, (err) => Msg.error(err.message));\r\n  }\r\n\r\n  /**\r\n   * Scale In Rule 수정 버튼 클릭 핸들러\r\n   */\r\n  onClickScaleInRuleModify() {\r\n    const { scaleInRuleModifyMode } = this.state;\r\n    this.setState({ scaleInRuleModifyMode: !scaleInRuleModifyMode });\r\n  }\r\n\r\n  /**\r\n   * Scale Out Rule 저장 버튼 클릭 핸들러\r\n   */\r\n  onClickSaveScaleInRule() {\r\n    const parm = common.makeParam(this);\r\n    const p = { type: \"scaleIn\", cpuPercent: parm.scaleInCpuPercent, durationMin: parm.scaleInDurationMin, ruleEnable: parm.scaleInRuleEnable };\r\n    AdminService.saveScaleInOutRule(p, this.onResultSaveScaleInOutRule, (err) => Msg.error(err.message));\r\n  }\r\n\r\n  /**\r\n   * Scale Out Rule 저장 결과 핸들러\r\n   * @param {Object} res {result:ok|fail,message:메세지}\r\n   */\r\n  onResultSaveScaleInOutRule(res) {\r\n    if (res.result === \"ok\") {\r\n      Msg.ok(\"저장되었습니다.\");\r\n      this.requestData();\r\n      this.setState({ scaleOutRuleModifyMode: false, scaleInRuleModifyMode: false });\r\n    }\r\n    else if (res.result === \"fail\") {\r\n      Msg.error(res.message);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      gridData, columns, pagesTotalCount,\r\n      scaleOutRuleModifyMode, scaleOutCpuPercent, scaleOutDurationMin, scaleOutRuleEnable,\r\n      scaleInRuleModifyMode, scaleInCpuPercent, scaleInDurationMin, scaleInRuleEnable\r\n    } = this.state;\r\n    return <div className=\"page_layout\"><div className=\"layout_contents\">\r\n      <div className=\"content_list model_aid_list table_type1\">\r\n\r\n        <div className=\"content_title\">\r\n          <h3 className=\"tit\">Scale In/Out Management</h3>\r\n        </div>\r\n\r\n        <div className=\"search_condition\" style={{ height: 135 }}>\r\n          <div className=\"ipt_group search_basis search_basis2 search_basis_wide\">\r\n            <div className=\"group_between\">\r\n              <ul>\r\n                <li>\r\n                  <span className=\"tit\">Scale Out Rule</span>\r\n                  <label className=\"switch ml15\">\r\n                    <input ref=\"scaleOutRuleEnable\" type=\"checkbox\" checked={scaleOutRuleEnable} onClick={() => this.setState({ scaleOutRuleEnable: !scaleOutRuleEnable })} disabled={!scaleOutRuleModifyMode} />\r\n                    <span className=\"slider\"></span>\r\n                  </label>\r\n                </li>\r\n                <li>\r\n                  <p className=\"sentence\">\r\n                    <span className=\"txt\">More than</span> <input ref=\"scaleOutCpuPercent\" type=\"text\" defaultValue={scaleOutCpuPercent} className=\"ipt_text\" style={{ width: 60 }} disabled={!scaleOutRuleModifyMode} />\r\n                    <span className=\"txt\">% of CPU Utilization last </span><input ref=\"scaleOutDurationMin\" type=\"text\" defaultValue={scaleOutDurationMin} className=\"ipt_text\" style={{ width: 60 }} disabled={!scaleOutRuleModifyMode} /> <span className=\"txt\">min.</span>\r\n                  </p>\r\n                </li>\r\n              </ul>\r\n\r\n              <div className=\"float\">\r\n                {scaleOutRuleModifyMode ? <button className=\"btn btn_white\" onClick={() => this.setState({ scaleOutRuleModifyMode: false })}>취소</button> : null}\r\n                {scaleOutRuleModifyMode\r\n                  ? <button className=\"btn btn_black\" onClick={() => this.onClickSaveScaleOutRule()}>저장</button>\r\n                  : <button className=\"btn btn_black\" onClick={() => this.onClickScaleOutRuleModify()}>수정</button>\r\n                }\r\n              </div>\r\n\r\n            </div>\r\n            <div className=\"group_between\" style={{ marginTop: 16 }}>\r\n              <ul>\r\n                <li>\r\n                  <span className=\"tit\" style={{ width: 88 }}>Scale In Rule</span>\r\n                  <label className=\"switch ml15\">\r\n                    <input ref=\"scaleInRuleEnable\" type=\"checkbox\" checked={scaleInRuleEnable} onClick={() => this.setState({ scaleInRuleEnable: !scaleInRuleEnable })} disabled={!scaleInRuleModifyMode} />\r\n                    <span className=\"slider\"></span>\r\n                  </label>\r\n                </li>\r\n                <li>\r\n                  <p className=\"sentence\">\r\n                    <span className=\"txt\">Less than</span> <input ref=\"scaleInCpuPercent\" type=\"text\" defaultValue={scaleInCpuPercent} className=\"ipt_text\" style={{ width: 60 }} disabled={!scaleInRuleModifyMode} />\r\n                    <span className=\"txt\">% of CPU Utilization last </span><input ref=\"scaleInDurationMin\" type=\"text\" defaultValue={scaleInDurationMin} className=\"ipt_text\" style={{ width: 60 }} disabled={!scaleInRuleModifyMode} /> <span className=\"txt\">min.</span>\r\n                  </p>\r\n                </li>\r\n              </ul>\r\n\r\n              <div className=\"float\">\r\n                {scaleInRuleModifyMode ? <button className=\"btn btn_white\" onClick={() => this.setState({ scaleInRuleModifyMode: false })}>취소</button> : null}\r\n                {scaleInRuleModifyMode\r\n                  ? <button className=\"btn btn_black\" onClick={() => this.onClickSaveScaleInRule()}>저장</button>\r\n                  : <button className=\"btn btn_black\" onClick={() => this.onClickScaleInRuleModify()}>수정</button>\r\n                }\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"content_stitle\">\r\n          <span>Total : {common.displNum(pagesTotalCount)}</span>\r\n        </div>\r\n        <Grid ref={'grid'}\r\n          data={gridData} columnOptions={{ resizable: true }}\r\n          columns={columns}\r\n          scrollX={false} scrollY={false}\r\n        />\r\n      </div>\r\n    </div>\r\n    </div>;\r\n  }\r\n}\r\n\r\nclass CustomButtonRenderer {\r\n  constructor(props) {\r\n    const item = props.columnInfo.renderer.options.listData[props.rowKey];\r\n    let el = document.createElement('div');\r\n    if (item.role !== \"master\" && item.role !== \"manager\"\r\n      && item.scaleState !== \"MGR_CONN_FAIL\") {\r\n      el = document.createElement('a');\r\n      el.role = \"button\";\r\n      if (item.scaleState === \"on\") {\r\n        el.className = \"table_btn btn_green btn_resource\";\r\n        el.innerText = \"ScaleIn\";\r\n      } else {\r\n        el.className = \"table_btn btn_orange btn_resource\";\r\n        el.innerText = \"ScaleOut\";\r\n      }\r\n      const { onClickScaleInOut } = props.columnInfo.renderer.options;\r\n      el.addEventListener(\"click\", (e) => onClickScaleInOut(item, e, props));\r\n    } else if (item.scaleState === \"MGR_CONN_FAIL\") {\r\n      el.innerText = item.scaleState;\r\n    }\r\n\r\n    this.el = el;\r\n  }\r\n\r\n  getElement() {\r\n    return this.el;\r\n  }\r\n\r\n}\r\n\r\nexport default ScaleInOutManager;","import React, { Component } from 'react';\r\nimport { Pagination, Msg, common, NameRenderer, Validation } from 'comp';\r\nimport Grid from '@toast-ui/react-grid';\r\nimport TuiGrid from 'tui-grid';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport 'react-day-picker/lib/style.css';\r\nimport dateFnsFormat from 'date-fns/format';\r\nimport dateFnsParse from 'date-fns/parse';\r\nimport { add, sub } from 'date-fns';\r\nimport { CommonCode } from 'main';\r\nimport { ModelHistDetail, ModelService } from 'model';\r\n\r\n/**\r\n * 화면명 : 모델 이력\r\n * 화면 경로 : Admin > Model History\r\n * 화면 코드 : MENU0040501\r\n * 참고 : \r\n */\r\nclass HistoryModelReg extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      gridData: [],\r\n      columns: [],\r\n      bodyHeight: 300,\r\n      pagesPage: 1,\r\n      pagesTotalCount: 0,\r\n      pagesPerPage: 5,\r\n      showDetail: false,\r\n      selectionItem: {},\r\n      selectionColumName: '',\r\n      selectionRowKey: -1,\r\n      schInfo: undefined,\r\n      stDt: undefined,\r\n      edDt: undefined\r\n    }\r\n    this.requestData = this.requestData.bind(this);\r\n    this.onResultList = this.onResultList.bind(this);\r\n    this.onClickPageItem = this.onClickPageItem.bind(this);\r\n    this.onClickSch = this.onClickSch.bind(this);\r\n    this.formatDate = this.formatDate.bind(this);\r\n    this.parseDate = this.parseDate.bind(this);\r\n    this.onChangeStDt = this.onChangeStDt.bind(this);\r\n    this.onChangeEdDt = this.onChangeEdDt.bind(this);\r\n    this.onClickGridNameColumn = this.onClickGridNameColumn.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    TuiGrid.setLanguage('ko');\r\n    TuiGrid.applyTheme('clean'); // default, striped, clean\r\n    this.requestData(1);\r\n  }\r\n\r\n  /**************************************************************************/\r\n  /* 기능 */\r\n  /**************************************************************************/\r\n  /**\r\n   * 리스트\r\n   * @param {int} page 페이지\r\n   * @param {String} schKeyword Model ID, Model Name 검색어\r\n   */\r\n  requestData(page, schKeyword) {\r\n    const { action } = this.refs;\r\n    if (page === undefined) page = this.state.pagesPage;\r\n    let { stDt, edDt } = this.state;\r\n    this.props.main.showLoading();\r\n    const parm = {\r\n      page: page\r\n    };\r\n    if (action.value !== \"all\") {\r\n      parm.action = action.value;\r\n    }\r\n    if (schKeyword !== undefined)\r\n      parm.schKey = schKeyword;\r\n    if (edDt === undefined) {\r\n      edDt = new Date();\r\n    }\r\n    if (stDt === undefined) {\r\n      stDt = sub(edDt, { months: 1 });// 1달전\r\n    }\r\n    const format = \"yyyyMMdd\";\r\n    const locale = undefined;\r\n    parm.endDate = dateFnsFormat(edDt, format, { locale });\r\n    parm.startDate = dateFnsFormat(stDt, format, { locale });\r\n    this.setState({ schInfo: parm, stDt: stDt, edDt: edDt });\r\n    ModelService.regHistory(parm, this.onResultList, (err) => Msg.error(err.message));\r\n  }\r\n\r\n  /**************************************************************************/\r\n  /* 핸들러 */\r\n  /**************************************************************************/\r\n  /**\r\n * 리스트 결과 핸들러\r\n * @param {Object} res {result:ok|fail,list:리스트}\r\n */\r\n  onResultList(res) {\r\n    this.props.main.hideLoading();\r\n    if (res.result === \"ok\") {\r\n      const pagesInfo = res.data;\r\n      const columns = [\r\n        { name: 'regDate', header: 'Date', align: \"center\" }\r\n        , {\r\n          name: 'modelName', header: 'Model Name',\r\n          renderer: {\r\n            type: NameRenderer, options: {\r\n              listData: res.list, labelKey: \"modelName\",\r\n              onClickGridNameColumn: this.onClickGridNameColumn\r\n            }\r\n          }\r\n        }\r\n        , { name: 'modelId', header: 'Model ID', align: \"center\" }\r\n        , { name: 'action', header: 'Action', align: \"center\" }\r\n        , { name: 'priorityNm', header: 'Priority', align: \"center\" }\r\n        , { name: 'userId', header: 'User ID', align: \"center\" }\r\n      ]\r\n      this.setState({ gridData: res.list, pagesPage: pagesInfo.page, pagesTotalCount: pagesInfo.totalCount, pagesPerPage: pagesInfo.pageCount, columns: columns });\r\n    } else if (res.result === \"fail\") {\r\n      Msg.error(res.message);\r\n      if (res.errCode === \"401\") {\r\n        console.log(res.errCode);\r\n        this.props.main.setState({ login: false, role: '', username: '', sessionId: '', userInfo: {} });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 랜더러 클릭 이벤트 핸들러\r\n   * @param {Object} item 선택 Row 데이터\r\n   * @param {MouseEvent} e 클릭 이벤트\r\n   * @param {Object} props 랜더러 Options\r\n   */\r\n  onClickGridNameColumn(item, e, props) {\r\n    if (this.props.isPopup && this.props.onChangeItem) {\r\n      this.props.onChangeItem(item);\r\n    }\r\n    if (this.props.isPopup) {\r\n      this.props.onSelection();\r\n      this.props.onClose();\r\n    } else {\r\n      try {\r\n        this.setState({ selectionRowKey: e.rowKey, selectionItem: item, selectionColumName: e.columnName, showDetail: true });\r\n        const popTitle = \"Model Info.\";\r\n        this.props.main.showPopup(\r\n          popTitle,\r\n          <ModelHistDetail title={popTitle} main={this.props.main} selectionItem={item} onClose={(e) => this.onCloseDetail(popTitle)} onClickModify={this.onClickModify} />,\r\n          { width: 735, height: 522, popupBtnAreaVisible: false }, null, null\r\n        );\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 페이지 클릭 이벤트 핸들러\r\n   * @param {int} page \r\n   */\r\n  onClickPageItem(page) {\r\n    const { schKey } = this.refs;\r\n    if (schKey.value.length > 0)\r\n      this.requestData(page, schKey.value);\r\n    else\r\n      this.requestData(page);\r\n  }\r\n\r\n  /**\r\n   * 검색 클릭 핸들러\r\n   */\r\n  onClickSch() {\r\n    this.requestData(1, this.refs.schKey.value);\r\n  }\r\n\r\n  formatDate(date, format, locale) {\r\n    return dateFnsFormat(date, format, { locale });\r\n  }\r\n\r\n  parseDate(str, format, locale) {\r\n    const parsed = dateFnsParse(str, format, new Date(), { locale });\r\n    return parsed;\r\n  }\r\n\r\n  /**\r\n   * 조건 시작일자 변경 핸들러\r\n   * @param {Date} day \r\n   */\r\n  onChangeStDt(day) {\r\n    const { edDt } = this.state;\r\n    let minDt = sub(edDt, { months: 3 });\r\n    if (day < minDt) {\r\n      Msg.warn(\"조회할수있는 최대기간은 3달입니다.\");\r\n      this.setState({ stDt: minDt });\r\n      return;\r\n    }\r\n    this.setState({ stDt: day });\r\n  }\r\n\r\n  /**\r\n   * 조건 종료일자 변경 핸들러\r\n   * @param {Date} day \r\n   */\r\n  onChangeEdDt(day) {\r\n    const { stDt } = this.state;\r\n    let maxDt = add(stDt, { months: 3 });\r\n    if (day > maxDt) {\r\n      Msg.warn(\"조회할수있는 최대기간은 3달입니다.\");\r\n      this.setState({ edDt: maxDt });\r\n      return;\r\n    }\r\n    this.setState({ edDt: day });\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      gridData, bodyHeight, columns, schInfo, stDt, edDt,\r\n      pagesPage, pagesTotalCount, pagesPerPage\r\n    } = this.state;\r\n    if (!schInfo) schInfo = {};\r\n    let actionOpts = CommonCode.makeOptions(\"MODEL_HIST_ACTION\", null, null, schInfo.action, true);\r\n    return <div className=\"page_layout\"><div className=\"layout_contents\">\r\n      <div className=\"content_list model_aid_list table_type1\">\r\n\r\n        <div className=\"content_title\">\r\n          <h3 className=\"tit\">Model History</h3>\r\n        </div>\r\n\r\n        <div className=\"search_condition\">\r\n          <div className=\"ipt_group search_basis search_basis2\" style={{ width: \"100%\" }}><div className=\"group_center\">\r\n            <ul>\r\n              <li>\r\n                <span className=\"tit\">Model Name / ID</span>\r\n                <input ref=\"schKey\" type=\"text\" className=\"ipt_text ml5\" style={{ width: 350 }} defaultValue={schInfo.schKey} />\r\n              </li>\r\n              <li>\r\n                <span className=\"tit\">Action</span>\r\n                <select ref=\"action\" className=\"ml5\" style={{ float: \"left\", width: 100, height: 32, marginLeft: 10, outline: \"none\", border: \"1px solid #CECECE\" }}>\r\n                  {actionOpts}\r\n                </select>\r\n              </li>\r\n              <li>\r\n                <div className=\"tui-datepicker-input tui-datetime-input tui-has-focus\" style={{ width: 110 }}>\r\n                  <DayPickerInput format=\"yyyy-MM-dd\" formatDate={this.formatDate} parseDate={this.parseDate}\r\n                    placeholder=\"YYYY-MM-DD\" onDayChange={this.onChangeStDt} value={stDt} />\r\n                </div>\r\n                <span className=\"bar\">&nbsp;&nbsp;~&nbsp;&nbsp;</span>\r\n                <div className=\"tui-datepicker-input tui-datetime-input tui-has-focus\" style={{ width: 110 }}>\r\n                  <DayPickerInput format=\"yyyy-MM-dd\" formatDate={this.formatDate} parseDate={this.parseDate}\r\n                    placeholder=\"YYYY-MM-DD\" onDayChange={this.onChangeEdDt} value={edDt} />\r\n                </div>\r\n              </li>\r\n            </ul>\r\n            <button className=\"btn btn_black\" onClick={() => this.onClickSch()}>검색</button>\r\n          </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"content_stitle\">\r\n          <span>Total : {common.displNum(pagesTotalCount)}</span>\r\n        </div>\r\n        <Grid ref={'grid'}\r\n          data={gridData} columnOptions={{ resizable: true }}\r\n          columns={columns}\r\n          scrollX={false} scrollY={false}\r\n        />\r\n        <div className=\"gridControlArea btn_area\">\r\n          <Pagination ref={'page'}\r\n            page={pagesPage}\r\n            totalCount={pagesTotalCount}\r\n            perPage={pagesPerPage}\r\n            onClickItem={this.onClickPageItem} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default HistoryModelReg;","import React, { Component } from 'react';\r\nimport { Pagination, Msg, common } from 'comp';\r\nimport { CommonCode } from 'main';\r\nimport { AdminService } from 'admin';\r\n\r\nimport Grid from '@toast-ui/react-grid';\r\nimport TuiGrid from 'tui-grid';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport 'react-day-picker/lib/style.css';\r\nimport dateFnsFormat from 'date-fns/format';\r\nimport dateFnsParse from 'date-fns/parse';\r\nimport { add, sub } from 'date-fns';\r\n\r\n/**\r\n * 화면명 : Resource 이력\r\n * 화면 경로 : Admin > Resource History\r\n * 화면 코드 : MENU0040504\r\n * 참고 : \r\n */\r\nclass HistoryScaleInOut extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      gridData: [],\r\n      columns: [\r\n        { name: 'executeDate', header: 'Date', align: \"center\" }\r\n        , { name: 'serverName', header: 'Node Name', align: \"center\" }\r\n        , { name: 'action', header: 'Scale In/Out', align: \"center\" }\r\n        , { name: 'userId', header: 'User ID', align: \"center\" }\r\n      ],\r\n      bodyHeight: 300,\r\n      pagesPage: 1,\r\n      pagesTotalCount: 0,\r\n      pagesPerPage: 5,\r\n      showDetail: false,\r\n      selectionItem: {},\r\n      selectionColumName: '',\r\n      selectionRowKey: -1,\r\n      schInfo: undefined,\r\n      stDt: undefined,\r\n      edDt: undefined\r\n    }\r\n    this.requestData = this.requestData.bind(this);\r\n    this.onResultList = this.onResultList.bind(this);\r\n    this.onClickPageItem = this.onClickPageItem.bind(this);\r\n    this.onClickSch = this.onClickSch.bind(this);\r\n    this.formatDate = this.formatDate.bind(this);\r\n    this.parseDate = this.parseDate.bind(this);\r\n    this.onChangeStDt = this.onChangeStDt.bind(this);\r\n    this.onChangeEdDt = this.onChangeEdDt.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    TuiGrid.setLanguage('ko');\r\n    TuiGrid.applyTheme('clean'); // default, striped, clean\r\n    this.requestData(1);\r\n  }\r\n\r\n  /**************************************************************************/\r\n  /* 기능 */\r\n  /**************************************************************************/\r\n  /**\r\n   * 리스트\r\n   * @param {int} page \r\n   */\r\n  requestData(page) {\r\n    const { serverName, scaleInOutType } = this.refs;\r\n    if (page === undefined) page = this.state.pagesPage;\r\n    let { stDt, edDt } = this.state;\r\n    this.props.main.showLoading();\r\n    let parm = {\r\n      page: page\r\n    };\r\n    if (edDt === undefined) {\r\n      edDt = new Date();\r\n    }\r\n    if (stDt === undefined) {\r\n      stDt = sub(edDt, { months: 1 });// 1달전\r\n    }\r\n    if (scaleInOutType.value !== \"all\") {\r\n      parm.scaleInOutType = scaleInOutType.value;\r\n    }\r\n    if (serverName.value !== \"all\") {\r\n      parm.serverName = serverName.value;\r\n    }\r\n    const format = \"yyyyMMdd\";\r\n    const locale = undefined;\r\n    parm.endDate = dateFnsFormat(edDt, format, { locale });\r\n    parm.startDate = dateFnsFormat(stDt, format, { locale });\r\n    this.setState({ schInfo: parm, stDt: stDt, edDt: edDt });\r\n    AdminService.scaleHistory(parm, this.onResultList, (err) => Msg.error(err.message));\r\n  }\r\n\r\n  /**************************************************************************/\r\n  /* 핸들러 */\r\n  /**************************************************************************/\r\n  /**\r\n   * 리스트 결과 핸들러\r\n   * @param {Object} res {result:ok|fail,list:리스트}\r\n   */\r\n  onResultList(res) {\r\n    this.props.main.hideLoading();\r\n    // console.log(\"onresultlist\");\r\n    if (res.result === \"ok\") {\r\n      const pagesInfo = res.data;\r\n      this.setState({ gridData: res.list, pagesPage: pagesInfo.page, pagesTotalCount: pagesInfo.totalCount, pagesPerPage: pagesInfo.pageCount });\r\n    } else if (res.result === \"fail\") {\r\n      Msg.error(res.message);\r\n      if (res.errCode === \"401\") {\r\n        console.log(res.errCode);\r\n        this.props.main.setState({ login: false, role: '', username: '', sessionId: '', userInfo: {} });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n * 페이지 클릭 이벤트 핸들러\r\n * @param {int} page \r\n */\r\n  onClickPageItem(page) {\r\n    const { schKey } = this.refs;\r\n    if (schKey != null && schKey.value.length > 0) \r\n      this.requestData(page, schKey.value);\r\n    else\r\n      this.requestData(page);\r\n  }\r\n\r\n  /**\r\n * 검색 클릭 핸들러\r\n */\r\n  onClickSch() {\r\n    // this.requestData(this.state.pagesPage);\r\n    this.requestData(1);\r\n  }\r\n\r\n  formatDate(date, format, locale) {\r\n    return dateFnsFormat(date, format, { locale });\r\n  }\r\n\r\n  parseDate(str, format, locale) {\r\n    const parsed = dateFnsParse(str, format, new Date(), { locale });\r\n    return parsed;\r\n  }\r\n\r\n  /**\r\n * 조건 시작일자 변경 핸들러\r\n * @param {Date} day \r\n */\r\n  onChangeStDt(day) {\r\n    const { edDt } = this.state;\r\n    let minDt = sub(edDt, { months: 3 });\r\n    if (day < minDt) {\r\n      Msg.warn(\"조회할수있는 최대기간은 3달입니다.\");\r\n      this.setState({ stDt: minDt });\r\n      return;\r\n    }\r\n    this.setState({ stDt: day });\r\n  }\r\n\r\n  /**\r\n * 조건 종료일자 변경 핸들러\r\n * @param {Date} day \r\n */\r\n  onChangeEdDt(day) {\r\n    const { stDt } = this.state;\r\n    let maxDt = add(stDt, { months: 3 });\r\n    if (day > maxDt) {\r\n      Msg.warn(\"조회할수있는 최대기간은 3달입니다.\");\r\n      this.setState({ edDt: maxDt });\r\n      return;\r\n    }\r\n    this.setState({ edDt: day });\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      gridData, columns, schInfo, stDt, edDt,\r\n      pagesPage, pagesTotalCount, pagesPerPage\r\n    } = this.state;\r\n    if (!schInfo) schInfo = {};\r\n    const serverNameOpts = CommonCode.makeOptions(\"SCALE_IN_OUT_LIST\", \"codeName\", null, schInfo.serverName, true);\r\n    let scaleInOutTypeOpts = [<option value=\"all\">All</option>];\r\n    scaleInOutTypeOpts.push(<option value=\"START\" selected={schInfo.scaleInOutType === \"START\"}>START</option>);\r\n    scaleInOutTypeOpts.push(<option value=\"STOP\" selected={schInfo.scaleInOutType === \"STOP\"}>STOP</option>);\r\n    return <div className=\"page_layout\"><div className=\"layout_contents\">\r\n      <div className=\"content_list model_aid_list table_type1\">\r\n\r\n        <div className=\"content_title\">\r\n          <h3 className=\"tit\">Resource History</h3>\r\n        </div>\r\n\r\n        <div className=\"search_condition\">\r\n          <div className=\"ipt_group search_basis search_basis2\" style={{ width: \"100%\" }}><div className=\"group_center\">\r\n            <ul>\r\n              <li>\r\n                <span className=\"tit\">Node Name</span>\r\n                <select ref=\"serverName\" className=\"ml5\" style={{ float: \"left\", width: 100, height: 32, marginLeft: 10, outline: \"none\", border: \"1px solid #CECECE\" }}>\r\n                  {serverNameOpts}\r\n                </select>\r\n              </li>\r\n              <li>\r\n                <span className=\"tit\">Scale In/Out</span>\r\n                <select ref=\"scaleInOutType\" className=\"ml5\" style={{ float: \"left\", width: 100, height: 32, marginLeft: 10, outline: \"none\", border: \"1px solid #CECECE\" }}>\r\n                  {scaleInOutTypeOpts}\r\n                </select>\r\n              </li>\r\n              <li>\r\n                <div className=\"tui-datepicker-input tui-datetime-input tui-has-focus\" style={{ width: 110 }}>\r\n                  <DayPickerInput format=\"yyyy-MM-dd\" formatDate={this.formatDate} parseDate={this.parseDate}\r\n                    placeholder=\"YYYY-MM-DD\" onDayChange={this.onChangeStDt} value={stDt} />\r\n                </div>\r\n                <span className=\"bar\">&nbsp;&nbsp;~&nbsp;&nbsp;</span>\r\n                <div className=\"tui-datepicker-input tui-datetime-input tui-has-focus\" style={{ width: 110 }}>\r\n                  <DayPickerInput format=\"yyyy-MM-dd\" formatDate={this.formatDate} parseDate={this.parseDate}\r\n                    placeholder=\"YYYY-MM-DD\" onDayChange={this.onChangeEdDt} value={edDt} />\r\n                </div>\r\n              </li>\r\n            </ul>\r\n            <button className=\"btn btn_black\" onClick={() => this.onClickSch()}>검색</button>\r\n          </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"content_stitle\">\r\n          <span>Total : {common.displNum(pagesTotalCount)}</span>\r\n        </div>\r\n        <Grid ref={'grid'}\r\n          data={gridData} columnOptions={{ resizable: true }}\r\n          columns={columns}\r\n          scrollX={false} scrollY={false}\r\n        />\r\n        <div className=\"gridControlArea btn_area\">\r\n          <Pagination ref={'page'}\r\n            page={pagesPage}\r\n            totalCount={pagesTotalCount}\r\n            perPage={pagesPerPage}\r\n            onClickItem={this.onClickPageItem} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default HistoryScaleInOut;","import React, {Component} from 'react';\r\nimport {Pagination, Msg,NameRenderer} from 'comp';\r\nimport Grid from '@toast-ui/react-grid';\r\nimport TuiGrid from 'tui-grid';\r\nimport {AdminService} from 'admin';\r\nimport {ServiceHistDetail} from 'service';\r\n\r\n/**\r\n * 화면명 : Service 생성 이력\r\n * 화면 경로 : Admin > 이력 조회 > Service 생성 이력\r\n * 화면 코드 : MENU0040502\r\n * 참고 : \r\n */\r\nclass HistoryServiceReg extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            gridData:[],\r\n            columns:[],\r\n            bodyHeight:300,\r\n            pagesPage:1,\r\n            pagesTotalCount:0,\r\n            pagesPerPage:5,\r\n            showDetail:false,\r\n            selectionItem:{},\r\n            selectionColumName:'',\r\n            selectionRowKey:-1\r\n        }\r\n        this.requestData = this.requestData.bind(this);\r\n        this.onResultList = this.onResultList.bind(this);\r\n        this.onClickPageItem = this.onClickPageItem.bind(this);\r\n        this.onDClickGrid = this.onDClickGrid.bind(this);\r\n        this.onCloseDetail = this.onCloseDetail.bind(this);\r\n        this.onClickGrid = this.onClickGrid.bind(this);\r\n        this.onClickSch = this.onClickSch.bind(this);\r\n        this.onClickGridNameColumn = this.onClickGridNameColumn.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        TuiGrid.setLanguage('ko');\r\n        TuiGrid.applyTheme('clean'); // default, striped, clean\r\n        this.setState({bodyHeight:document.getElementsByClassName('page_wrapper')[0].clientHeight - 190});\r\n        this.requestData(1);\r\n\r\n        if (this.refs.grid && this.refs.grid.getInstance() && this.refs.grid.getInstance().el)\r\n            this.refs.grid.getInstance().el.addEventListener(\"dblclick\",this.onDClickGrid,false);\r\n    }\r\n    \r\n    componentDidUpdate() { \r\n        try {\r\n            if (this.refs.grid && this.refs.grid.getInstance() && this.refs.grid.getInstance().el)\r\n                this.refs.grid.getInstance().el.addEventListener(\"dblclick\",this.onDClickGrid,false);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    \r\n\t/**************************************************************************/\r\n\t/* 기능 */\r\n\t/**************************************************************************/\r\n\t/**\r\n\t * 리스트\r\n\t * @param {int} page \r\n\t * @param {String} schKeyword \r\n\t */\r\n\trequestData(page,schKeyword) {\r\n\t\tif (page === undefined) page = this.state.pagesPage;\r\n\t\tthis.props.main.showLoading();\r\n\t\tlet parm = {\r\n\t\t\tpage:page\r\n\t\t};\r\n\t\tif (schKeyword !== undefined)\r\n\t\t\tparm.schKey = schKeyword;\r\n\t\tAdminService.serviceCreHistory(parm,this.onResultList,(err) => Msg.error(err.message));\r\n\t}\r\n\t\r\n\t/**************************************************************************/\r\n\t/* 핸들러 */\r\n\t/**************************************************************************/\r\n\t/**\r\n\t * 더블 클릭 이벤트 핸들러\r\n\t * @param {GridEvent} gridEvt \r\n\t */\r\n    onDClickGrid(gridEvt) {\r\n        this.setState({showDetail:true});\r\n\t}\r\n    \r\n\t/**\r\n\t * 리스트 결과 핸들러\r\n\t * @param {Object} res {result:ok|fail,list:리스트}\r\n\t */\r\n    onResultList(res) {\r\n        this.props.main.hideLoading();\r\n        if (res.result===\"ok\") {\r\n            const pagesInfo = res.data;\r\n            const columns = [\r\n                {name:'serviceName',header:'Service명', minWidth:100,\r\n                    renderer: { type: NameRenderer ,options: {\r\n                        listData:res.list,labelKey:\"serviceName\",\r\n                        onClickGridNameColumn:this.onClickGridNameColumn\r\n                    } }\r\n                }\r\n                ,{name:'userName',header:'생성자',width:150,align:\"center\"}\r\n                ,{name:'regDate',header:'생성일',width:150,align:\"center\"}\r\n                ,{name:'runCycle',header:'실행주기',width:150,align:\"center\"}\r\n                ,{name:'modelName',header:'Model', minWidth:100}\r\n            ]\r\n            this.setState({gridData:res.list,pagesPage:pagesInfo.page,pagesTotalCount:pagesInfo.totalCount,pagesPerPage:pagesInfo.pageCount,columns:columns});\r\n        } else if (res.result === \"fail\"){\r\n            Msg.error(res.message);\r\n            if (res.errCode === \"401\") {\r\n                console.log(res.errCode);\r\n                this.props.main.setState({login:false,role:'',username:'',sessionId:'',userInfo:{}});\r\n            }\r\n        }\r\n    }\r\n    \r\n    /**\r\n\t * 페이지 클릭 이벤트 핸들러\r\n\t * @param {int} page \r\n\t */\r\n    onClickPageItem(page) {\r\n        this.requestData(page, this.state.schKeyword);\r\n\t}\r\n    \r\n\t/**\r\n\t * 삭제 팝업 닫힘 핸들러\r\n\t */\r\n    onCloseDetail() {\r\n        this.setState({showDetail:false});\r\n\t}\r\n    \r\n\t/**\r\n\t * 그리드 클릭 이벤트 핸들러\r\n\t * @param {GridEvent} gridEvt \r\n\t */\r\n    onClickGrid(gridEvt) {\r\n        console.log( this.state.gridData[gridEvt.rowKey] );\r\n        this.setState( {selectionRowKey:gridEvt.rowKey,selectionItem:this.state.gridData[gridEvt.rowKey],selectionColumName:gridEvt.columnName} );\r\n    }\r\n    \r\n    /**\r\n\t * 검색 클릭 핸들러\r\n\t */\r\n    onClickSch() {\r\n        this.requestData(this.state.pagesPage, this.refs.schKey.value );\r\n    }\r\n    \r\n    /**\r\n\t * 랜더러 클릭 이벤트 핸들러\r\n\t * @param {Object} item 선택 Row 데이터\r\n\t * @param {MouseEvent} e 클릭 이벤트\r\n\t * @param {Object} props 랜더러 Options\r\n\t */\r\n    onClickGridNameColumn(item,e,props) {\r\n        this.setState( {selectionRowKey:e.rowKey,selectionItem:item,selectionColumName:e.columnName,showDetail:true} );\r\n    }\r\n    \r\n    render() {\r\n        const {selectionItem,\r\n            gridData, bodyHeight, columns, showDetail,\r\n            pagesPage, pagesTotalCount, pagesPerPage\r\n        } = this.state;\r\n        return <div className=\"historyServiceReg\">\r\n            {showDetail \r\n                ? <ServiceHistDetail main={this.props.main} selectionItem={selectionItem} onClose={(e) => this.onCloseDetail()} onClickModify={this.onClickModify} modifyButtonVisible={false}/>\r\n                : <div><div className={'searchArea2'}><div className={'searchForm'}>\r\n                    <div className={'searchKeyword'}>\r\n                        <label>검색어</label>\r\n                        <input ref=\"schKey\" className=\"form-control\" placeholder=\"Service명 / 생성자 / Model / 데이터\" onKeyDown={(e) => e.keyCode === 13 ? this.onClickSch() : null}/>\r\n                    </div>\r\n                    <button className=\"btn btn-success btn-sm\" onClick={() => this.onClickSch()}>검색</button>\r\n                </div></div>\r\n                <div className=\"totalCount\"><span>Total : {pagesTotalCount}</span></div>\r\n                <div className={'gridArea'}>\r\n                    <Grid ref={'grid'} onClick={this.onClickGrid}\r\n                        data={gridData} columnOptions={{resizable: true}}\r\n                        columns={columns}\r\n                        bodyHeight={bodyHeight}\r\n                        scrollX={false} scrollY={false}\r\n                    />\r\n                    <Pagination ref={'page'}\r\n                        page={pagesPage}\r\n                        totalCount={pagesTotalCount}\r\n                        perPage={pagesPerPage}\r\n                        onClickItem={this.onClickPageItem}/>\r\n                </div>\r\n            </div> }\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default HistoryServiceReg;","import React, { Component } from 'react';\r\nimport { Pagination, Msg, common } from 'comp';\r\nimport { AdminService } from 'admin';\r\nimport { CommonCode } from 'main';\r\n\r\nimport Grid from '@toast-ui/react-grid';\r\nimport TuiGrid from 'tui-grid';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport dateFnsFormat from 'date-fns/format';\r\nimport dateFnsParse from 'date-fns/parse';\r\nimport { add, sub } from 'date-fns';\r\n\r\n/**\r\n * 화면명 : 로그인 이력\r\n * 화면 경로 : Admin > Login History\r\n * 화면 코드 : MENU0040505\r\n * 참고 : \r\n */\r\nclass HistoryUserLogin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      gridData: [],\r\n      //UserID,UserName,UserGroup,Login 컬럼 적용\r\n      columns: [\r\n        { name: 'userId', header: 'User ID', align: \"center\" }\r\n        , { name: 'userName', header: 'User Name', align: \"center\" }\r\n        , { name: 'userGroup', header: 'User Group', align: \"center\" }\r\n        , { name: 'loginDate', header: 'Login Date', align: \"center\" }\r\n      ],\r\n      bodyHeight: 300,\r\n      pagesPage: 1,\r\n      pagesTotalCount: 0,\r\n      pagesPerPage: 5,\r\n      showDetail: false,\r\n      selectionItem: {},\r\n      selectionColumName: '',\r\n      selectionRowKey: -1,\r\n      schInfo: undefined,\r\n      stDt: undefined,\r\n      edDt: undefined\r\n    }\r\n    this.requestData = this.requestData.bind(this);\r\n    this.onResultList = this.onResultList.bind(this);\r\n    this.onClickPageItem = this.onClickPageItem.bind(this);\r\n    this.onClickSch = this.onClickSch.bind(this);\r\n    this.formatDate = this.formatDate.bind(this);\r\n    this.parseDate = this.parseDate.bind(this);\r\n    this.onChangeStDt = this.onChangeStDt.bind(this);\r\n    this.onChangeEdDt = this.onChangeEdDt.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    TuiGrid.setLanguage('ko');\r\n    TuiGrid.applyTheme('clean'); // default, striped, clean\r\n    this.requestData(1);\r\n  }\r\n\r\n  /**************************************************************************/\r\n  /* 기능 */\r\n  /**************************************************************************/\r\n  /**\r\n   * 리스트\r\n   * @param {int} page \r\n   * @param {String} schKeyword \r\n   */\r\n  requestData(page, schKeyword) {\r\n    const { userPermission } = this.refs;\r\n    if (page === undefined) page = this.state.pagesPage;\r\n    let { stDt, edDt } = this.state;\r\n    this.props.main.showLoading();\r\n    let parm = {\r\n      page: page\r\n    };\r\n    if (userPermission.value !== \"all\") {\r\n      parm.userPermission = userPermission.value;\r\n    }\r\n    if (schKeyword !== undefined) {\r\n      parm.schKey = schKeyword;\r\n    }\r\n    if (edDt === undefined) {\r\n      edDt = new Date();\r\n    }\r\n    if (stDt === undefined) {\r\n      stDt = sub(edDt, { months: 1 });// 1달전\r\n    }\r\n    const format = \"yyyyMMdd\";\r\n    const locale = undefined;\r\n    parm.endDate = dateFnsFormat(edDt, format, { locale });\r\n    parm.startDate = dateFnsFormat(stDt, format, { locale });\r\n    this.setState({ schInfo: parm, stDt: stDt, edDt: edDt });\r\n    AdminService.userLoginHistory(parm, this.onResultList, (err) => Msg.error(err.message));\r\n  }\r\n\r\n  /**************************************************************************/\r\n  /* 핸들러 */\r\n  /**************************************************************************/\r\n  /**\r\n   * 리스트 결과 핸들러\r\n   * @param {Object} res {result:ok|fail,list:그룹코드리스트}\r\n   */\r\n  onResultList(res) {\r\n    this.props.main.hideLoading();\r\n    if (res.result === \"ok\") {\r\n      const pagesInfo = res.data;\r\n      this.setState({ gridData: res.list, pagesPage: pagesInfo.page, pagesTotalCount: pagesInfo.totalCount, pagesPerPage: pagesInfo.pageCount });\r\n    } else if (res.result === \"fail\") {\r\n      Msg.error(res.message);\r\n      if (res.errCode === \"401\") {\r\n        console.log(res.errCode);\r\n        this.props.main.setState({ login: false, role: '', username: '', sessionId: '', userInfo: {} });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n * 페이지 클릭 이벤트 핸들러\r\n * @param {int} page \r\n */\r\n  onClickPageItem(page) {\r\n    const { schKey } = this.refs;\r\n    if (schKey.value.length > 0)\r\n      this.requestData(page, schKey.value);\r\n    else\r\n      this.requestData(page);\r\n  }\r\n\r\n  /**\r\n * 검색 클릭 핸들러\r\n */\r\n  onClickSch() {\r\n    this.requestData(this.state.pagesPage, this.refs.schKey.value);\r\n  }\r\n\r\n  formatDate(date, format, locale) {\r\n    return dateFnsFormat(date, format, { locale });\r\n  }\r\n\r\n  parseDate(str, format, locale) {\r\n    const parsed = dateFnsParse(str, format, new Date(), { locale });\r\n    return parsed;\r\n  }\r\n\r\n  /**\r\n * 조건 시작일자 변경 핸들러\r\n * @param {Date} day \r\n */\r\n  onChangeStDt(day) {\r\n    const { edDt } = this.state;\r\n    let minDt = sub(edDt, { months: 3 });\r\n    if (day < minDt) {\r\n      Msg.warn(\"조회할수있는 최대기간은 3달입니다.\");\r\n      this.setState({ stDt: minDt });\r\n      return;\r\n    }\r\n    this.setState({ stDt: day });\r\n  }\r\n\r\n  /**\r\n * 조건 종료일자 변경 핸들러\r\n * @param {Date} day \r\n */\r\n  onChangeEdDt(day) {\r\n    const { stDt } = this.state;\r\n    let maxDt = add(stDt, { months: 3 });\r\n    if (day > maxDt) {\r\n      Msg.warn(\"조회할수있는 최대기간은 3달입니다.\");\r\n      this.setState({ edDt: maxDt });\r\n      return;\r\n    }\r\n    this.setState({ edDt: day });\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      gridData, columns, schInfo, stDt, edDt,\r\n      pagesPage, pagesTotalCount, pagesPerPage\r\n    } = this.state;\r\n    if (!schInfo) schInfo = {};\r\n    // 권한을 option 태그 리스트로 생성\r\n    let permissionOpts = CommonCode.makeOptions(\"PERMISSION\", null, null, schInfo.userPermission, true);\r\n    return <div className=\"page_layout\"><div className=\"layout_contents\">\r\n      <div className=\"content_list model_aid_list table_type1\">\r\n\r\n        <div className=\"content_title\">\r\n          <h3 className=\"tit\">Login History</h3>\r\n        </div>\r\n\r\n        <div className=\"search_condition\">\r\n          <div className=\"ipt_group search_basis search_basis2 search_basis_wide\"><div className=\"group_center\">\r\n            <ul>\r\n              <li>\r\n                <span className=\"tit\">User Group</span>\r\n                <select ref=\"userPermission\" className=\"ml5\" style={{ float: \"left\", width: 100, height: 32, marginLeft: 10, outline: \"none\", border: \"1px solid #CECECE\" }}>\r\n                  {permissionOpts}\r\n                </select>\r\n              </li>\r\n              <li>\r\n                <span className=\"tit\">User Name / ID</span>\r\n                <input ref=\"schKey\" type=\"text\" className=\"ipt_text ml5\" style={{ width: 350 }} defaultValue={schInfo.schKey} />\r\n              </li>\r\n              <li>\r\n                <div className=\"tui-datepicker-input tui-datetime-input tui-has-focus\" style={{ width: 110 }}>\r\n                  <DayPickerInput format=\"yyyy-MM-dd\" formatDate={this.formatDate} parseDate={this.parseDate}\r\n                    placeholder=\"YYYY-MM-DD\" onDayChange={this.onChangeStDt} value={stDt} />\r\n                </div>\r\n                <span className=\"bar\">&nbsp;&nbsp;~&nbsp;&nbsp;</span>\r\n                <div className=\"tui-datepicker-input tui-datetime-input tui-has-focus\" style={{ width: 110 }}>\r\n                  <DayPickerInput format=\"yyyy-MM-dd\" formatDate={this.formatDate} parseDate={this.parseDate}\r\n                    placeholder=\"YYYY-MM-DD\" onDayChange={this.onChangeEdDt} value={edDt} />\r\n                </div>\r\n              </li>\r\n            </ul>\r\n            <button className=\"btn btn_black\" onClick={() => this.onClickSch()}>검색</button>\r\n          </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"content_stitle\">\r\n          <span>Total : {common.displNum(pagesTotalCount)}</span>\r\n        </div>\r\n        <Grid ref={'grid'}\r\n          data={gridData} columnOptions={{ resizable: true }}\r\n          columns={columns}\r\n          scrollX={false} scrollY={false}\r\n        />\r\n        <div className=\"gridControlArea btn_area\">\r\n          <Pagination ref={'page'}\r\n            page={pagesPage}\r\n            totalCount={pagesTotalCount}\r\n            perPage={pagesPerPage}\r\n            onClickItem={this.onClickPageItem} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default HistoryUserLogin;","import React, {Component} from 'react';\r\nimport AdminService from './AdminService';\r\nimport { Msg } from 'comp';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\n/**\r\n * 화면명 : Service 이력 결과\r\n * 화면 경로 : Admin > Service History 결과 팝업\r\n * 화면 코드 : \r\n * 참고 : Service가 결과 파일을 output할경우 해당 결과파일을 로드해서 보여주는 화면\r\n */\r\nclass HistoryServiceDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            detailInfo:{}\r\n        };\r\n        this.onResultSvcExecHistInfo = this.onResultSvcExecHistInfo.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        const {serviceHistory} = this.props;\r\n        // 서비스 결과 정보\r\n        AdminService.serviceExecHistoryResult(serviceHistory,this.onResultSvcExecHistInfo,(err) => console.log(err.message));\r\n    }\r\n    \r\n    /**\r\n     * 서비스 결과 정보 결과 핸들러\r\n     * @param {Object} res {result:ok|fail,data:{html:결과 html 파일 내용, log:결과 log 파일 내용}}\r\n     */\r\n    onResultSvcExecHistInfo(res) {\r\n        if (res.result === \"ok\") {\r\n            this.setState({detailInfo:res.data});\r\n        } else if (res.result === \"fail\") { Msg.error(res.message) }\r\n    }\r\n    \r\n    render() {\r\n        const {detailInfo} = this.state;\r\n        const {serviceHistory} = this.props;\r\n        return <div className=\"content_view model_view\">\r\n\r\n        <div className=\"content_title\">\r\n          <h3 className=\"tit\">Service Report</h3>\r\n        </div>\r\n\r\n        <div className=\"btn_area\">\r\n          <span className=\"left\">\r\n            <button className=\"btn btn_white\" onClick={() => this.props.onClose()} style={{marginBottom:20}}>목록</button>\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"table_type2 table_type3\">\r\n          <table>\r\n            <colgroup>\r\n              <col style={{width:240}} />\r\n              <col />\r\n            </colgroup>\r\n            <tbody>\r\n              <tr>\r\n                <th>Service Name</th>\r\n                <td>\r\n                    <p className=\"txt\">{serviceHistory.serviceName}</p>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div className=\"report\">\r\n          <p className=\"tit\">Result Chart</p>\r\n          <div className=\"contents img\">\r\n            { ReactHtmlParser(detailInfo.png) }\r\n          </div>\r\n        </div>\r\n\r\n        {/* <div className=\"report\">\r\n          <p className=\"tit\">Result Chart</p>\r\n          <div className=\"contents\">\r\n            { ReactHtmlParser(detailInfo.html) }\r\n          </div>\r\n        </div> */}\r\n\r\n        {/* <div className=\"log\">\r\n          <span className=\"tit\">Result CSV</span>\r\n          <div className=\"contents\">\r\n            { ReactHtmlParser(detailInfo.csv) }\r\n          </div>\r\n        </div> */}\r\n        <div className=\"log\">\r\n          <span className=\"tit\">Result Log</span>\r\n          <div className=\"contents\">\r\n            { ReactHtmlParser(detailInfo.log) }\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"btn_area\">\r\n          <span className=\"right\">\r\n            <button className=\"btn btn_white\" onClick={() => this.props.onClose()} style={{marginBottom:20}}>목록</button>\r\n          </span>\r\n        </div>\r\n\r\n      </div>;\r\n    }\r\n}\r\n\r\nexport default HistoryServiceDetail;","import React, { Component } from 'react';\r\nimport { Pagination, Msg, NameRenderer } from 'comp';\r\nimport { AdminService } from 'admin';\r\nimport Grid from '@toast-ui/react-grid';\r\nimport TuiGrid from 'tui-grid';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport dateFnsFormat from 'date-fns/format';\r\nimport dateFnsParse from 'date-fns/parse';\r\nimport { add, sub } from 'date-fns';\r\nimport HistoryServiceDetail from './HistoryServiceDetail';\r\n\r\n/**\r\n * 화면명 : Service 실행결과 이력\r\n * 화면 경로 : Admin > 이력 조회 > Service 실행결과 이력\r\n * 화면 코드 : MENU0040506\r\n * 참고 : https://react-day-picker.js.org/docs/input\r\n */\r\nclass HistoryServiceExec extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      gridData: [],\r\n      columns: [],\r\n      bodyHeight: 300,\r\n      pagesPage: 1,\r\n      pagesTotalCount: 0,\r\n      pagesPerPage: 5,\r\n      showDetail: false,\r\n      selectionItem: {},\r\n      selectionColumName: '',\r\n      selectionRowKey: -1,\r\n      serviceGroupData: [],\r\n      schInfo: undefined,\r\n      stDt: undefined,\r\n      edDt: undefined,\r\n      prevGroup: undefined,\r\n      schKeyword: this.props.params ? this.props.params.serviceName : ''\r\n    }\r\n    this.requestData = this.requestData.bind(this);\r\n    this.onResultList = this.onResultList.bind(this);\r\n    this.onClickSch = this.onClickSch.bind(this);\r\n    this.onResultServiceGroupList = this.onResultServiceGroupList.bind(this);\r\n    this.formatDate = this.formatDate.bind(this);\r\n    this.parseDate = this.parseDate.bind(this);\r\n    this.onChangeStDt = this.onChangeStDt.bind(this);\r\n    this.onChangeEdDt = this.onChangeEdDt.bind(this);\r\n    this.onClickGridNameColumn = this.onClickGridNameColumn.bind(this);\r\n    this.onClickPageItem = this.onClickPageItem.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    TuiGrid.setLanguage('ko');\r\n    TuiGrid.applyTheme('clean'); // default, striped, clean\r\n    let { stDt, edDt } = this.state;\r\n    let setStateFlag = false;\r\n\r\n    if (edDt === undefined) {\r\n      edDt = new Date();\r\n      setStateFlag = true;\r\n    }\r\n    if (stDt === undefined) {\r\n      stDt = sub(edDt, { months: 1 });// 1달전\r\n      setStateFlag = true;\r\n    }\r\n    if (setStateFlag)\r\n      this.setState({ stDt: stDt, edDt: edDt });\r\n\r\n    // 서비스 그룹\r\n    AdminService.serviceGroupList({}, this.onResultServiceGroupList, (err) => Msg.error(err.message));\r\n  }\r\n\r\n  /**************************************************************************/\r\n  /* 기능 */\r\n  /**************************************************************************/\r\n  /**\r\n   * 리스트\r\n   * @param {int} page 페이지\r\n   * @param {String} schKeyword Service ID, Service Name 검색어\r\n   */\r\n  requestData(page, schKeyword, fromKey) {\r\n    console.log(\"## PAGE : [\" + page + \"], keyword : [\" + schKeyword + \"]\");\r\n    if (page === undefined) page = this.state.pagesPage;\r\n    let { stDt, edDt } = this.state;\r\n    let parm = {\r\n      page: page\r\n    };\r\n\r\n    if (schKeyword !== undefined)\r\n      parm.schKey = schKeyword;\r\n    if (edDt === undefined) {\r\n      edDt = new Date();\r\n    }\r\n    if (stDt === undefined) {\r\n      stDt = sub(edDt, { months: 1 });// 1달전\r\n    }\r\n    \r\n    let format = \"yyyyMMdd\";\r\n    let locale = undefined;\r\n    if (fromKey !== undefined) {\r\n      parm.serviceGroupName = this.state.prevGroup;\r\n      this.refs.serviceGroupName.value = this.state.prevGroup;\r\n    } else {\r\n      parm.serviceGroupName = this.refs.serviceGroupName.value;\r\n      this.setState({prevGroup:this.refs.serviceGroupName.value });\r\n    }\r\n\r\n    parm.serviceStatus = this.refs.serviceStatus.value;\r\n    parm.startDate = dateFnsFormat(stDt, format, { locale });\r\n    parm.endDate = dateFnsFormat(edDt, format, { locale });\r\n\r\n    this.setState({ schInfo: parm, stDt: stDt, edDt: edDt, schKeyword: schKeyword});\r\n    AdminService.serviceExecHistory(parm, this.onResultList, (err) => Msg.error(err.message));\r\n  }\r\n\r\n  /**************************************************************************/\r\n  /* 핸들러 */\r\n  /**************************************************************************/\r\n  /**\r\n   * 리스트 결과 핸들러\r\n   * @param {Object} res {result:ok|fail,list:리스트}\r\n   */\r\n  onResultList(res) {\r\n    this.props.main.hideLoading();\r\n    if (res.result === \"ok\") {\r\n      const pagesInfo = res.data;\r\n      this.setState({})\r\n      // console.log(pagesInfo);\r\n      const columns = [\r\n        {\r\n          name: 'serviceName', header: 'Service Name', \r\n          renderer: {\r\n            type: ServiceNameRenderer, options: {\r\n              listData: res.list,\r\n              onClickGridNameColumn: this.onClickGridNameColumn\r\n            }\r\n          }\r\n        }\r\n        , { name: 'serviceGroupName', header: 'Service Group', align: \"center\" }\r\n        , {\r\n          name: 'dagId', header: 'DAG ID', align: \"center\",\r\n          renderer: { type: DagIdRenderer, options: { listData: res.list } }\r\n        }\r\n        , { name: 'startDate', header: 'Start', align: \"center\" }\r\n        , { name: 'endDate', header: 'End', align: \"center\" }\r\n        , { name: 'elapsed', header: 'Elapsed Time(sec)', align: \"center\" }\r\n        , {\r\n          name: 'serviceStatus', header: 'Result', align: \"center\",\r\n          renderer: { type: StatusRenderer, options: { listData: res.list } }\r\n        }\r\n      ];\r\n      this.setState({ gridData: res.list, pagesPage: pagesInfo.page, pagesTotalCount: pagesInfo.totalCount, pagesPerPage: pagesInfo.pageCount, columns: columns, totalStatus: pagesInfo.totalStatus });\r\n    } else if (res.result === \"fail\") {\r\n      Msg.error(res.message);\r\n      if (res.errCode === \"401\") {\r\n        console.log(res.errCode);\r\n        this.props.main.setState({ login: false, role: '', username: '', sessionId: '', userInfo: {} });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 서비스 그룹 리스트 결과 핸들러\r\n   * @param {Object} res {result:ok|fail,list:서비스 그룹 리스트}\r\n   */\r\n  onResultServiceGroupList(res) {\r\n    if (res.result === \"ok\") {\r\n      this.setState({ serviceGroupData: res.list });\r\n      this.requestData(1, this.state.schKeyword);\r\n    } else if (res.result === \"fail\") {\r\n      Msg.error(res.message);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 검색 버튼 클릭 핸들러\r\n   */\r\n  onClickSch() {\r\n    console.log(\"## schKey.value : [\" + this.refs.schKey.value + \"]\");\r\n    this.requestData(1, this.refs.schKey.value);\r\n  }\r\n\r\n  formatDate(date, format, locale) {\r\n    return dateFnsFormat(date, format, { locale });\r\n  }\r\n\r\n  parseDate(str, format, locale) {\r\n    const parsed = dateFnsParse(str, format, new Date(), { locale });\r\n    return parsed;\r\n  }\r\n\r\n  /**\r\n   * 조건 시작일자 변경 핸들러\r\n   * @param {Date} day \r\n   */\r\n  onChangeStDt(day) {\r\n    const { edDt } = this.state;\r\n    let minDt = sub(edDt, { months: 3 });\r\n    if (day < minDt) {\r\n      Msg.warn(\"조회할수있는 최대기간은 3달입니다.\");\r\n      this.setState({ stDt: minDt });\r\n      return;\r\n    }\r\n    this.setState({ stDt: day });\r\n  }\r\n\r\n  /**\r\n   * 조건 종료일자 변경 핸들러\r\n   * @param {Date} day \r\n   */\r\n  onChangeEdDt(day) {\r\n    const { stDt } = this.state;\r\n    let maxDt = add(stDt, { months: 3 });\r\n    if (day > maxDt) {\r\n      Msg.warn(\"조회할수있는 최대기간은 3달입니다.\");\r\n      this.setState({ edDt: maxDt });\r\n      return;\r\n    }\r\n    this.setState({ edDt: day });\r\n  }\r\n\r\n  /**\r\n * 랜더러 클릭 이벤트 핸들러\r\n * @param {Object} item 선택 Row 데이터\r\n * @param {MouseEvent} e 클릭 이벤트\r\n * @param {Object} props 랜더러 Options\r\n */\r\n  onClickGridNameColumn(item, e, props) {\r\n    this.setState({ selectionRowKey: e.rowKey, selectionItem: item, selectionColumName: e.columnName, showDetail: true });\r\n  }\r\n\r\n  /**\r\n   * 페이지 클릭 이벤트 핸들러\r\n   * @param {int} page \r\n   */\r\n  onClickPageItem(page) {\r\n    this.requestData(page, this.state.schKeyword, true);\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      gridData, columns,\r\n      pagesPage, pagesTotalCount, pagesPerPage,\r\n      serviceGroupData, schInfo, selectionItem,\r\n      stDt, edDt, totalStatus, showDetail\r\n    } = this.state;\r\n    let serviceGroupOpts = [<option value=\"all\">All</option>];\r\n    for (let i = 0; i < serviceGroupData.length; i++) {\r\n      if (schInfo) {\r\n        serviceGroupOpts.push(\r\n          <option value={serviceGroupData[i].serviceGroupName} selected={schInfo.serviceGroupName === serviceGroupData[i].serviceGroupName} key={Math.random()}>{serviceGroupData[i].serviceGroupName}</option>\r\n        );\r\n      }\r\n    }\r\n    if (totalStatus === undefined) totalStatus = {};\r\n\r\n    return <div className=\"page_layout\">\r\n      <div className=\"layout_contents\">\r\n        {showDetail ? <HistoryServiceDetail serviceHistory={selectionItem} onClose={() => this.setState({ showDetail: false })} />\r\n          : <div className=\"content_list model_aid_list table_type1\">\r\n\r\n            <div className=\"content_title\">\r\n              <h3 className=\"tit\">Service History</h3>\r\n            </div>\r\n\r\n            <div className=\"search_condition\">\r\n              <div className=\"ipt_group search_basis search_basis_wide\">\r\n                <div className=\"group_center\">\r\n                  <ul>\r\n                    <li>\r\n                      <span className=\"tit\">Service Group</span>\r\n                      <select ref=\"serviceGroupName\" className=\"ml5\" style={{ float: \"left\", width: 100, height: 32, marginLeft: 10, outline: \"none\", border: \"1px solid #CECECE\" }}>\r\n                        {serviceGroupOpts}\r\n                      </select>\r\n                    </li>\r\n                    <li>\r\n                      <span className=\"tit\">Service Name / Dag ID</span>\r\n                      <input ref=\"schKey\" type=\"text\" className=\"ipt_text ml5\" placeholder=\"\" value={this.state.schKeyword} onChange={(e) => this.setState({schKeyword : e.target.value})} style={{ width: 158 }} />\r\n                    </li>\r\n                    <li>\r\n                      <span className=\"tit\">Result</span>\r\n                      <select ref=\"serviceStatus\" className=\"ml5\" style={{ float: \"left\", width: 100, height: 32, marginLeft: 10, outline: \"none\", border: \"1px solid #CECECE\" }}>\r\n                        <option value=\"all\">All</option>\r\n                        <option value=\"success\">Completion</option>\r\n                        <option value=\"warning\">Warning</option>\r\n                      </select>\r\n                    </li>\r\n                    <li>\r\n                      <div className=\"tui-datepicker-input tui-datetime-input tui-has-focus\" style={{ width: 110 }}>\r\n                        <DayPickerInput format=\"yyyy-MM-dd\" formatDate={this.formatDate} parseDate={this.parseDate}\r\n                          placeholder=\"YYYY-MM-DD\" onDayChange={this.onChangeStDt} value={stDt} />\r\n                      </div>\r\n                      <span className=\"bar\">&nbsp;&nbsp;~&nbsp;&nbsp;</span>\r\n                      <div className=\"tui-datepicker-input tui-datetime-input tui-has-focus\" style={{ width: 110 }}>\r\n                        <DayPickerInput format=\"yyyy-MM-dd\" formatDate={this.formatDate} parseDate={this.parseDate}\r\n                          placeholder=\"YYYY-MM-DD\" onDayChange={this.onChangeEdDt} value={edDt} />\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                  <button className=\"btn btn_black\" onClick={() => this.onClickSch()}>검색</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"status_guide\">\r\n              <ul>\r\n                <li>\r\n                  <span className=\"staus staus_completion\"></span> Completion <b>{totalStatus.success === undefined ? 0 : totalStatus.success}</b>\r\n                </li>\r\n                <li>\r\n                  <span className=\"staus staus_warning\"></span> Warning <b>{totalStatus.warning === undefined ? 0 : totalStatus.warning}</b>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <Grid ref={'grid'}\r\n              data={gridData} columnOptions={{ resizable: true }}\r\n              columns={columns}\r\n              scrollX={false} scrollY={false}\r\n            />\r\n            <div className=\"gridControlArea btn_area\">\r\n              <Pagination ref={'page'}\r\n                page={pagesPage}\r\n                totalCount={pagesTotalCount}\r\n                perPage={pagesPerPage}\r\n                onClickItem={this.onClickPageItem} />\r\n            </div>\r\n          </div>\r\n        } {/* showDetail */}\r\n      </div></div>;\r\n  }\r\n}\r\n\r\nclass ServiceNameRenderer {\r\n  constructor(props) {\r\n    const { listData, onClickGridNameColumn } = props.columnInfo.renderer.options;\r\n    const el = document.createElement('a');\r\n    el.className = \"nameLink link\";\r\n    let item = undefined;\r\n    if (listData && listData.length > 0)\r\n      item = listData[props.rowKey];\r\n    el.innerText = item[\"serviceName\"];\r\n    el.title = item[\"resultPath\"];\r\n    el.href = \"#\";\r\n    el.addEventListener(\"click\", (e) => onClickGridNameColumn(item, e, props));\r\n    this.el = el;\r\n  }\r\n  getElement() {\r\n    return this.el;\r\n  }\r\n}\r\n/**\r\n * DAG ID 컬럼 랜더러\r\n */\r\nclass DagIdRenderer {\r\n  constructor(props) {\r\n    const { listData } = props.columnInfo.renderer.options;\r\n    const el = document.createElement('div');\r\n    el.className = \"tui-grid-cell-content\";\r\n    let item = undefined;\r\n    if (listData && listData.length > 0)\r\n      item = listData[props.rowKey];\r\n    el.innerText = item[\"dagId\"];\r\n    el.title = item[\"serviceId\"];\r\n    this.el = el;\r\n  }\r\n  getElement() {\r\n    return this.el;\r\n  }\r\n}\r\n\r\n/**\r\n * Status 컬럼 랜더러\r\n */\r\nclass StatusRenderer {\r\n  constructor(props) {\r\n    const { onClickTestReq, listData } = props.columnInfo.renderer.options;\r\n    let item = undefined;\r\n    if (listData && listData.length > 0)\r\n      item = listData[props.rowKey];\r\n    if (item === undefined) item = {};\r\n    let el = document.createElement('span');\r\n    if (item.serviceStatus === \"success\") {\r\n      el.className = \"staus staus_completion\";\r\n    } else {\r\n      el.className = \"staus staus_warning\";\r\n    }\r\n    this.el = el;\r\n  }\r\n  getElement() {\r\n    return this.el;\r\n  }\r\n}\r\n\r\nexport default HistoryServiceExec;","import React,{Component} from 'react';\r\nimport Grid from '@toast-ui/react-grid';\r\nimport TuiGrid from 'tui-grid';\r\nimport { Msg } from 'comp';\r\nimport {AdminService} from 'admin';\r\nimport Validation from 'comp/Validation';\r\nimport {common} from 'comp';\r\n\r\n/**\r\n * 화면명 : 공통 코드\r\n * 화면 경로 : 관리자 > 공통 코드\r\n * 화면 코드 : MENU00406\r\n * 참고 : \r\n */\r\nclass CommonCodeMgr extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            groupData:[],\r\n            groupColumns:[\r\n                {name:'groupCode',header:'그룹 코드', align:\"center\"}\r\n                ,{name:'groupName',header:'그룹 코드명', align:\"center\"}\r\n                ,{name:'useYn',width:40,header:'사용', align:\"center\"}\r\n            ],\r\n            codeData:[],\r\n            codeColumns:[\r\n                {name:'code',header:'코드', align:\"center\"}\r\n                ,{name:'codeName',header:'코드명', align:\"center\"}\r\n                ,{name:'value',header:'코드값', align:\"center\"}\r\n                ,{name:'sort',width:40,header:'순서', align:\"center\"}\r\n                ,{name:'useYn',width:40,header:'사용', align:\"center\"}\r\n            ],\r\n            bodyHeight:300,\r\n\r\n            selectionGroupItem:undefined,selectionCodeItem:undefined,\r\n            groupSaveType:undefined,codeSaveType:undefined,\r\n\r\n            validGrpCd:null,validGrpCdNm:null,\r\n            validCd:null,validCdNm:null,\r\n            reqDeleteCodeAll:null\r\n        }\r\n        this.reqCommGroupList = this.reqCommGroupList.bind(this);\r\n        this.reqCommCodeList = this.reqCommCodeList.bind(this);\r\n        this.onResultCommonGroupList = this.onResultCommonGroupList.bind(this);\r\n        this.onResultCommonCodeList = this.onResultCommonCodeList.bind(this);\r\n        this.onClickGroupGrid = this.onClickGroupGrid.bind(this);\r\n        this.onClickCodeGrid = this.onClickCodeGrid.bind(this);\r\n        this.groupGridSelectedItem = this.groupGridSelectedItem.bind(this);\r\n        this.codeGridSelectedItem = this.codeGridSelectedItem.bind(this);\r\n        this.initGroupForm = this.initGroupForm.bind(this);\r\n        this.initCodeForm = this.initCodeForm.bind(this);\r\n        this.disabledGroupForm = this.disabledGroupForm.bind(this);\r\n        this.disabledCodeForm = this.disabledCodeForm.bind(this);\r\n        this.onClickBtnGroupSave = this.onClickBtnGroupSave.bind(this);\r\n        this.onClickBtnGroupDel = this.onClickBtnGroupDel.bind(this);\r\n        this.onClickBtnCodeSave = this.onClickBtnCodeSave.bind(this);\r\n        this.onClickBtnCodeDel = this.onClickBtnCodeDel.bind(this);\r\n        this.onClickGroupAdd = this.onClickGroupAdd.bind(this);\r\n        this.onClickCodeAdd = this.onClickCodeAdd.bind(this);\r\n        this.validationCheckGroup = this.validationCheckGroup.bind(this);\r\n        this.validationCheckCode = this.validationCheckCode.bind(this);\r\n        this.initValids = this.initValids.bind(this);\r\n        this.onResultGroupSave = this.onResultGroupSave.bind(this);\r\n        this.onResultCodeSave = this.onResultCodeSave.bind(this);\r\n        this.onResultGroupDel = this.onResultGroupDel.bind(this);\r\n        this.onResultCodeDel = this.onResultCodeDel.bind(this);\r\n        this.onConfirmGroupDelOk = this.onConfirmGroupDelOk.bind(this);\r\n        this.onConfirmCodeDelOk = this.onConfirmCodeDelOk.bind(this);\r\n        this.onConfirmCancel = this.onConfirmCancel.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        TuiGrid.setLanguage('ko');\r\n        TuiGrid.applyTheme('clean'); // default, striped, clean\r\n        this.setState({bodyHeight:document.getElementById('root').clientHeight - 350});\r\n        this.reqCommGroupList();\r\n        this.disabledGroupForm();\r\n        this.disabledCodeForm();\r\n    }\r\n    \r\n\t/**************************************************************************/\r\n\t/* 기능 */\r\n\t/**************************************************************************/\r\n    /**\r\n     * 그룹 코드 리스트 요청\r\n     */\r\n    reqCommGroupList() {\r\n        this.props.main.showLoading();\r\n        AdminService.commonGroupList(this.onResultCommonGroupList,(err) => Msg.error(err.message));\r\n    }\r\n    \r\n    /**\r\n     * 공통 코드 리스트 요청\r\n     * @param {String}} groupCode 그룹코드\r\n     */\r\n    reqCommCodeList(groupCode) {\r\n        this.props.main.showLoading();\r\n        const parm = {groupCode:groupCode,allFlag:\"all\"};\r\n        AdminService.commonCodeList(parm,this.onResultCommonCodeList,(err) => Msg.error(err.message));\r\n    }\r\n\r\n    /**\r\n     * 그룹 입력폼 초기화\r\n     */\r\n    initGroupForm() {\r\n        const {groupCode,groupName,groupUseYn,btnGroupSave,btnGroupDel} = this.refs;\r\n        groupCode.value = \"\";\r\n        groupName.value = \"\";\r\n        groupUseYn.checked = \"checked\";\r\n        groupCode.disabled = groupName.disabled = groupUseYn.disabled = btnGroupSave.disabled = btnGroupDel.disabled = false;\r\n    }\r\n\r\n    /**\r\n     * 코드 입력폼 초기화\r\n     */\r\n    initCodeForm() {\r\n        const {code, codeName, value, sort, useYn, btnCodeSave, btnCodeDel} = this.refs;\r\n        code.value = \"\";\r\n        codeName.value = \"\";\r\n        value.value = \"\";\r\n        sort.value = \"\";\r\n        useYn.checked = \"checked\";\r\n        code.disabled = codeName.disabled = value.disabled = sort.disabled = useYn.disabled = btnCodeSave.disabled = btnCodeDel.disabled = false;\r\n    }\r\n\r\n    /**\r\n     * 그룹 입력폼 전체 비활성화\r\n     */\r\n    disabledGroupForm() {\r\n        const {groupCode,groupName,groupUseYn,btnGroupSave,btnGroupDel} = this.refs;\r\n        groupCode.disabled = groupName.disabled = groupUseYn.disabled = btnGroupSave.disabled = btnGroupDel.disabled = true;\r\n    }\r\n    \r\n    /**\r\n     * 코드 입력폼 전체 비활성화\r\n     */\r\n    disabledCodeForm() {\r\n        const {code, codeName, value, sort, useYn, btnCodeSave, btnCodeDel} = this.refs;\r\n        code.disabled = codeName.disabled = value.disabled = sort.disabled = useYn.disabled = btnCodeSave.disabled = btnCodeDel.disabled = true;\r\n    }\r\n    \r\n    /**\r\n     * 그룹 그리드 선택\r\n     */\r\n    groupGridSelectedItem() {\r\n        this.initGroupForm();\r\n        const selectedItem = this.state.selectionGroupItem;\r\n        this.reqCommCodeList( selectedItem.groupCode );\r\n\r\n        const {groupCode,groupName,groupUseYn} = this.refs;\r\n        groupCode.value = selectedItem.groupCode;\r\n        groupCode.disabled = true;\r\n        groupName.value = selectedItem.groupName;\r\n        groupUseYn.checked = selectedItem.useYn === \"Y\" ? \"checked\" : \"\";\r\n\r\n        this.initCodeForm();\r\n        this.disabledCodeForm();\r\n\r\n        groupName.focus();\r\n    }\r\n    \r\n    /**\r\n     * 코드 그리드 선택\r\n     */\r\n    codeGridSelectedItem() {\r\n        this.disabledGroupForm();\r\n        this.initCodeForm();\r\n        const selectedItem = this.state.selectionCodeItem;\r\n        const {code, codeName, value, sort, useYn} = this.refs;\r\n        code.value = selectedItem.code;\r\n        code.disabled = true;\r\n        codeName.value = selectedItem.codeName;\r\n        value.value = selectedItem.value;\r\n        sort.value = selectedItem.sort;\r\n        useYn.checked = selectedItem.useYn === \"Y\" ? \"checked\" : \"\";\r\n\r\n        codeName.focus();\r\n    }\r\n    \r\n    /**\r\n     * 그룹코드 저장 값 체크\r\n     * @return {boolean} 저장 가능여부\r\n     */\r\n    validationCheckGroup() {\r\n        // 초기화\r\n        this.initValids();\r\n        let chkState = {};\r\n        const {groupCode,groupName} = this.refs;\r\n        // 그룹코드\r\n        let chkVal = groupCode.value;\r\n        let valiRes = Validation.chkCommonCode(chkVal);\r\n        chkState.validGrpCd = true;\r\n        if (!valiRes.result) {\r\n            Msg.error(valiRes.errMsg);\r\n            chkState.validGrpCd = false;\r\n            this.setState(chkState);\r\n            return false;\r\n        }\r\n        // 그룹코드명\r\n        chkVal = groupName.value;\r\n        chkState.validGrpCdNm = true;\r\n        if (chkVal.length < 2 || chkVal.length > 30) {\r\n            Msg.error(\"코드명은 2~30길이 입력 할 수 있습니다.\");\r\n            chkState.validGrpCdNm = false;\r\n            this.setState(chkState);\r\n            return false;\r\n        }\r\n\r\n        this.setState(chkState);\r\n        return true;\r\n    }\r\n    \r\n    /**\r\n     * 코드 저장 값 체크\r\n     * @return {boolean} 저장 가능여부\r\n     */\r\n    validationCheckCode() {\r\n        // 초기화\r\n        this.initValids();\r\n        let chkState = {};\r\n        const {code, codeName} = this.refs;\r\n\r\n        // 코드\r\n        let chkVal = code.value;\r\n        let valiRes = Validation.chkCommonCode(chkVal);\r\n        chkState.validCd = true;\r\n        if (!valiRes.result) {\r\n            Msg.error(valiRes.errMsg);\r\n            chkState.validCd = false;\r\n            this.setState(chkState);\r\n            return false;\r\n        }\r\n        // 코드명\r\n        chkVal = codeName.value;\r\n        chkState.validCdNm = true;\r\n        if (chkVal.length < 2 || chkVal.length > 30) {\r\n            Msg.error(\"코드명은 2~30길이 입력 할 수 있습니다.\");\r\n            chkState.validCdNm = false;\r\n            this.setState(chkState);\r\n            return false;\r\n        }\r\n\r\n        this.setState(chkState);\r\n        return true;\r\n    }\r\n    \r\n    /**\r\n     * validation 값 초기화\r\n     */\r\n    initValids() {\r\n        this.setState({validGrpCd:null,validGrpCdNm:null,validCd:null,validCdNm:null});\r\n    }\r\n\r\n\t/**************************************************************************/\r\n\t/* 핸들러 */\r\n\t/**************************************************************************/\r\n    /**\r\n     * 코드그룹 코드 리스트 결과 핸들러\r\n     * @param {Object} res {result:ok|fail,list:그룹코드리스트}\r\n     */\r\n    onResultCommonGroupList(res) {\r\n        this.props.main.hideLoading();\r\n        if (res.result === \"ok\") {\r\n            this.setState({groupData:res.list});\r\n        } else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * 코드 리스트 결과 핸들러\r\n     * @param {Object} res {result:ok|fail,list:코드리스트}\r\n     */\r\n    onResultCommonCodeList(res) {\r\n        this.props.main.hideLoading();\r\n        if (res.result === \"ok\") {\r\n            this.setState({codeData:res.list});\r\n        } else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * 코드그룹 그리드 클릭 이벤트 핸들러\r\n     * @param {GridEvent} gridEvt \r\n     */\r\n    onClickGroupGrid(gridEvt) {\r\n        if (gridEvt.rowKey === undefined) return;\r\n        this.setState( {\r\n            selectionGroupItem:this.state.groupData[gridEvt.rowKey],\r\n            codeSaveType:undefined,groupSaveType:\"modi\"\r\n        } );\r\n        setTimeout(this.groupGridSelectedItem,100);\r\n    }\r\n    \r\n    /**\r\n     * 코드 그리드 클릭 이벤트 핸들러\r\n     * @param {GridEvent} gridEvt \r\n     */\r\n    onClickCodeGrid(gridEvt) {\r\n        if (gridEvt.rowKey === undefined) return;\r\n        this.setState( {\r\n            selectionCodeItem:this.state.codeData[gridEvt.rowKey],\r\n            codeSaveType:\"modi\",groupSaveType:undefined\r\n        } );\r\n        setTimeout(this.codeGridSelectedItem,100);\r\n    }\r\n\r\n    /**\r\n     * 코드그룹 저장 버튼 클릭 이벤트 핸들러\r\n     */\r\n    onClickBtnGroupSave() {\r\n        if (!this.validationCheckGroup()) return;\r\n        this.props.main.showLoading();\r\n        let param = common.makeParam(this);\r\n        param.saveType = this.state.groupSaveType;\r\n        AdminService.saveCodeGroup(param,this.onResultGroupSave,(err) => Msg.error(err.message));\r\n    }\r\n    \r\n    /**\r\n     * 코드그룹 저장 결과 핸들러\r\n     * @param {Object} res {result:ok|fail,message:결과 메세지}\r\n     */\r\n    onResultGroupSave(res) {\r\n        this.props.main.hideLoading();\r\n        if (res.result === \"ok\") {\r\n            this.initGroupForm();\r\n            this.disabledGroupForm();\r\n            this.reqCommGroupList();\r\n            Msg.ok(res.message);\r\n        }\r\n        else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * 코드그룹 삭제 버튼 클릭 이벤트 핸들러\r\n     */\r\n    onClickBtnGroupDel() {\r\n        const selectedItem = this.state.selectionGroupItem;\r\n        this.props.main.showConfirm(\"코드그룹 삭제\",selectedItem.groupName + \" 삭제 하시겠습니까?\",this.onConfirmGroupDelOk,this.onConfirmCancel);\r\n    }\r\n    \r\n    onConfirmGroupDelOk() {\r\n        const selectedItem = this.state.selectionGroupItem;\r\n        this.props.main.showLoading();\r\n        if (this.state.reqDeleteCodeAll)\r\n            selectedItem.deleteCodeAll = true;\r\n        AdminService.deleteCodeGroup(selectedItem,this.onResultGroupDel,(err) => Msg.error(err.message));\r\n    }\r\n    \r\n    onResultGroupDel(res) {\r\n        this.props.main.hideLoading();\r\n        if (res.result === \"ok\") {\r\n            this.initGroupForm();\r\n            this.disabledGroupForm();\r\n            this.reqCommGroupList();\r\n            this.setState({reqDeleteCodeAll:null});\r\n            Msg.ok(res.message);\r\n        }\r\n        else if (res.result === \"fail\") {\r\n            if (res.value === \"reqDeleteCodeAll\") {\r\n                this.setState({reqDeleteCodeAll:true});\r\n                this.props.main.showConfirm(\"코드그룹 삭제\",res.message,this.onConfirmGroupDelOk,this.onConfirmCancel);\r\n            } else {\r\n                this.setState({reqDeleteCodeAll:null});\r\n                Msg.error(res.message);\r\n            }\r\n        }\r\n    }\r\n    \r\n    onConfirmCancel() {\r\n        this.setState({reqDeleteCodeAll:null});\r\n    }\r\n    \r\n    /**\r\n     * 코드 저장 버튼 클릭 이벤트 핸들러\r\n     */\r\n    onClickBtnCodeSave() {\r\n        // const selectedItem = this.state.selectionCodeItem;\r\n        // console.log(selectedItem);\r\n        if (!this.validationCheckCode()) return;\r\n        this.props.main.showLoading();\r\n        let param = common.makeParam(this);\r\n        param.saveType = this.state.codeSaveType;\r\n        AdminService.saveCode(param,this.onResultCodeSave,(err) => Msg.error(err.message));\r\n    }\r\n    \r\n    /**\r\n     * 코드 저장 결과 핸들러\r\n     * @param {Object} res {result:ok|fail,message:결과 메세지}\r\n     */\r\n    onResultCodeSave(res) {\r\n        this.props.main.hideLoading();\r\n        if (res.result === \"ok\") {\r\n            this.initCodeForm();\r\n            this.disabledCodeForm();\r\n            this.reqCommCodeList(this.state.selectionGroupItem.groupCode);\r\n            Msg.ok(res.message);\r\n        }\r\n        else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * 코드 삭제 버튼 클릭 이벤트 핸들러\r\n     */\r\n    onClickBtnCodeDel() {\r\n        const selectedItem = this.state.selectionCodeItem;\r\n        this.props.main.showConfirm(\"코드 삭제\",selectedItem.codeName + \" 삭제 하시겠습니까?\",this.onConfirmCodeDelOk,this.onConfirmCancel);\r\n    }\r\n    \r\n    onConfirmCodeDelOk() {\r\n        const selectedItem = this.state.selectionCodeItem;\r\n        AdminService.deleteCode(selectedItem,this.onResultCodeDel,(err) => Msg.error(err.message));\r\n    }\r\n    \r\n    onResultCodeDel(res) {\r\n        this.props.main.hideLoading();\r\n        if (res.result === \"ok\") {\r\n            this.initCodeForm();\r\n            this.disabledCodeForm();\r\n            this.reqCommCodeList(this.state.selectionGroupItem.groupCode);\r\n            Msg.ok(res.message);\r\n        }\r\n        else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 코드그룹 추가 버튼 클릭 이벤트 핸들러\r\n     */\r\n    onClickGroupAdd() {\r\n        this.setState({selectionGroupItem:undefined,groupSaveType:\"ins\",codeSaveType:undefined});\r\n        this.initGroupForm();\r\n        this.initCodeForm();\r\n        this.disabledCodeForm();\r\n        this.refs.groupCode.focus();\r\n    }\r\n    \r\n    /**\r\n     * 코드 추가 버튼 클릭 이벤트 핸들러\r\n     */\r\n    onClickCodeAdd() {\r\n        if (!this.state.selectionGroupItem) {\r\n            Msg.error(\"그룹 선택해 주세요.\");\r\n            return;\r\n        }\r\n        this.setState({selectionCodeItem:undefined,groupSaveType:undefined,codeSaveType:\"ins\"});\r\n        this.initCodeForm();\r\n        this.disabledGroupForm();\r\n        this.refs.code.focus();\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            bodyHeight, groupData, groupColumns, codeData, codeColumns\r\n        } = this.state;\r\n        return <div className=\"commonCodeMgr mainContent\">\r\n            <div className={'content'} style={{display:\"flex\"}}>\r\n            \r\n            <div className=\"division\">\r\n                <span className=\"title\">● 그룹코드</span>\r\n                <Grid ref={'groupGrid'} onClick={this.onClickGroupGrid}\r\n                    data={groupData} columnOptions={{resizable: true}}\r\n                    columns={groupColumns}\r\n                    bodyHeight={bodyHeight}\r\n                    scrollX={false} scrollY={false}\r\n                />\r\n                <div className=\"gridBottomArea\">\r\n                    <div></div>\r\n                    <button className=\"btn btn_white\" onClick={() => this.onClickGroupAdd()}>추가</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"division\">\r\n                <span className=\"title\">● 코드</span>\r\n                <Grid ref={'codeGrid'} onClick={this.onClickCodeGrid}\r\n                    data={codeData} columnOptions={{resizable: true}}\r\n                    columns={codeColumns}\r\n                    bodyHeight={bodyHeight}\r\n                    scrollX={false} scrollY={false}\r\n                />\r\n                <div className=\"gridBottomArea\">\r\n                    <div></div>\r\n                    <button className=\"btn btn_white\" onClick={() => this.onClickCodeAdd()}>추가</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"division\" style={{paddingTop: 22}}>\r\n                {/*그룹 코드 입력폼*/}\r\n                <div className=\"table_type2\">\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>그룹코드 <span className=\"necessary\">*</span></th>\r\n                            <td>\r\n                                <div className=\"ipt_group\">\r\n                                    <input ref=\"groupCode\" type=\"text\" className=\"ipt_text\" />\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>그룹코드명 <span className=\"necessary\">*</span></th>\r\n                            <td>\r\n                                <div className=\"ipt_group\">\r\n                                    <input ref=\"groupName\" type=\"text\" className=\"ipt_text\" />\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>사용유무</th>\r\n                            <td>\r\n                                <div className=\"ipt_group\">\r\n                                    <input type=\"checkbox\" ref=\"groupUseYn\" className=\"form-control formChk\" />\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                    <div className=\"btn_area\"><p className=\"btn2\">\r\n                        <button ref=\"btnGroupSave\" className=\"btn btn_white\" onClick={() => this.onClickBtnGroupSave()}>그룹 저장</button>\r\n                        <button ref=\"btnGroupDel\" className=\"btn btn_white\" onClick={() => this.onClickBtnGroupDel()}>삭제</button>\r\n                    </p></div>\r\n                </div>\r\n\r\n                {/*코드 입력폼*/}\r\n                <div className=\"table_type2\">\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>코드 <span className=\"necessary\">*</span></th>\r\n                            <td>\r\n                                <div className=\"ipt_group\">\r\n                                <input ref=\"code\" type=\"text\" className=\"ipt_text\" />\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>코드명 <span className=\"necessary\">*</span></th>\r\n                            <td>\r\n                                <div className=\"ipt_group\">\r\n                                <input ref=\"codeName\" type=\"text\" className=\"ipt_text\" />\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>코드값</th>\r\n                            <td>\r\n                                <div className=\"ipt_group\">\r\n                                <input ref=\"value\" type=\"text\" className=\"ipt_text\" />\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>순서</th>\r\n                            <td>\r\n                                <div className=\"ipt_group\">\r\n                                <input ref=\"sort\" type=\"number\" className=\"ipt_number\" />\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>사용유무</th>\r\n                            <td>\r\n                                <div className=\"ipt_group\">\r\n                                <input type=\"checkbox\" ref=\"useYn\" className=\"form-control formChk\" />\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <div className=\"btn_area\"><p className=\"btn2\">\r\n                        <button ref=\"btnCodeSave\" className=\"btn btn_white\" onClick={() => this.onClickBtnCodeSave()}>코드 저장</button>\r\n                        <button ref=\"btnCodeDel\" className=\"btn btn_white\" onClick={() => this.onClickBtnCodeDel()}>삭제</button>\r\n                    </p></div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default CommonCodeMgr;","import React, { Component } from 'react';\r\nimport { Pagination, Msg, common, Validation } from 'comp';\r\nimport { AdminService, ServiceGroupReg } from 'admin';\r\nimport Grid from '@toast-ui/react-grid';\r\nimport TuiGrid from 'tui-grid';\r\n\r\n/**\r\n * 화면명 : Service Group Management\r\n * 화면 경로 : Admin > Service Group Management\r\n * 화면 코드 : MENU00407\r\n * 참고 : \r\n */\r\nclass ServiceGroupManager extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      gridData: [],\r\n      columns: [],\r\n      bodyHeight: 300,\r\n      pagesPage: 1,\r\n      pagesTotalCount: 0,\r\n      pagesPerPage: 5,\r\n      showDetail: false,\r\n      selectionItem: {},\r\n      selectionColumName: '',\r\n      selectionRowKey: -1\r\n    }\r\n    this.requestData = this.requestData.bind(this);\r\n    this.onResultList = this.onResultList.bind(this);\r\n    this.onClickPageItem = this.onClickPageItem.bind(this);\r\n    this.onClickSch = this.onClickSch.bind(this);\r\n    this.onClickReg = this.onClickReg.bind(this);\r\n    this.onClickDel = this.onClickDel.bind(this);\r\n    this.onResultDel = this.onResultDel.bind(this);\r\n    this.onConfirmOkDel = this.onConfirmOkDel.bind(this);\r\n    this.onConfirmCancelDel = this.onConfirmCancelDel.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    TuiGrid.setLanguage('ko');\r\n    TuiGrid.applyTheme('clean'); // default, striped, clean\r\n    this.requestData(1);\r\n  }\r\n\r\n  /**************************************************************************/\r\n  /* 기능 */\r\n  /**************************************************************************/\r\n  /**\r\n   * 리스트\r\n   * @param {int} page \r\n   * @param {String} schKeyword \r\n   */\r\n  requestData(page, schKeyword) {\r\n    if (page === undefined) page = this.state.pagesPage;\r\n    this.props.main.showLoading();\r\n    let parm = {\r\n      page: page\r\n    };\r\n    if (schKeyword !== undefined) {\r\n      schKeyword = Validation.filterSchKeyword(schKeyword);\r\n      parm.schKey = schKeyword;\r\n    }\r\n    AdminService.serviceGroupList(parm, this.onResultList, (err) => Msg.error(err.message));\r\n  }\r\n\r\n  /**************************************************************************/\r\n  /* 핸들러 */\r\n  /**************************************************************************/\r\n  /**\r\n   * 리스트 결과 핸들러\r\n   * @param {Object} res {result:ok|fail,list:리스트}\r\n   */\r\n  onResultList(res) {\r\n    this.props.main.hideLoading();\r\n    if (res.result === \"ok\") {\r\n      const pagesInfo = res.data;\r\n      const columns = [\r\n        { name: 'serviceGroupName', header: 'Service Group Name', align: \"left\" }\r\n        , { name: 'creationDate', header: '생성일', align: \"center\" }\r\n        , { name: 'description', header: '설명', align: \"left\" }\r\n      ];\r\n      this.setState({ gridData: res.list, pagesPage: pagesInfo.page, pagesTotalCount: pagesInfo.totalCount, pagesPerPage: pagesInfo.pageCount, columns: columns });\r\n    } else if (res.result === \"fail\") {\r\n      Msg.error(res.message);\r\n      if (res.errCode === \"401\") {\r\n        console.log(res.errCode);\r\n        this.props.main.setState({ login: false, role: '', username: '', sessionId: '', userInfo: {} });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 페이지 클릭 이벤트 핸들러\r\n   * @param {int} page \r\n   */\r\n  onClickPageItem(page) {\r\n    const { schKey } = this.refs;\r\n    if (schKey.value.length > 0)\r\n      this.requestData(page, schKey.value);\r\n    else\r\n      this.requestData(page);\r\n  }\r\n\r\n  /**\r\n   * 검색 클릭 핸들러\r\n   */\r\n  onClickSch() {\r\n    this.requestData(this.state.pagesPage, this.refs.schKey.value);\r\n  }\r\n\r\n  /**\r\n   * 등록 버튼 클릭 핸들러\r\n   */\r\n  onClickReg() {\r\n    const { modifyServiceGroupInfo } = this.state;\r\n    const title = \"서비스 그룹 추가\";\r\n    this.props.main.showPopup(\r\n      title,\r\n      <ServiceGroupReg main={this.props.main} modifyFlag={modifyServiceGroupInfo !== undefined} modifyServiceGroupInfo={modifyServiceGroupInfo} onClose={(e) => { this.props.main.hidePopup(title); this.requestData() }} />,\r\n      { width: 516, height: 342, popupBtnAreaVisible: false }, null, null\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 삭제 버튼 클릭 핸들러\r\n   */\r\n  onClickDel() {\r\n    const chkedRsrs = this.refs.grid.getInstance().getCheckedRows();\r\n    if (chkedRsrs.length > 0)\r\n      this.props.main.showConfirm(\"서비스 그룹 삭제\", \"서비스 그룹 삭제하시겠습니까?\", this.onConfirmOkDel, this.onConfirmCancelDel);\r\n    else Msg.warn(\"선택된 서비스 그룹이 없습니다.\");\r\n  }\r\n\r\n  /**\r\n   * 삭제 확인 핸들러\r\n   */\r\n  onConfirmOkDel() {\r\n    const chkedRsrs = this.refs.grid.getInstance().getCheckedRows();\r\n    let delServiceGroups = [];\r\n    for (let i = 0; i < chkedRsrs.length; i++) {\r\n      delServiceGroups.push(chkedRsrs[i].serviceGroupName);\r\n    }\r\n    AdminService.deleteServiceGroup(delServiceGroups, this.onResultDel, (e) => Msg.error(e.message));\r\n  }\r\n\r\n  /**\r\n   * 삭제 확인 취소 핸들러\r\n   */\r\n  onConfirmCancelDel() {\r\n    // 삭제 확인 취소시\r\n  }\r\n\r\n  /**\r\n   * 석제 결과 핸들러\r\n   * @param {Object} res {result:ok|fail,message}\r\n   */\r\n  onResultDel(res) {\r\n    this.requestData();\r\n    if (res.result === \"ok\") {\r\n      Msg.ok(\"서비스 그룹 삭제 되었습니다.\");\r\n    }\r\n    else if (res.result === \"fail\") {\r\n      Msg.error(res.message);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { gridData, columns, pagesPage, pagesTotalCount, pagesPerPage } = this.state;\r\n    return <div className=\"page_layout\">\r\n      <div className=\"layout_contents\">\r\n        <div className=\"content_list model_aid_list table_type1\">\r\n          <div className=\"content_title\">\r\n            <h3 className=\"tit\">Service Group Management</h3>\r\n          </div>\r\n\r\n          <div className=\"search_condition\">\r\n            <div className=\"ipt_group search_basis search_basis2\"><div className=\"group_center\">\r\n              <ul><li>\r\n                <span className=\"tit\" id=\"searchSort\">Service Group Name</span>\r\n                <input ref=\"schKey\" type=\"text\" className=\"ipt_text ml5\" placeholder=\"검색어를 입력해 주세요.\" style={{ width: 240 }}\r\n                  onKeyDown={(e) => e.keyCode === 13 ? this.onClickSch() : null} />\r\n              </li></ul>\r\n              <button className=\"btn btn_black\" onClick={() => this.onClickSch()}>검색</button>\r\n            </div>\r\n            </div>\r\n            <button className=\"btn btn_add btn_blue\" onClick={this.onClickReg}></button>\r\n          </div>\r\n\r\n          <div className=\"content_stitle\">\r\n            <span>Total : {common.displNum(pagesTotalCount)}</span>\r\n          </div>\r\n          <Grid ref={'grid'} rowHeaders={[\"checkbox\"]}\r\n            data={gridData} columnOptions={{ resizable: true }}\r\n            columns={columns}\r\n            scrollX={false} scrollY={false}\r\n          />\r\n          <div className=\"gridControlArea left btn_area\">\r\n            <button className=\"btn btn_black gridControlBtn\" onClick={this.onClickDel}>삭제</button>\r\n            <Pagination ref={'page'}\r\n              page={pagesPage}\r\n              totalCount={pagesTotalCount}\r\n              perPage={pagesPerPage}\r\n              onClickItem={this.onClickPageItem} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default ServiceGroupManager;","import React, { Component } from 'react';\r\nimport { Msg } from 'comp';\r\nimport { makeParam } from 'comp/common';\r\nimport Validation from 'comp/Validation';\r\nimport AdminService from './AdminService';\r\n\r\n/**\r\n * 화면명 : Service Group Regist\r\n * 화면 경로 : Admin > Service Group Management > Service Group Regist\r\n * 화면 코드 : MENU0040701\r\n * 참고 : \r\n */\r\nclass ServiceGroupReg extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      validName: null,\r\n      initModify: false,\r\n      inputChange: false,\r\n      isNameChk: false\r\n    };\r\n    this.onClickReg = this.onClickReg.bind(this);\r\n    this.onClose = this.onClose.bind(this);\r\n    this.onResultCreate = this.onResultCreate.bind(this);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.validationCheck = this.validationCheck.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      validName: null,\r\n      isNameChk: false,\r\n      modifyFlag: false\r\n    });\r\n    this.refs.serviceGroupName.focus();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { initModify } = this.state;\r\n    let { modifyFlag } = this.props;\r\n    if (modifyFlag && !initModify) {\r\n      this.setState({ initModify: true });   // 수정일경우 처음에 중복확인 PASS\r\n    }\r\n  }\r\n\r\n  /**************************************************************************/\r\n  /* 기능 */\r\n  /**************************************************************************/\r\n  /**\r\n   * 저장 버튼 클릭 핸들러\r\n   */\r\n  onClickReg() {\r\n    const { modifyFlag } = this.props;\r\n    if (!this.validationCheck()) return;\r\n    let parm = makeParam(this);\r\n    parm.saveType = modifyFlag ? \"modi\" : \"ins\";\r\n    AdminService.createServiceGroup(parm, this.onResultCreate, (e) => Msg.error(e.message));\r\n  }\r\n\r\n  /**\r\n   * 저장전 값 확인\r\n   * @return {Boolean} 확인 결과\r\n   */\r\n  validationCheck() {\r\n    if (!this.state.inputChange) {\r\n      Msg.warn(\"변경된 사항이 없습니다.\");\r\n      return false;\r\n    }\r\n    // 초기화\r\n    this.setState({ validName: null, validCpu: null });\r\n    // 자원 그룹명\r\n    let chkVal = this.refs.serviceGroupName.value;\r\n    let valiRes = Validation.chkServiceGroupName(chkVal);\r\n    let chkState = {};\r\n    chkState.validName = true;\r\n    if (!valiRes.result) {\r\n      Msg.error(valiRes.errMsg);\r\n      chkState.validName = false;\r\n      this.setState(chkState);\r\n      return false;\r\n    }\r\n\r\n    this.setState(chkState);\r\n    return true;\r\n  }\r\n\r\n  /**************************************************************************/\r\n  /* 핸들러 */\r\n  /**************************************************************************/\r\n  /**\r\n   * 그룹명 변경 핸들러\r\n   */\r\n  onChangeName() {\r\n    this.setState({ inputChange: true, isNameChk: false });\r\n  }\r\n\r\n  /**\r\n * 저장 결과 핸들러\r\n * @param {Object} res {result:ok|fail,message}\r\n */\r\n  onResultCreate(res) {\r\n    this.setState(this.defaultState);\r\n    if (res.result === \"ok\") {\r\n      // initForm(this);\r\n      Msg.ok(res.message);\r\n      this.props.onClose();\r\n    } else if (res.result === \"fail\") {\r\n      Msg.error(res.message);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 닫기 핸들러\r\n   */\r\n  onClose() {\r\n    setTimeout((e) => this.props.onClose(), 100);\r\n  }\r\n\r\n  /**\r\n   * 설명 변경 핸들러\r\n   */\r\n  onChangeDesc() {\r\n    const maxLen = 100;\r\n    if (this.refs.description.value.length > maxLen) {\r\n      this.refs.description.value = this.refs.description.value.substr(0, maxLen);\r\n    }\r\n    this.setState({ descLength: this.refs.description.value.length, inputChange: true });\r\n  }\r\n\r\n  render() {\r\n    let { modifyServiceGroupInfo } = this.props;\r\n    let { descLength } = this.state;\r\n\r\n    if (modifyServiceGroupInfo === undefined) modifyServiceGroupInfo = {};\r\n    if (descLength === 0 && modifyServiceGroupInfo.description !== null && modifyServiceGroupInfo.description !== undefined && modifyServiceGroupInfo.description.length > 0)\r\n      descLength = modifyServiceGroupInfo.description.length;\r\n    return <div className=\"table_type2\">\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <th>서비스 그룹명</th>\r\n            <td>\r\n              <div className=\"ipt_group\">\r\n                <input type=\"text\" ref=\"serviceGroupName\" className=\"ipt_text\" id=\"inputName\" placeholder=\"한글,영문,숫자 최대 50자\"\r\n                  onChange={(e) => { this.onChangeName() }} maxLength=\"20\" defaultValue={modifyServiceGroupInfo.serviceGroupName}\r\n                />\r\n              </div>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <th>Description</th>\r\n            <td style={{ textAlign: \"right\" }}>\r\n              <textarea ref=\"description\" rows=\"3\" cols=\"100\" maxLength=\"100\" onChange={(e) => this.onChangeDesc()} defaultValue={modifyServiceGroupInfo.description}></textarea>\r\n              <span className=\"font_gray\" style={{ paddingRight: 5 }}>(<span style={{ color: \"#ff7272\" }}>{descLength}</span> / 100)</span>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div className=\"popupBtnArea btn_area addbtnarea\"><p className=\"btn2\">\r\n        <button className=\"btn btn_white\" onClick={() => this.props.onClose()}>취소</button>\r\n        <button className=\"btn btn_black\" onClick={() => this.onClickReg()}>저장</button>\r\n      </p></div>\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default ServiceGroupReg;","import React, {Component} from 'react';\r\nimport {Pagination, Msg} from 'comp';\r\nimport {ModelService} from 'model';\r\nimport Validation from 'comp/Validation';\r\nimport GridList from 'comp/GridList';\r\n\r\nclass ModelPopCont extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            gridData:[],\r\n            columns:[\r\n                {name:\"modelName\",header:\"Model Name\",width:200},\r\n                {name:\"priorityNm\",header:\"Priority\",width:50,align:\"center\"},\r\n                {name:\"regDate\",header:\"Update Date\",width:120,align:\"center\"},\r\n                {name:\"userId\",header:\"User\",width:100,align:\"center\"},\r\n                {name:\"select\",header:\"Select\",width:79,align:\"center\"}\r\n            ],\r\n            bodyHeight:200,\r\n            pagesPage:1,\r\n            pagesTotalCount:0,\r\n            pagesPerPage:5\r\n        };\r\n        this.requestData = this.requestData.bind(this);\r\n        this.onResultList = this.onResultList.bind(this);\r\n        this.onClickPageItem = this.onClickPageItem.bind(this);\r\n        this.onClickSch = this.onClickSch.bind(this);\r\n        this.onClickSelection = this.onClickSelection.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.requestData(1);\r\n    }\r\n    \r\n    requestData(page,schType,schKeyword) {\r\n        if (page === undefined) page = this.state.pagesPage;\r\n        this.props.main.showLoading();\r\n        const parm = {\r\n            page:page\r\n        };\r\n        if (schType !== undefined && schKeyword !== undefined) {\r\n            // Msg.info(\"필터전 : \" + schKeyword);\r\n            schKeyword = Validation.filterSchKeyword(schKeyword);\r\n            // Msg.info(\"필터후 : \" + schKeyword);\r\n            parm.schKey = schKeyword;\r\n            parm.schType = schType;\r\n        }\r\n        ModelService.list(parm,this.onResultList,(err) => Msg.error(err.message));\r\n    }\r\n    \r\n    onResultList(res) {\r\n        this.props.main.hideLoading();\r\n        // console.log(\"onresultlist\");\r\n        // console.log(res);\r\n        if (res.result===\"ok\") {\r\n            const pagesInfo = res.data;\r\n            const columns = [\r\n                {name:\"modelName\",header:\"Model Name\",width:120,sortable:true},\r\n                {name:\"priorityNm\",header:\"Priority\",width:120,align:\"center\",sortable:true},\r\n                {name:\"regDate\",header:\"Update Date\",width:120,align:\"center\",sortable:true},\r\n                {name:\"userId\",header:\"User\",width:100,align:\"center\",sortable:true},\r\n                {name:\"select\",header:\"Select\",width:85,align:\"center\",paddingRight:5,sortable:true,\r\n                    renderer: { type: SelectButton ,options: { listData:res.list,onClickSelection:this.onClickSelection } }\r\n                }\r\n            ];\r\n            this.setState({gridData:res.list,pagesPage:pagesInfo.page,pagesTotalCount:pagesInfo.totalCount,pagesPerPage:pagesInfo.pageCount,columns:columns});\r\n            // this.setState({gridData:res.list,columns:columns});\r\n        } else if (res.result === \"fail\"){\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    \r\n    /**\r\n\t * 검색 클릭 핸들러\r\n\t */\r\n    onClickSch() {\r\n        // if (this.refs.schKey.value.length < 1) {\r\n        //     Msg.warn(\"모델명을 입력해 주세요.\");\r\n        //     return;\r\n        // }\r\n        this.requestData(1, \"modelName\", this.refs.schKey.value );\r\n    }\r\n    \r\n    onClickSelection(item) {\r\n        if (this.props.onClickSelection)\r\n            this.props.onClickSelection(item);\r\n        this.props.onClose();\r\n    }\r\n    \r\n    /**\r\n\t * 페이지 클릭 이벤트 핸들러\r\n\t * @param {int} page \r\n\t */\r\n    onClickPageItem(page) {\r\n        // console.log(\"onclickpageitem : \" + page);\r\n        const {schKey} = this.refs;\r\n        this.requestData(page,\"modelName\",schKey.value);\r\n    }\r\n    \r\n    render() {\r\n        let {\r\n            gridData, columns, \r\n            pagesPage, pagesTotalCount, pagesPerPage\r\n        } = this.state;\r\n        return <div style={{padding:7}}>\r\n            <div className=\"search_condition\" style={{marginBottom: 10}}>\r\n                <div className=\"ipt_group search_basis\" style={{paddingLeft: 31,width:\"100%\"}}>\r\n                    {/* <span className=\"txt\">검색어</span> */}\r\n                    {/* <select ref=\"schType\" style={{float:\"left\",width: 200,height: 32,marginLeft: 10,outline:\"none\",border:\"1px solid #CECECE\"}}>\r\n                        <option value=\"modelName\">Model Name</option>\r\n                        <option value=\"user\">User</option>\r\n                        </select>\r\n                    <span className=\"selectbox ml10\" id=\"searchSort\" style={{width:120}}></span> */}\r\n                    <input ref=\"schKey\" type=\"text\" className=\"ipt_text ml10\" placeholder=\"Model Name\" style={{width:297}} onKeyDown={(e) => e.keyCode === 13 ? this.onClickSch() : null}/>\r\n                    <button className=\"btn btn_black\" onClick={() => this.onClickSch()}>검색</button>\r\n                </div>\r\n            </div>\r\n            <div style={{paddingTop:9}}>\r\n                <GridList columns={columns} gridData={gridData}/>\r\n                <Pagination ref={'page'}\r\n                    page={pagesPage}\r\n                    totalCount={pagesTotalCount}\r\n                    perPage={pagesPerPage}\r\n                    onClickItem={this.onClickPageItem}/>\r\n            </div>\r\n        {/* <div className=\"popupBtnArea btn_area addbtnarea\"><p className=\"btn2\">\r\n            <button className=\"btn btn_white\" onClick={() => this.props.main.hidePopup(this.props.title)}>닫기</button>\r\n            * <button className=\"btn btn_black\" onClick={(e) => this.onClickSelection()}>선택</button> *\r\n\t\t</p></div> */}\r\n        </div>;\r\n    }\r\n}\r\n\r\nclass SelectButton extends Component {\r\n    render() {\r\n        const {item} = this.props;\r\n        const {onClickSelection} = this.props.options;\r\n        return <button className=\"table_btn btn_linegray\" onClick={() => onClickSelection(item)}>Select</button>;\r\n    }\r\n}\r\n\r\nexport default ModelPopCont;","import React, {Component} from 'react';\r\nimport { Msg } from 'comp';\r\nimport { makeParam } from 'comp/common';\r\nimport Validation from 'comp/Validation';\r\nimport {ModelManager} from 'model';\r\nimport ServiceService from './ServiceService';\r\nimport {AdminService} from 'admin';\r\nimport ModelPopCont from 'model/ModelPopCont';\r\n\r\n/**\r\n * 화면명 : Service 등록\r\n * 화면 경로 : Service > Service 관리 > Service 등록\r\n * 화면 코드 : \r\n * 참고 : Service 관리 화면에서 사용하는 등록 화면\r\n */\r\nclass ServiceReg extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            validName:null,\r\n            validModelId:null,\r\n            validUseData:null,\r\n            isNameChk:false,\r\n            descLength:0,\r\n            progress:0,\r\n            selectedFiles:undefined,\r\n            currentFile:undefined,\r\n            initModify:false,\r\n            popupSelectedItem:undefined,\r\n            inputChange:false,\r\n            resourceGroupData:[],\r\n            selectedResourceGroupId:undefined,\r\n            serviceGroupData:[],\r\n            selectedServiceGroupName:undefined,\r\n\t\t\tmodels:[]\r\n        };\r\n        this.onClickReg = this.onClickReg.bind(this);\r\n        this.onClose = this.onClose.bind(this);\r\n        this.modelChoosePopup = this.modelChoosePopup.bind(this);\r\n        this.modelSelectedItem = this.modelSelectedItem.bind(this);\r\n        this.onResultCreate = this.onResultCreate.bind(this);\r\n        this.onResultServiceGroupList = this.onResultServiceGroupList.bind(this);\r\n\t\tthis.onChangeDesc = this.onChangeDesc.bind(this);\r\n        this.onClickModelPop = this.onClickModelPop.bind(this);\r\n        this.onClickModelSelection = this.onClickModelSelection.bind(this);\r\n        this.onChangeDagId = this.onChangeDagId.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.setState({\r\n            validName:null,\r\n            isNameChk:false,\r\n            descLength:0,\r\n            progress:0,\r\n            selectedFiles:undefined,\r\n            currentFile:undefined,\r\n            modifyFlag:false\r\n        });\r\n        this.refs.serviceName.focus();\r\n        // 서비스 그룹\r\n        AdminService.serviceGroupList({},this.onResultServiceGroupList,(err) => Msg.error(err.message));\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        const { initModify } = this.state;\r\n        let { modifyFlag } = this.props;\r\n        if (modifyFlag && !initModify) {\r\n            this.setState({initModify:true, isNameChk:true});   // 수정일경우 처음에 중복확인 PASS\r\n        }\r\n    }\r\n\r\n    onResultServiceGroupList(res) {\r\n        if (res.result===\"ok\") {\r\n            this.setState({serviceGroupData:res.list});\r\n        } else if (res.result === \"fail\"){\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    \r\n    onChangeName() {\r\n        this.setState({inputChange:true,isNameChk:false});\r\n    }\r\n    \r\n    \r\n    onClickReg() {\r\n        if (!this.validationCheck()) return;\r\n        let parm = makeParam(this);\r\n        ServiceService.create(parm,this.onResultCreate,(e) => Msg.error(e.message));\r\n    }\r\n    \r\n    validationCheck() {\r\n        if (!this.state.inputChange) {\r\n            Msg.warn(\"변경된 사항이 없습니다.\");\r\n            return false;\r\n        }\r\n        // 초기화\r\n        this.setState({validName:null});\r\n        // 모델명\r\n        let chkVal = this.refs.serviceName.value;\r\n        let valiRes = Validation.chkServiceName(chkVal);\r\n        let chkState = {};\r\n        chkState.validName = true;\r\n        if (!valiRes.result) {\r\n            Msg.error(valiRes.errMsg);\r\n            chkState.validName = false;\r\n            this.setState(chkState);\r\n            return false;\r\n        }\r\n\r\n        // 서비스 그룹 체크 : default 선택으로 PASS\r\n\r\n        // DAG ID 체크\r\n        chkVal = this.refs.dagId.value;\r\n        valiRes = Validation.chkServiceDagIdExp(chkVal);\r\n        chkState.validDagId = true;\r\n        if (!valiRes.result) {\r\n            Msg.error(valiRes.errMsg);\r\n            chkState.validDagId = false;\r\n            this.setState(chkState);\r\n            return false;\r\n        }\r\n\r\n        // Cycle 입력했으면 체크\r\n        chkVal = this.refs.runCycle.value;\r\n        if (chkVal.length > 0) {\r\n            //None\r\n            if (!(chkVal === \"None\")) {\r\n                chkVal = chkVal.split(\" \");\r\n                if (chkVal.length !== 5) {\r\n                    Msg.error(\"Cycle 실행 입력 형식이 잘못되었습니다.\");\r\n                    return false;\r\n                }\r\n            }\r\n        } else {\r\n            this.refs.runCycle.value = \"None\";\r\n        }\r\n\r\n        // 모델 선택 체크\r\n        chkVal = this.refs.modelId.value;\r\n        chkState.validModelId = true;\r\n        if (chkVal.length < 1) {\r\n            Msg.error(\"모델을 선택해 주세요.\");\r\n            chkState.validModelId = false;\r\n            this.setState(chkState);\r\n            return false;\r\n        }\r\n        this.setState(chkState);\r\n        return true;\r\n    }\r\n    \r\n    onResultCreate(res) {\r\n        this.setState(this.defaultState);\r\n        if (res.result === \"ok\") {\r\n            Msg.ok(res.message);\r\n            this.props.onClose();\r\n        } else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    \r\n    onClose() {\r\n        setTimeout((e) => this.props.onClose(),100);\r\n    }\r\n    \r\n    modelChoosePopup() {\r\n        //title,cont,closeFn) {\r\n        this.setState({popupSelectedItem:undefined});\r\n        this.props.main.showPopup(\r\n            \"모델 선택\",\r\n            <ModelManager main={this.props.main} isPopup={true} onChangeItem={(item) => this.setState({popupSelectedItem:item})} onSelection={this.modelSelectedItem} onClose={() => this.props.main.hidePopup(\"모델 선택\")}/>,\r\n            {width:900, height:450, okLabel:\"선택\"},this.modelSelectedItem,\r\n            function() {\r\n                console.log(\"close\");\r\n            }\r\n        );\r\n    }\r\n    \r\n    modelSelectedItem() {\r\n        let {popupSelectedItem} = this.state;\r\n        if (!popupSelectedItem)\r\n            Msg.error(\"선택된 모델이 없습니다.\");\r\n        else {\r\n            this.addModelData(popupSelectedItem);\r\n        }\r\n    }\r\n\r\n    \r\n\tonChangeDesc() {\r\n        const maxLen = 100;\r\n        if (this.refs.serviceDesc.value.length > maxLen) {\r\n            this.refs.serviceDesc.value = this.refs.serviceDesc.value.substr(0,maxLen);\r\n        }\r\n        this.setState({descLength:this.refs.serviceDesc.value.length,inputChange:true});\r\n\t}\r\n\t\r\n\tonClickModelPop() {\r\n        const popTitle = \"Model 선택\";\r\n        this.props.main.showPopup(\r\n            popTitle,\r\n            <ModelPopCont title={popTitle} main={this.props.main} onClose={(e) => this.props.main.hidePopup(popTitle)} onClickSelection={this.onClickModelSelection}/> ,\r\n            {width:700, height:542, okLabel:\"선택\", popupBtnAreaVisible:false},null,null\r\n        );\r\n    }\r\n\t\r\n    onClickModelSelection(item) {\r\n        console.log(item);\r\n        let {modifyServiceInfo} = this.props;\r\n        this.refs.modelName.value = item.modelName;\r\n        this.refs.modelId.value = item.modelId;\r\n        // if (!modifyServiceInfo) modifyServiceInfo = {};\r\n        if (modifyServiceInfo) {\r\n            modifyServiceInfo.modelName = item.modelName;\r\n            modifyServiceInfo.modelId = item.modelId;\r\n            this.setState({inputChange:true,modifyServiceInfo:modifyServiceInfo});\r\n        } else {\r\n            this.setState({inputChange:true});\r\n        }\r\n    }\r\n    \r\n    onChangeDagId() {\r\n        this.setState({inputChange:true});\r\n    }\r\n    \r\n    render() {\r\n        const { serviceGroupData,selectedServiceGroupName } = this.state;\r\n        let { descLength } = this.state;\r\n        let { modifyFlag,modifyServiceInfo } = this.props;\r\n        if (modifyServiceInfo === undefined) modifyServiceInfo = {};\r\n\t\tlet i;\r\n\r\n        if (modifyServiceInfo.serviceGroupName && !selectedServiceGroupName) {\r\n            this.setState({selectedServiceGroupName:modifyServiceInfo.serviceGroupName});\r\n\t\t}\r\n\t\t\r\n\t\tlet serviceGroupOpts = [];\r\n        for (i=0; i<serviceGroupData.length; i++) {\r\n            if (selectedServiceGroupName === serviceGroupData[i].serviceGroupName)\r\n                serviceGroupOpts.push(\r\n                    <option value={serviceGroupData[i].serviceGroupName} key={Math.random()} selected>{serviceGroupData[i].serviceGroupName}</option>\r\n                );\r\n            else\r\n                serviceGroupOpts.push(\r\n                    <option value={serviceGroupData[i].serviceGroupName} key={Math.random()}>{serviceGroupData[i].serviceGroupName}</option>\r\n                );\r\n\t\t}\r\n\r\n\t\tif (descLength === 0 && modifyServiceInfo.serviceDesc !== null && modifyServiceInfo.serviceDesc !== undefined && modifyServiceInfo.serviceDesc.length > 0)\r\n            descLength = modifyServiceInfo.serviceDesc.length;\r\n\t\t\r\n        return <div className=\"table_type2\">\r\n        {modifyFlag ? \r\n            <input type=\"text\" ref=\"serviceId\" style={{display:\"none\"}} id=\"inputId\" defaultValue={modifyServiceInfo.serviceId} disabled/>\r\n        : null}\r\n        <table>\r\n          <tbody>\r\n            {modifyFlag ?\r\n            <tr>\r\n              <th>Service ID</th>\r\n              <td>\r\n                <div className=\"ipt_group\">\r\n\t\t\t\t<span className=\"txt\">{modifyServiceInfo.serviceId}</span>\r\n                </div>\r\n              </td>\r\n            </tr> : null}\r\n            <tr>\r\n              <th>Service명\r\n                  {/* <span className=\"font_gray\">(한글,영문 최대 20자)</span> */}\r\n                  <span className=\"necessary\">*</span></th>\r\n              <td>\r\n                <div className=\"ipt_group\">\r\n                  <input ref=\"serviceName\" type=\"text\" className=\"ipt_text\" placeholder=\"한글,영문 최대 50자\" \r\n                    // onKeyDown={(e) => e.keyCode === 13 && !isNameChk ? this.onClickNameCheck() : console.log('isNameChked')}\r\n                      onChange={(e) => {this.onChangeName()}}\r\n                      maxLength=\"50\" defaultValue={modifyServiceInfo.serviceName}/>\r\n                  {/* <a role=\"button\" className={\"btn btn_black btn_duplicate\" + (isNameChk ? ' success' : '')} onClick={(e) => {!isNameChk ? this.onClickNameCheck() : console.log('isNameChked')}}>{isNameChk ? '확인완료' : '중복확인'}</a> */}\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>Service Group<span className=\"necessary\">*</span></th>\r\n              <td>\r\n                <div className=\"ipt_group\">\r\n\t\t\t\t\t<select ref=\"serviceGroupName\" style={{width: 172,height: 38,outline: \"none\",border: \"1px solid #CECECE\",borderRadius: 3,paddingLeft: 8}}\r\n\t\t\t\t\t\tonChange={() => this.setState({inputChange:true,selectedServiceGroupName:this.refs.serviceGroupName.value})}>\r\n\t\t\t\t\t\t{serviceGroupOpts}\r\n\t\t\t\t\t</select>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n\t\t\t<tr>\r\n              <th>DAG ID\r\n                  {/* <span className=\"font_gray\">(한글,영문 최대 20자)</span> */}\r\n                  <span className=\"necessary\">*</span></th>\r\n              <td>\r\n                <div className=\"ipt_group\">\r\n                  <input ref=\"dagId\" type=\"text\" className=\"ipt_text\" placeholder=\"영문 최대 30자\" \r\n                    // onKeyDown={(e) => e.keyCode === 13 && !isNameChk ? this.onClickNameCheck() : console.log('isNameChked')}\r\n                      onChange={(e) => {this.onChangeDagId()}}\r\n                      maxLength=\"30\" defaultValue={modifyServiceInfo.dagId}/>\r\n                  {/* <a role=\"button\" className={\"btn btn_black btn_duplicate\" + (isNameChk ? ' success' : '')} onClick={(e) => {!isNameChk ? this.onClickNameCheck() : console.log('isNameChked')}}>{isNameChk ? '확인완료' : '중복확인'}</a> */}\r\n                </div>\r\n              </td>\r\n            </tr>\r\n\t\t\t<tr>\r\n              <th>Model<span className=\"necessary\">*</span></th>\r\n              <td>\r\n                <div className=\"ipt_group\">\r\n                    <label className=\"ipt_file\" for=\"iptFile\">\r\n                        <input ref=\"modelName\" type=\"text\" className=\"ipt_text file_text\" style={{width:431}}\r\n                            placeholder=\"모델을 선택해 주세요.\" defaultValue={modifyServiceInfo.modelName} disabled />\r\n                        <span className=\"btn btn_file\" onClick={() => this.onClickModelPop()}></span>\r\n                        <input type=\"button\" className=\"btn_clear\" style={{display: \"none\"}} />\r\n                    </label>\r\n                    {/* <input ref=\"modelName\" type=\"text\" className=\"ipt_text\" style={{width:\"calc(100% - 80px)\"}}\r\n                        placeholder=\"모델을 선택해 주세요.\" defaultValue={modifyServiceInfo.modelName} disabled/>\r\n\t\t\t\t\t<button className=\"btn btn_blue\" style={{height:32}} onClick={() => this.onClickModelPop()}>모델 선택</button> */}\r\n                    {modifyFlag\r\n                        ? <input ref=\"modelId\" type=\"hidden\" defaultValue={modifyServiceInfo.modelId}/>\r\n                        : <input ref=\"modelId\" type=\"hidden\"/>\r\n                    }\r\n                </div>\r\n              </td>\r\n            </tr>\r\n\t\t\t<tr>\r\n              <th>Cycle</th>\r\n              <td>\r\n                <div className=\"ipt_group\">\r\n\t\t\t\t\t<input ref=\"runCycle\" type=\"text\" className=\"ipt_text\" placeholder=\"* * * * *\" defaultValue={modifyServiceInfo.runCycle}\r\n\t\t\t\t\t\tonChange={(e) => this.setState({inputChange:true})}/>\r\n                </div>\r\n                {/* <div className=\"font_gray\">분[0-59] 시간[0-23] 일자[1-31] 월[1-12] 요일[0-6]</div>\r\n                <div className=\"font_gray\">(예) 20,30 23 * * 1 (매주 월요일 23시 20분,30분에 실행)</div> */}\r\n                <div className=\"font_gray\">※ 분[0-59] 시간[0-23] 일자[1-31] 월[1-12] 요일[0-6] 예) 20,30 23 * * * (매일 23시 20분,30분에 실행) </div>\r\n                <div className=\"font_gray\">※ None 가능 (Airflow에서 수동으로 실행할 때 설정)</div>\r\n                <div className=\"font_gray\">※ <a href=\"https://airflow.apache.org/docs/1.10.1/scheduler.html#dag-runs\" rel=\"noopener noreferrer\" target=\"_blank\">{'Airflow Scheduling & Triggers'}</a></div>\r\n                <div className=\"font_gray\">※ <a href=\"https://en.wikipedia.org/wiki/Cron#CRON_expression\" rel=\"noopener noreferrer\" target=\"_blank\">CRON expression</a></div>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>Description</th>\r\n              <td style={{textAlign:\"right\"}}>\r\n\t\t\t\t  <textarea ref=\"serviceDesc\" rows=\"3\" cols=\"100\" maxlength=\"100\" onChange={(e) => this.onChangeDesc()} defaultValue={modifyServiceInfo.serviceDesc}></textarea>\r\n                  <span className=\"font_gray\" style={{paddingRight:5}}>(<span style={{color:\"#ff7272\"}}>{descLength}</span> / 100)</span>\r\n\t\t\t  </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <div className=\"popupBtnArea btn_area addbtnarea\"><p className=\"btn2\">\r\n            <button className=\"btn btn_white\" onClick={() => this.props.onClose()}>취소</button>\r\n            <button className=\"btn btn_black\" onClick={(e) => this.onClickReg()}>저장</button>\r\n        </p></div>\r\n      </div>;\r\n    }\r\n}\r\n\r\nexport default ServiceReg;","import React, { Component } from 'react';\r\n\r\nclass ServiceDetail extends Component {\r\n    render() {\r\n        const { selectionItem } = this.props;\r\n        console.log(selectionItem);\r\n        return <div className=\"table_type2\">\r\n            <table>\r\n                <colgroup>\r\n                    <col style={{ width: 240 }} />\r\n                    <col style={{ width: \"*\" }} />\r\n                </colgroup>\r\n                <tbody>\r\n                    <tr>\r\n                        <th>Service명</th>\r\n                        <td>\r\n                            <div className=\"ipt_group\">\r\n                                <span className=\"txt\">{selectionItem.serviceName}</span>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Service Group</th>\r\n                        <td>\r\n                            <div className=\"ipt_group\">\r\n                                <span className=\"txt\">{selectionItem.serviceGroupName}</span>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>DAG ID</th>\r\n                        <td>\r\n                            <div className=\"ipt_group\">\r\n                                <span className=\"txt\">{selectionItem.dagId}</span>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Model</th>\r\n                        <td>\r\n                            <div className=\"ipt_group\">\r\n                                <span className=\"txt\">{selectionItem.modelName}</span>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Cycle</th>\r\n                        <td>\r\n                            <div className=\"ipt_group\">\r\n                                <span className=\"txt\">{selectionItem.runCycle}</span>\r\n                            </div>\r\n                            <div className=\"font_gray\">※ <a href=\"https://airflow.apache.org/docs/1.10.1/scheduler.html\" rel=\"noopener noreferrer\" target=\"_blank\">{'Airflow Scheduling & Triggers'}</a></div>\r\n                            <div className=\"font_gray\">※ <a href=\"https://en.wikipedia.org/wiki/Cron#CRON_expression\" rel=\"noopener noreferrer\" target=\"_blank\">CRON expression</a></div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Description</th>\r\n                        <td style={{ textAlign: \"right\" }}>\r\n                            <textarea ref=\"serviceDesc\" rows=\"3\" cols=\"100\" maxLength=\"100\" defaultValue={selectionItem.serviceDesc} disabled></textarea>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <div className=\"popupBtnArea btn_area addbtnarea\"><p className=\"btn2\">\r\n                <button className=\"btn btn_white\" onClick={() => this.props.main.hidePopup(this.props.title)}>닫기</button>\r\n            </p></div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default ServiceDetail;","import React, { Component } from 'react';\r\nimport { ServiceService } from 'service';\r\nimport Grid from '@toast-ui/react-grid';\r\nimport TuiGrid from 'tui-grid';\r\nimport { Pagination, Msg, NameRenderer } from 'comp';\r\nimport Validation from 'comp/Validation';\r\nimport ServiceReg from 'service/ServiceReg';\r\nimport { AdminService } from 'admin';\r\nimport ModelPopCont from 'model/ModelPopCont';\r\nimport ServiceDetail from 'service/ServiceDetail';\r\nimport { ModelService, ModelReg, ModelDetail } from 'model';\r\nimport { MenuCode } from 'main';\r\n/**\r\n * 화면명 : 서비스 관리\r\n * 화면 경로 : 서비스 > 서비스 관리\r\n * 화면 코드 : MENU00301\r\n * 참고 : https://nhn.github.io/tui.grid/latest/Grid\r\n */\r\nclass ServiceManager extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      gridData: [],\r\n      columns: [],\r\n      bodyHeight: 200,\r\n      pagesPage: 1,\r\n      pagesTotalCount: 0,\r\n      pagesPerPage: 5,\r\n      modifyServiceInfo: undefined,\r\n      serviceGroupData: [],\r\n      schInfo: undefined,\r\n      winPop: null,\r\n      prevGroup: undefined\r\n    };\r\n    this.requestData = this.requestData.bind(this);\r\n    this.onResultList = this.onResultList.bind(this);\r\n    this.onClickPageItem = this.onClickPageItem.bind(this);\r\n    this.onClickReg = this.onClickReg.bind(this);\r\n    this.onCloseReg = this.onCloseReg.bind(this);\r\n    this.onCloseModelReg = this.onCloseModelReg.bind(this);\r\n    this.onClickModify = this.onClickModify.bind(this);\r\n    this.onClickSch = this.onClickSch.bind(this);\r\n    this.onClickGridNameColumn = this.onClickGridNameColumn.bind(this);\r\n    this.onClickGridModelColumn = this.onClickGridModelColumn.bind(this);\r\n    this.onResultServiceGroupList = this.onResultServiceGroupList.bind(this);\r\n    this.onClickModelPop = this.onClickModelPop.bind(this);\r\n    this.onClickModelSelection = this.onClickModelSelection.bind(this);\r\n    this.onClickSchModelDel = this.onClickSchModelDel.bind(this);\r\n    this.onClickKill = this.onClickKill.bind(this);\r\n    this.onClickHistory = this.onClickHistory.bind(this)\r\n    this.onClickPlay = this.onClickPlay.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    TuiGrid.setLanguage('ko');\r\n    TuiGrid.applyTheme('clean'); // default, striped, clean\r\n\r\n    // 서비스 그룹\r\n    AdminService.serviceGroupList({}, this.onResultServiceGroupList, (err) => Msg.error(err.message));\r\n  }\r\n\r\n  componentDidUpdate() {\r\n  }\r\n\r\n  onResultServiceGroupList(res) {\r\n    if (res.result === \"ok\") {\r\n      this.setState({ serviceGroupData: res.list });\r\n      this.requestData(1);\r\n    } else if (res.result === \"fail\") {\r\n      Msg.error(res.message);\r\n    }\r\n  }\r\n\r\n  /**\r\n * 페이지 클릭 이벤트 핸들러\r\n * @param {int} page \r\n */\r\n  onClickPageItem(page) {\r\n    const { schKey } = this.refs;\r\n    if (schKey.value.length > 0)\r\n      this.requestData(page, schKey.value, true);\r\n    else\r\n      this.requestData(page, null, true);\r\n  }\r\n\r\n  requestData(page, schKeyword, fromKey) {\r\n    const { schServiceGroup, modelId } = this.refs;\r\n    if (page === undefined) page = this.state.pagesPage;\r\n    this.props.main.showLoading();\r\n    let parm = {\r\n      page: page\r\n    };\r\n    \r\n    if (fromKey !== undefined) {\r\n      parm.serviceGroupName = this.state.prevGroup;\r\n      this.refs.schServiceGroup.value = this.state.prevGroup;\r\n    } else {\r\n      parm.serviceGroupName = schServiceGroup.value;\r\n      this.setState({prevGroup:schServiceGroup.value});\r\n    }\r\n    \r\n    // model\r\n    if (modelId.value !== undefined && modelId.value !== null && modelId.value !== \"\") {\r\n      parm.modelId = modelId.value;\r\n    }\r\n\r\n    if (schKeyword !== undefined && schKeyword !== null) {\r\n      // Msg.info(\"필터전 : \" + schKeyword);\r\n      schKeyword = Validation.filterSchKeyword(schKeyword);\r\n      // Msg.info(\"필터후 : \" + schKeyword);\r\n      parm.schKey = schKeyword;\r\n    }\r\n    this.setState({ schInfo: parm });\r\n    ServiceService.list(parm, this.onResultList, (err) => Msg.error(err.message));\r\n  }\r\n\r\n  onResultList(res) {\r\n    this.props.main.hideLoading();\r\n    if (res.result === \"ok\") {\r\n      const pagesInfo = res.data;\r\n      let totalStatus = {};\r\n      if (pagesInfo.totalStatus) totalStatus = pagesInfo.totalStatus; \r\n      const columns = [\r\n        {\r\n          name: 'serviceName', header: 'Service Name', minWidth: 300, sortable: true,\r\n          renderer: {\r\n            type: NameRenderer, options: {\r\n              listData: res.list, labelKey: \"serviceName\",\r\n              onClickGridNameColumn: this.onClickGridNameColumn\r\n            }\r\n          }\r\n        },\r\n        { name: 'serviceGroupName', header: 'Service Group', sortable: true, align: \"center\" },\r\n        {\r\n          name: 'dagId', header: 'DAG ID', sortable: true, align: \"center\",\r\n          renderer: { type: DagIdRenderer, options: { listData: res.list } }\r\n        },\r\n        {\r\n          name: 'modelName', header: 'Model Name', sortable: true,\r\n          renderer: {\r\n            type: NameRenderer, options: {\r\n              listData: res.list, labelKey: \"modelName\",\r\n              onClickGridNameColumn: this.onClickGridModelColumn\r\n            }\r\n          }\r\n        },\r\n        { name: 'userId', header: 'Regist User', sortable: true, align: \"center\" },\r\n        {\r\n          name: 'state', header: 'Status', align: \"center\", sortable: true,\r\n          renderer: { type: StatusRenderer, options: { listData: res.list } }\r\n        },\r\n        { name: 'runCycle', header: 'Cycle', sortable: true, align: \"center\" },\r\n        {\r\n          name: 'action', header: 'Action', width: 100, align: \"center\",\r\n          renderer: { type: LinkRenderer, options: { listData: res.list, onClickKill: this.onClickKill, onClickHistory: this.onClickHistory, onClickPlay: this.onClickPlay } }\r\n        }\r\n      ];\r\n      this.setState({ gridData: res.list, pagesPage: pagesInfo.page, pagesTotalCount: pagesInfo.totalCount, pagesPerPage: pagesInfo.pageCount, columns: columns, totalStatus: totalStatus });\r\n    } else if (res.result === \"fail\") {\r\n      Msg.error(res.message);\r\n      if (res.errCode === \"401\") {\r\n        console.log(res.errCode);\r\n        this.props.main.setState({ login: false, role: '', username: '', sessionId: '', userInfo: {} });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n * 랜더러 클릭 이벤트 핸들러\r\n * @param {Object} item 선택 Row 데이터\r\n * @param {MouseEvent} e 클릭 이벤트\r\n * @param {Object} props 랜더러 Options\r\n */\r\n  onClickGridNameColumn(item, e, props) {\r\n    try {\r\n      const { userInfo } = this.props.main.state;\r\n      // 관리자/등록자는 수정 팝업\r\n      if (userInfo.userPermission === \"ADMIN\" || (item.userId === userInfo.userId)) {\r\n        ServiceService.getServiceInfo(item.serviceId, (res) => {\r\n          this.props.main.hideLoading();\r\n          if (res.result === \"ok\") {\r\n            this.onClickModify(res.data.serviceInfo);\r\n          }\r\n          else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n          }\r\n        }, (e) => { console.log(e); this.props.main.hideLoading(); });\r\n      } else {\r\n        const popTitle = \"Service Info.\";\r\n        this.props.main.showPopup(\r\n          popTitle,\r\n          <ServiceDetail title={popTitle} main={this.props.main} selectionItem={item} onClose={(e) => this.props.main.hidePopup(popTitle)} />,\r\n          { width: 735 + item.serviceName.length * 2, height: 600, popupBtnAreaVisible: false }, null, null\r\n        );\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  /**\r\n  * 랜더러 클릭 이벤트 핸들러\r\n  * @param {Object} item 선택 Row 데이터\r\n  * @param {MouseEvent} e 클릭 이벤트\r\n  * @param {Object} props 랜더러 Options\r\n  */\r\n  onClickGridModelColumn(item, e, props) {\r\n    if (this.props.isPopup && this.props.onChangeItem) {\r\n      this.props.onChangeItem(item);\r\n    }\r\n    if (this.props.isPopup) {\r\n      this.props.onSelection();\r\n      this.props.onClose();\r\n    } else {\r\n      try {\r\n        let { userInfo } = this.props.main.state;\r\n        // userInfo.userPermission = \"MODELER\"; // TEST\r\n        // 관리자/등록자는 수정 팝업\r\n        if (userInfo.userPermission === \"ADMIN\" || (item.userId === userInfo.userId)) {\r\n          ModelService.getModelInfo(item.modelId, (res) => {\r\n            if (res.result === \"ok\") {\r\n              this.popupModify(res.data.modelInfo, res.list);\r\n            }\r\n            else if (res.result === \"fail\") {\r\n              Msg.error(res.message);\r\n            }\r\n          }, (e) => console.log(e));\r\n        } else {\r\n          this.setState({ selectionRowKey: e.rowKey, selectionItem: item, selectionColumName: e.columnName, showDetail: true });\r\n          const popTitle = \"Model Info.\";\r\n          this.props.main.showPopup(\r\n            popTitle,\r\n            <ModelDetail main={this.props.main} sourceView={true} title={popTitle} selectionItem={item} onClose={(e) => this.onCloseDetail(popTitle)} />,\r\n            { width: 735, height: 677, popupBtnAreaVisible: false, contentAppendClass: \"model_content\" }, null, null\r\n          );\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n * 모델 수정 팝업\r\n * @param {Object} modelInfo \r\n * @param {Array} modelFiles \r\n */\r\n  popupModify(modelInfo, modelFiles) {\r\n    // this.setState({modifyModelInfo:modelInfo, modifyModelFiles:modelFiles, showDetail:false, showReg:true});\r\n    const popTitle = \"Model Modify\";\r\n    this.props.main.showPopup(\r\n      popTitle,\r\n      <ModelReg main={this.props.main} sourceView={true} modifyFlag={modelInfo !== undefined} modifyModelInfo={modelInfo} modifyModelFiles={modelFiles} onClose={(e) => this.onCloseModelReg(popTitle)} />,\r\n      { width: 735, height: 530, okLabel: \"저장\", popupBtnAreaVisible: false, contentAppendClass: \"model_content\" }, null, null\r\n    );\r\n  }\r\n\r\n  onCloseModelReg(title) {\r\n    // this.requestData(this.state.pagesPage);\r\n    // this.setState({modifyServiceInfo:undefined});\r\n    this.props.main.hidePopup(title);\r\n  }\r\n\r\n  onClickReg() {\r\n    const { modifyServiceInfo } = this.state;\r\n    // this.setState({showReg:true});\r\n    const popTitle = \"Create Service\";\r\n    this.props.main.showPopup(\r\n      popTitle,\r\n      <ServiceReg title={popTitle} main={this.props.main} modifyFlag={modifyServiceInfo !== undefined} modifyServiceInfo={modifyServiceInfo} onClose={(e) => this.onCloseReg(popTitle)} />,\r\n      { width: 735, height: 662, popupBtnAreaVisible: false }, null, null\r\n    );\r\n  }\r\n\r\n  onClickModelPop() {\r\n    const popTitle = \"Model Selection\";\r\n    this.props.main.showPopup(\r\n      popTitle,\r\n      <ModelPopCont title={popTitle} main={this.props.main} onClose={(e) => this.props.main.hidePopup(popTitle)} onClickSelection={this.onClickModelSelection} />,\r\n      { width: 700, height: 542, okLabel: \"선택\", popupBtnAreaVisible: false }, null, null\r\n    );\r\n  }\r\n\r\n  onClickModelSelection(item) {\r\n    this.refs.modelName.value = item.modelName;\r\n    this.refs.modelId.value = item.modelId;\r\n  }\r\n\r\n  onClickSchModelDel() {\r\n    this.refs.modelName.value = \"\";\r\n    this.refs.modelId.value = \"\";\r\n  }\r\n\r\n  /**\r\n * 검색 클릭 핸들러\r\n */\r\n  onClickSch() {\r\n    this.requestData(this.state.pagesPage, this.refs.schKey.value);\r\n  }\r\n\r\n  onClickModify(serviceInfo) {\r\n    const popTitle = \"Service Modify\";\r\n    this.props.main.showPopup(\r\n      popTitle,\r\n      <ServiceReg title={popTitle} main={this.props.main} modifyFlag={serviceInfo !== undefined} modifyServiceInfo={serviceInfo} onClose={(e) => this.onCloseReg(popTitle)} />,\r\n      { width: 735, height: 719, popupBtnAreaVisible: false }, null, null\r\n    );\r\n  }\r\n\r\n  onCloseReg(title) {\r\n      this.requestData(this.state.pagesPage);\r\n      this.setState({modifyModelInfo:undefined, modifyModelFiles:undefined});\r\n      this.props.main.hidePopup(title);\r\n  }\r\n  onClickHistory(row) {\r\n    this.props.main.onMenuChange(MenuCode.ADMIN_HIST_SERVICEEXEC, row);\r\n  }\r\n\r\n  onClickKill(item) {\r\n    // ServiceService.list(parm,this.onResultList,(err) => Msg.error(err.message));\r\n    ServiceService.kill(item.serviceId, this.onResultKill, (err) => Msg.error(err.message));\r\n  }\r\n\r\n  onClickPlay(item) {\r\n    // alert(\"ServiceManaget.js에서 'alert' 검색 후 변경\");\r\n    Msg.ok(\"서비스를 실행했습니다.\");\r\n    ServiceService.play(item.dagId, this.onResultPlay, (err) => Msg.error(err.message));\r\n  }\r\n\r\n  onResultKill(res) {\r\n    Msg.ok(res.message);\r\n  }\r\n\r\n  onResultPlay(res) {\r\n    if (res.result === \"ok\") {\r\n      Msg.ok(res.message);\r\n    }\r\n    else if (res.result === \"fail\") {\r\n      Msg.error(res.message);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      gridData, bodyHeight, columns,\r\n      pagesPage, pagesTotalCount, pagesPerPage,\r\n      serviceGroupData, schInfo, totalStatus\r\n    } = this.state;\r\n    const { role } = this.props.main.state;\r\n    if (totalStatus === undefined) totalStatus = {};\r\n    if (schInfo === undefined) schInfo = {};\r\n    let serviceGroupOpts = [<option value=\"all\">All</option>];\r\n    for (let i = 0; i < serviceGroupData.length; i++) {\r\n      serviceGroupOpts.push(\r\n        <option value={serviceGroupData[i].serviceGroupName} selected={schInfo.serviceGroupName === serviceGroupData[i].serviceGroupName} key={serviceGroupData[i].serviceGroupName}>{serviceGroupData[i].serviceGroupName}</option>\r\n      );\r\n    }\r\n    // 등록 버튼 스타일\r\n    let schSty = {};\r\n    if (role !== \"ADMIN\" && role !== 'MODELER') {\r\n      schSty.backgroundColor = \"#a2a2a2\";\r\n      schSty.border = \"none\";\r\n      schSty.cursor = \"auto\";\r\n    }\r\n    return <div className=\"page_layout\">\r\n      {/* <MainSubMenu /> */}\r\n      <div className=\"layout_contents\">\r\n        <div className=\"content_list model_aid_list table_type1\">\r\n          <div className=\"content_title\">\r\n            <h3 className=\"tit\">Service Management</h3>\r\n          </div>\r\n          <button className=\"airflow_btn\" onClick={() => window.open('http://61.97.187.199:8080/home', \"airFlow\")}></button>\r\n          {/* <a href=\"#\" rel=\"noopener noreferrer\" className=\"airflow_btn\" target=\"_blank\"></a> */}\r\n          <div className=\"search_condition\">\r\n            <div className=\"ipt_group search_basis search_basis2\">\r\n              <div className=\"group_center\">\r\n                <ul>\r\n                  <li>\r\n                    <span className=\"tit\">Service Group</span>\r\n                    <select ref=\"schServiceGroup\" className=\"ml5\" style={{ float: \"left\", width: 100, height: 32, marginLeft: 10, outline: \"none\", border: \"1px solid #CECECE\" }}>\r\n                      {serviceGroupOpts}\r\n                    </select>\r\n                  </li>\r\n                  <li className=\"\">\r\n                    <span className=\"tit float_left\">Model</span>\r\n                    <div className=\"ipt_searchpop\">\r\n                      <input ref=\"modelName\" type=\"text\" className=\"ipt_text ml5\" style={{ width: 201 }} disabled />\r\n                      <input ref=\"modelId\" type=\"hidden\" defaultValue={schInfo.modelId} />\r\n                      <button className=\"btn btn_white\" style={{ width: 30, marginLeft: -6, border: \"1px solid #CECECE\", borderLeft: \"none\" }} onClick={() => this.onClickSchModelDel()}>X</button>\r\n                      <span className=\"btn btn_file\" onClick={() => this.onClickModelPop()}></span>\r\n                    </div>\r\n                  </li>\r\n                  <li>\r\n                    <span className=\"tit\">Service Name / Dag ID</span>\r\n                    <input ref=\"schKey\" type=\"text\" className=\"ipt_text ml5\" style={{ width: 110 }} defaultValue={schInfo.schKey} />\r\n                  </li>\r\n                </ul>\r\n                <button className=\"btn btn_black\" onClick={() => this.onClickSch()}>검색</button>\r\n              </div>\r\n            </div>\r\n            <button className=\"btn btn_add btn_blue\" style={schSty}\r\n              onClick={() => { role !== \"ADMIN\" && role !== \"MODELER\" ? console.log(role) : this.onClickReg() }} ></button>\r\n          </div>\r\n\r\n          <div className=\"status_guide\">\r\n            <ul>\r\n              <li><span className=\"staus staus_running\"></span> Running <b>{totalStatus.running === undefined ? 0 : totalStatus.running}</b></li>\r\n              <li><span className=\"staus staus_standby\"></span> Standby <b>{totalStatus.standby === undefined ? 0 : totalStatus.standby}</b></li>\r\n              <li><span className=\"staus staus_unscheduled\"></span> Unscheduled <b>{totalStatus.unscheduled === undefined ? 0 : totalStatus.unscheduled}</b></li>\r\n              {/* <li style={{paddingLeft: 11}}><span>Total : {common.displNum(pagesTotalCount)}</span></li> */}\r\n            </ul>\r\n          </div>\r\n          <Grid ref={'grid'}\r\n            data={gridData} columnOptions={{ resizable: true }}\r\n            columns={columns}\r\n            scrollX={false} scrollY={false}\r\n          // bodyHeight={bodyHeight}\r\n          />\r\n          <div className=\"gridControlArea btn_area\">\r\n            <Pagination ref={'page'}\r\n              page={pagesPage}\r\n              totalCount={pagesTotalCount}\r\n              perPage={pagesPerPage}\r\n              onClickItem={this.onClickPageItem} />\r\n          </div>\r\n        </div>\r\n      </div></div>;\r\n  }\r\n}\r\n\r\nclass DagIdRenderer {\r\n  constructor(props) {\r\n    // <div className=\"tui-grid-cell-content\">model file ver test</div>\r\n    const { listData } = props.columnInfo.renderer.options;\r\n    const el = document.createElement('div');\r\n    el.className = \"tui-grid-cell-content\";\r\n    let item = undefined;\r\n    if (listData && listData.length > 0)\r\n      item = listData[props.rowKey];\r\n    el.innerText = item[\"dagId\"];\r\n    el.title = item[\"serviceId\"];\r\n\r\n    this.el = el;\r\n  }\r\n  getElement() {\r\n    return this.el;\r\n  }\r\n}\r\n\r\nclass LinkRenderer {\r\n  constructor(props) {\r\n    const { onClickKill, onClickHistory, onClickPlay, listData } = props.columnInfo.renderer.options;\r\n    let item = undefined;\r\n    if (listData && listData.length > 0)\r\n      item = listData[props.rowKey];\r\n    if (item === undefined) item = {};\r\n    let el = document.createElement('div');\r\n    // KILL 버튼\r\n    let kill = document.createElement('button');\r\n    kill.role = \"button\";\r\n    kill.className = item.state === 'running' ? \"btn_kill\" : \"btn_kill_disable\";\r\n    kill.title = \"KILL\";\r\n    if (item.state === 'running') {\r\n      kill.addEventListener(\"click\", (e) => onClickKill(item, e, props));\r\n    }\r\n    el.appendChild(kill);\r\n    // PLAY 버튼\r\n    let play = document.createElement('button');\r\n    play.role = \"button\";\r\n    play.className = item.state === 'running' ? \"btn_play_disable\" : \"btn_play\";\r\n    play.title = \"play\";\r\n    if (item.state !== 'running') {\r\n      play.addEventListener(\"click\", (e) => onClickPlay(item, e, props));\r\n    }\r\n    el.appendChild(play);\r\n    // HISTORY 버튼\r\n    let history = document.createElement('button');\r\n    history.className = 'btn_history'\r\n    history.title = \"History\";\r\n    history.addEventListener(\"click\", (e) => onClickHistory(item, e, props));\r\n    el.appendChild(history);\r\n    this.el = el;\r\n  }\r\n\r\n  getElement() {\r\n    return this.el\r\n  }\r\n}\r\n\r\nclass StatusRenderer {\r\n  constructor(props) {\r\n    const { onClickTestReq, listData } = props.columnInfo.renderer.options;\r\n    let item = undefined;\r\n    if (listData && listData.length > 0)\r\n      item = listData[props.rowKey];\r\n    if (item === undefined) item = {};\r\n    let el = document.createElement('span');\r\n    if (item.state === \"running\") {\r\n      el.className = \"staus staus_running\";\r\n    } else {\r\n      if (item.runCycle === \"None\" || item.runCycle === \"\" || item.runCycle === undefined || item.runCycle === null\r\n        || item.state === undefined || item.state === null) {\r\n        if ((item.runCycle !== null && item.runCycle.indexOf(\"@\") > -1) || (item.runCycle !== null && item.runCycle.split(\" \").length === 5))\r\n          el.className = \"staus staus_standby\";\r\n        else\r\n          el.className = \"staus staus_unscheduled\";\r\n      } else {\r\n        el.className = \"staus staus_standby\";\r\n      }\r\n    }\r\n    this.el = el;\r\n  }\r\n  getElement() {\r\n    return this.el;\r\n  }\r\n}\r\n\r\nclass ButtonRenderer {\r\n  constructor(props) {\r\n    const { onClickKill, listData } = props.columnInfo.renderer.options;\r\n    let item = undefined;\r\n    if (listData && listData.length > 0)\r\n      item = listData[props.rowKey];\r\n    if (item === undefined) item = {};\r\n    let el = document.createElement('a');\r\n    el.role = \"button\";\r\n    el.className = item.state === 'running'\r\n      ? \"table_btn btn_lineorange btn_resource\"\r\n      : \"table_btn btn_disable btn_resource\";\r\n    el.innerText = \"KILL\";\r\n    el.title = \"KILL\";\r\n    if (item.state === 'running')\r\n      el.addEventListener(\"click\", (e) => onClickKill(item, e, props));\r\n    this.el = el;\r\n  }\r\n  getElement() {\r\n    return this.el;\r\n  }\r\n}\r\n\r\nexport default ServiceManager;","import React, {Component} from 'react';\r\nimport { Msg } from 'comp';\r\nimport ServiceService from './ServiceService';\r\nimport {AdminService} from 'admin';\r\n// import UploadService from 'comp/file/services/upload-files.service';\r\n// import ModelFileItem from './ModelFileItem';\r\n\r\n/**\r\n * 화면명 : Service 이력 상세\r\n * 화면 경로 : Service > Service 관리 > Service 상세\r\n * 화면 코드 : \r\n * 참고 : Service 관리 화면에서 사용하는 등록 화면\r\n */\r\nclass ServiceDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            serviceInfo:undefined,\r\n            resourceGroupData:[]\r\n        };\r\n        this.onResultInfo = this.onResultInfo.bind(this);\r\n        this.onResultResourceGroupList = this.onResultResourceGroupList.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.props.main.showLoading();\r\n        ServiceService.getServiceHistInfo( this.props.selectionItem,this.onResultInfo,(e) => this.props.main.hideLoading() );\r\n        // 자원 그룹 할당\r\n        AdminService.resourceGroupList({},this.onResultResourceGroupList,(err) => Msg.error(err.message));\r\n    }\r\n    \r\n    onResultInfo(res) {\r\n        this.props.main.hideLoading();\r\n        // console.log( res.data );\r\n        if (res.result === \"ok\") {\r\n            this.setState({serviceInfo:res.data.serviceInfo});\r\n        }\r\n        else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    \r\n    onResultResourceGroupList(res) {\r\n        console.log(res);\r\n        if (res.result===\"ok\") {\r\n            this.setState({resourceGroupData:res.list});\r\n        } else if (res.result === \"fail\"){\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {serviceInfo,resourceGroupData} = this.state;\r\n        if (serviceInfo === undefined) serviceInfo = {};\r\n        let resourceGroupOpts = [];\r\n        for (let i=0; i<resourceGroupData.length; i++) {\r\n            if (serviceInfo.resourceGroupId === resourceGroupData[i].resourceGroupId)\r\n                resourceGroupOpts.push(\r\n                    <option value={resourceGroupData[i].resourceGroupId} key={Math.random()} selected>{resourceGroupData[i].resourceGroupName}</option>\r\n                );\r\n            else\r\n                resourceGroupOpts.push(\r\n                    <option value={resourceGroupData[i].resourceGroupId} key={Math.random()}>{resourceGroupData[i].resourceGroupName}</option>\r\n                );\r\n        }\r\n        return <div className=\"subMain\"><div className={'content'}>\r\n            <span className={'title'}>● Service 상세</span>\r\n            <form ref={'form'}>\r\n                <div className=\"form-group row\">\r\n                    <label for=\"inputName\" className=\"col-sm-2 col-form-label \">Service명</label>\r\n                    <div className=\"col-sm-10 input-group\">\r\n                        <input type=\"text\" className={\"form-control\"} id=\"inputName\"\r\n                            maxLength=\"20\" defaultValue={serviceInfo.serviceName}\r\n                        disabled />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label for=\"inputName\" className=\"col-sm-2 col-form-label\">버전</label>\r\n                    <div className=\"col-sm-10 input-group\">\r\n                        <input type=\"text\" className={\"form-control\"} id=\"inputName\" value={serviceInfo.version} disabled/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label for=\"inputName\" className=\"col-sm-2 col-form-label \">모델</label>\r\n                    <div className=\"col-sm-10 input-group\">\r\n                        <input className=\"form-control\" defaultValue={serviceInfo.modelName} disabled/>\r\n                </div></div>\r\n                \r\n                {/* <div className=\"form-group row\">\r\n                    <label for=\"inputName\" className=\"col-sm-2 col-form-label \">데이터</label>\r\n                    <div className=\"col-sm-10 input-group\">\r\n                        <div className=\"col-sm-10 input-group\" style={{paddingTop: 5,paddingBottom: 5,paddingLeft: 0}}>\r\n\r\n\r\n                        <div className=\"col-md-6 input-group\" style={{alignItems: \"center\"}}>\r\n                        <label style={{width:100,paddingTop: 6,paddingRight: 13}}>지역 선택</label>\r\n                        <select className=\"form-control\" disabled><option value=\"1\">1</option></select>\r\n                        </div>\r\n                        <div className=\"col-md-6 input-group\">\r\n                        <label style={{paddingTop: 6,paddingRight: 13}}>건물 선택</label>\r\n                        <select className=\"form-control\" disabled><option value=\"1\">1</option></select>\r\n                        </div>\r\n                        <div className=\"col-md-12 input-group\" style={{alignItems: \"center\"}}>\r\n                        <label style={{width:100,paddingTop: 6,paddingRight: 13}}>데이터 기간</label>\r\n                        <button className=\"btn btn-secondary btn-sm\" style={{width: 62}} disabled>1달</button>\r\n\r\n                        </div>\r\n\r\n                        </div>\r\n\r\n                </div></div> */}\r\n                \r\n                <div className=\"form-group row\">\r\n                    <label for=\"inputName\" className=\"col-sm-2 col-form-label\">자원 그룹 할당</label>\r\n                    <div className=\"col-sm-10 input-group\">\r\n                        <select ref=\"resourceGroupId\" className=\"form-control\" disabled>\r\n                            {resourceGroupOpts}\r\n                        </select>\r\n                </div></div>\r\n                <div className=\"form-group row\">\r\n                    <label for=\"inputName\" className=\"col-sm-2 col-form-label\">AirFlow 실행</label>\r\n                    <div className=\"col-sm-10 input-group\">\r\n                        <input ref=\"runCycle\" className=\"form-control\" defaultValue={serviceInfo.runCycle} disabled/>\r\n                </div></div>\r\n                <div className={'invaliderrmsg info'}>분[0-59] 시간[0-23] 일자[1-31] 월[1-12] 요일[0-6]</div>\r\n                <div className={'invaliderrmsg info'}>(예) 20,30 23 * * 1 (매주 월요일 23시 20분,30분에 실행)</div>\r\n            </form>\r\n            <div className=\"controlArea\">\r\n                <button className=\"btn btn-secondary btn-sm controlBtn\" onClick={this.props.onClose}>목록</button>\r\n                {this.props.modifyButtonVisible === undefined || this.props.modifyButtonVisible\r\n                    ? <button className=\"btn btn-success btn-sm controlBtn leftGap\" onClick={(e) => this.props.onClickModify(serviceInfo)}>수정</button>\r\n                    : null}\r\n            </div>\r\n\r\n            </div></div>;\r\n    }\r\n}\r\n\r\nexport default ServiceDetail;","import React, { Component } from 'react';\r\nimport { Dashboard } from 'dashboard';\r\nimport { MenuCode, SchIdPw } from 'main';\r\nimport { ModelManager } from 'model';\r\nimport { ServiceManager } from 'service';\r\nimport { HistoryServiceExec, HistoryModelReg, HistoryUserLogin, HistoryScaleInOut, ScaleInOutManager, ServiceGroupManager, CommonCodeMgr, UserManager } from 'admin';\r\n\r\n/**\r\n * 메인 컨텐츠 화면 정의\r\n */\r\nclass MainContent extends Component {\r\n  /**\r\n   * 메인 컨텐츠 반환\r\n   * @param {String} menuCode 메뉴 코드\r\n   * @param {Main} main 메인\r\n   * @param {Object} params 파라미터\r\n   * @return {JSX} 메인 컨텐츠\r\n   */\r\n  getContent(menuCode, main, params) {\r\n    let content;\r\n    switch (menuCode) {\r\n      case MenuCode.LOGIN_SCHIDPW:\r\n        content = <SchIdPw main={main} />;\r\n        break;\r\n      case MenuCode.DASHBOARD:\r\n        content = <Dashboard main={main} />;\r\n        break;\r\n\r\n      /** MODEL **/\r\n      case MenuCode.MODEL_MANAGER:                // 모델관리\r\n        content = <ModelManager main={main} menuCode={menuCode} onMenuChange={main.onMenuChange} />;\r\n        break;\r\n\r\n      /** SERVICE **/\r\n      case MenuCode.SERVICE_MANAGER:             // Service 관리\r\n        content = <ServiceManager main={main} menuCode={menuCode} onMenuChange={main.onMenuChange} />;\r\n        break;\r\n      case MenuCode.ADMIN_HIST_SERVICEEXEC:       // 이력 조회 > Service 실행결과 이력\r\n        content = <HistoryServiceExec main={main} menuCode={menuCode} onMenuChange={main.onMenuChange} params={params} />;\r\n        break;\r\n\r\n      /** ADMIN **/\r\n      case MenuCode.ADMIN_USERMGR:                // 사용자 관리\r\n        content = <UserManager main={main} menuCode={menuCode} onMenuChange={main.onMenuChange} />;\r\n        break;\r\n      case MenuCode.ADMIN_HIST_LOGIN:        \t\t// 이력 조회 > 사용자 로그인 이력\r\n        content = <HistoryUserLogin main={main} menuCode={menuCode} onMenuChange={main.onMenuChange} />;\r\n        break;\r\n      case MenuCode.ADMIN_HIST_MODELREG:          // 이력 조회 > Model 등록 이력\r\n        content = <HistoryModelReg main={main} menuCode={menuCode} onMenuChange={main.onMenuChange} />;\r\n        break;\r\n      case MenuCode.ADMIN_HIST_SCALEINOUT:         // Resource 이력\r\n        content = <HistoryScaleInOut main={main} menuCode={menuCode} onMenuChange={main.onMenuChange} />;\r\n        break;\r\n      case MenuCode.ADMIN_SACLEINOUTMGR:          // Scale In/Out 관리\r\n        content = <ScaleInOutManager main={main} menuCode={menuCode} onMenuChange={main.onMenuChange} />;\r\n        break;\r\n      case MenuCode.ADMIN_SERVICEGROUP:            // 서비스 그룹 관리\r\n        content = <ServiceGroupManager main={main} menuCode={menuCode} onMenuChange={main.onMenuChange} />;\r\n        break;\r\n      case MenuCode.ADMIN_COMMONCODE:            \t// 공통 코드 관리\r\n        content = <CommonCodeMgr main={main} menuCode={menuCode} onMenuChange={main.onMenuChange} />;\r\n        break;\r\n      default:\r\n        content = <div>{menuCode}</div>;\r\n    }\r\n    return content;\r\n  }\r\n}\r\n\r\nexport default new MainContent();","import React, { Component } from 'react';\r\n\r\n/**\r\n * 화면명 : 메인 화면 경로\r\n * 화면 경로 : 없음.\r\n * 화면 코드 : 없음.\r\n * 참고 : \r\n */\r\nclass MainPath extends Component {\r\n  render() {\r\n    const { paths, onClick } = this.props;\r\n    let pathcomps = [];\r\n    for (let i = 0; i < this.props.paths.length; i++) {\r\n      if (i > 0) pathcomps.push(<label key={Math.random()}>&gt;</label>);\r\n      pathcomps.push(<PathItem name={paths[i].name} menuCode={paths[i].menuCode} onClick={onClick} key={Math.random()} />);\r\n    }\r\n    return <div className=\"breadcrumb\"><p className=\"inner\">\r\n      {pathcomps}\r\n    </p></div>;\r\n  }\r\n}\r\n\r\nclass PathItem extends Component {\r\n  render() {\r\n    return <span>{this.props.name}</span>\r\n  }\r\n}\r\n\r\nexport default MainPath;","import React, {Component} from 'react';\r\nimport { AdminService } from 'admin';\r\nimport Validation from 'comp/Validation';\r\nimport { Msg } from 'comp';\r\n\r\n/**\r\n * 화면명 : 아이디 / 비밀번호 찾기\r\n * 화면 경로 :\r\n * 화면 코드 :\r\n * 참고 : \r\n */\r\nclass SchIdPw extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tabFocus:\"schId\"\r\n        };\r\n        this.tabChange = this.tabChange.bind(this);\r\n        this.onClickSchId = this.onClickSchId.bind(this);\r\n        this.onClickSchPw = this.onClickSchPw.bind(this);\r\n        this.validationSchId = this.validationSchId.bind(this);\r\n        this.validationSchPw = this.validationSchPw.bind(this);\r\n        this.onResultSearchId = this.onResultSearchId.bind(this);\r\n        this.onResultSearchPw = this.onResultSearchPw.bind(this);\r\n    }\r\n\r\n\t/**************************************************************************/\r\n\t/* 기능 */\r\n\t/**************************************************************************/\r\n    /**\r\n     * 탭 변경\r\n     * @param {String} type 탭 구분 (schId|schPw)\r\n     */\r\n    tabChange(type) {\r\n        this.setState({tabFocus:type});\r\n    }\r\n    \r\n    /**\r\n     * 아이디 찾기 요청\r\n     */\r\n    onClickSchId() {\r\n        if (!this.validationSchId()) return;\r\n        let parm = {};\r\n        parm.userName = this.refs.userName.value;\r\n        parm.userEmail = this.refs.schIdEmail.value;\r\n        // console.log(\"searchId parameter >> \");\r\n        // console.log(parm);\r\n        AdminService.searchId(parm,this.onResultSearchId,(e) => console.log(e));\r\n    }\r\n    \r\n    /**\r\n     * 비밀번호 찾기 요청\r\n     */\r\n    onClickSchPw() {\r\n        if (!this.validationSchPw()) return;\r\n        let parm = {};\r\n        parm.userId = this.refs.userId.value;\r\n        parm.userEmail = this.refs.schPwEmail.value;\r\n        // console.log(\"searchPw parameter >> \");\r\n        // console.log(parm);\r\n        AdminService.searchPw(parm,this.onResultSearchPw,(e) => console.log(e));\r\n    }\r\n    \r\n    /**\r\n     * 아이디 찾기 Validation Check\r\n     * @return {boolean} 가능여부\r\n     */\r\n    validationSchId() {\r\n        //userName\r\n        //schIdEmail\r\n        let chkVal = this.refs.userName.value;\r\n        if (chkVal.length < 2) {\r\n            Msg.error(\"이름을 입력해 주세요.\");\r\n            this.refs.userName.focus();\r\n            return false;\r\n        }\r\n        chkVal = this.refs.schIdEmail.value;\r\n        let valiRes = Validation.chkEmail(chkVal);\r\n        if (!valiRes.result) {\r\n            Msg.error(valiRes.errMsg);\r\n            this.refs.schIdEmail.focus();\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    \r\n    /**\r\n     * 비밀번호 찾기 Validation Check\r\n     * @return {boolean} 가능여부\r\n     */\r\n    validationSchPw() {\r\n        //userId\r\n        //schPwEmail\r\n        let chkVal = this.refs.userId.value;\r\n        if (chkVal.length < 2) {\r\n            Msg.error(\"아이디를 입력해 주세요.\");\r\n            this.refs.userId.focus();\r\n            return false;\r\n        }\r\n        chkVal = this.refs.schPwEmail.value;\r\n        let valiRes = Validation.chkEmail(chkVal);\r\n        if (!valiRes.result) {\r\n            Msg.error(valiRes.errMsg);\r\n            this.refs.schPwEmail.focus();\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n\t/**************************************************************************/\r\n\t/* 핸들러 */\r\n\t/**************************************************************************/\r\n    /**\r\n     * 아이디 찾기 결과 핸들러\r\n     * @param {Object} res {result:ok|fail,data:{userId},message:결과 메세지}\r\n     */\r\n    onResultSearchId(res) {\r\n        console.log(res);\r\n        if (res.result === \"ok\") {\r\n            Msg.ok(\"아이디는 \" + res.data.userId + \"입니다.\");\r\n        }\r\n        else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * 비밀번호 찾기 결과 핸들러\r\n     * @param {Object} res {result:ok|fail,message:결과 메세지}\r\n     */\r\n    onResultSearchPw(res) {\r\n        console.log(res);\r\n        if (res.result === \"ok\") {\r\n            Msg.ok(res.message);\r\n        }\r\n        else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const {tabFocus} = this.state;\r\n        return <div className=\"schIdPw mainContent\"><div className={'container'}>\r\n            <div className=\"tab\">\r\n                <div className={\"col-md-6 item\" + (tabFocus === \"schId\" ? \" active\" : \"\")} onClick={() => (tabFocus !== \"schId\" ? this.tabChange('schId') : null)}>ID 찾기</div>\r\n                <div className={\"col-md-6 item\" + (tabFocus === \"schPw\" ? \" active\" : \"\")} onClick={() => (tabFocus !== \"schPw\" ? this.tabChange('schPw') : null)}>Password 찾기</div>\r\n            </div>\r\n\r\n            {tabFocus === \"schId\"\r\n                ? <div className=\"form\">\r\n                    <div className=\"form\">\r\n                        <input ref=\"userName\" className=\"form-control\" placeholder=\"이름\" />\r\n                    </div>\r\n                    <div className=\"form\">\r\n                        <input ref=\"schIdEmail\" className=\"form-control\" placeholder=\"이메일\"/>\r\n                    </div>\r\n                    <div className=\"form\">\r\n                        <button className=\"btn btn-success btn-sm\" onClick={() => this.onClickSchId()}>아이디 찾기</button>\r\n                    </div>\r\n                </div>\r\n            : null}\r\n            {tabFocus === \"schPw\"\r\n                ? <div className=\"form\">\r\n                <div className=\"form\">\r\n                    <input ref=\"userId\" className=\"form-control\" placeholder=\"아이디\" />\r\n                </div>\r\n                <div className=\"form\">\r\n                    <input ref=\"schPwEmail\" className=\"form-control\" placeholder=\"이메일\"/>\r\n                </div>\r\n                <div className=\"form\">\r\n                    <button className=\"btn btn-success btn-sm\" onClick={() => this.onClickSchPw()}>Password 재설정</button>\r\n                </div>\r\n            </div>\r\n        : null}\r\n        </div></div>;\r\n    }\r\n}\r\n\r\nexport default SchIdPw;","import React, {Component} from 'react';\r\nimport {MenuCode} from 'main';\r\n\r\n/**\r\n * 화면명 : 로고\r\n * 화면 경로 : 없음.\r\n * 화면 코드 : 없음.\r\n * 참고 : \r\n */\r\nclass Logo extends Component {\r\n    render() {\r\n        const {onMenuChange} = this.props;\r\n        return <div className=\"brand\">\r\n            <h1 className=\"logo\"><a onClick={() => onMenuChange(MenuCode.DASHBOARD)}><span className=\"hide\">ESP Energy Intelligence</span></a></h1>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default Logo;","import React, {Component} from 'react';\r\nimport { Msg, Validation } from 'comp';\r\nimport { MainService } from 'main';\r\nimport { makeParam } from 'comp/common';\r\n\r\n/**\r\n * 화면명 : 비밀번호 변경\r\n * 화면 경로 : 우측 상단 사용자 서브 메뉴에 비밀번호 변경\r\n * 화면 코드 : 없음.\r\n * 참고 : \r\n */\r\nclass ChangeUserPassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClickReg = this.onClickReg.bind(this);\r\n        this.onConfirmOk = this.onConfirmOk.bind(this);\r\n        this.onConfirmCancel = this.onConfirmCancel.bind(this);\r\n        this.validationCheck = this.validationCheck.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refs.currpw.focus();\r\n    }\r\n\r\n\t/**************************************************************************/\r\n\t/* 기능 */\r\n\t/**************************************************************************/\r\n    /**\r\n     * 변경 클릭 이벤트 핸들러\r\n     */\r\n    onClickReg() {\r\n        if (!this.validationCheck()) return;\r\n        // 정말 저장하시겠습니까?\r\n        const popTitle = \"Change User Password Confirm\";\r\n        this.props.main.showPopup(\r\n            popTitle,\r\n            <div style={{textAlign: \"center\",fontSize: 17,paddingTop:4,paddingBottom: 21}}>정말 변경하시겠습니까?</div> ,\r\n            {width:432, height:171, headerVisiable:false},this.onConfirmOk,this.onConfirmCancel\r\n        );\r\n    }\r\n    \r\n    /**\r\n     * 변경전 값 체크\r\n     */\r\n    validationCheck() {\r\n        // 비밀번호\r\n        let chkVal = this.refs.currpw.value;\r\n        if (chkVal.length < 1) {\r\n            Msg.error(\"현재 비밀번호를 입력해 주세요.\");\r\n            return false;\r\n        }\r\n        chkVal = this.refs.pw.value;\r\n        if (chkVal.length < 1) {\r\n            Msg.error(\"변경할 비밀번호를 입력해 주세요.\");\r\n            return false;\r\n        }\r\n        let valiRes = Validation.chkPw(chkVal);\r\n        if (!valiRes.result) {\r\n            Msg.error(valiRes.errMsg);\r\n            return false;\r\n        }\r\n        let chkVal2 = this.refs.pwchk.value;\r\n        if (chkVal !== chkVal2) {\r\n            Msg.error(\"비밀번호가 동일하지 않습니다.\");\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n\t/**************************************************************************/\r\n\t/* 핸들러 */\r\n\t/**************************************************************************/\r\n    /**\r\n     * 변경 확인\r\n     */\r\n    onConfirmOk() {\r\n        // Msg.info(\"ok\");\r\n        const parm = makeParam(this);\r\n        // console.log(parm);\r\n        parm.userId = this.props.main.state.userInfo.userId;\r\n        MainService.changeUserPw(parm,this.onResultChangePw,(e) => Msg.error(e.message));\r\n    }\r\n    \r\n    /**\r\n     * 변경 결과 이벤트 핸들러\r\n     * @param {Object} res {result:ok|fail,message:결과 메세지}\r\n     */\r\n    onResultChangePw(res) {\r\n        if (res.result === \"ok\") {\r\n            Msg.ok(res.message);\r\n            this.props.onClose();\r\n        } else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * 변경 확인 취소\r\n     */\r\n    onConfirmCancel() {\r\n        // Msg.info(\"cancel\");\r\n    }\r\n    \r\n    render() {\r\n        return <div className=\"table_type2\">\r\n            <table>\r\n                <tbody>\r\n                <tr>\r\n                    <th>Password</th>\r\n                    <td>\r\n                    <div className=\"ipt_group\">\r\n                        <input type=\"password\" className=\"ipt_text\" ref=\"currpw\" placeholder=\"현재 비밀번호\"/>\r\n                        <input type=\"password\" className=\"ipt_text\" ref=\"pw\" placeholder=\"영문자,특수문자 조합해서 4자리에서 12자리\" style={{marginTop: 4}}/>\r\n                        <input type=\"password\" className=\"ipt_text\" ref=\"pwchk\" placeholder=\"확인\" style={{marginTop: 4}}/>\r\n                    </div>\r\n                    </td>\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n            <div className=\"popupBtnArea btn_area addbtnarea\"><p className=\"btn2\">\r\n                <button className=\"btn btn_white\" onClick={() => this.props.onClose()}>취소</button>\r\n                <button className=\"btn btn_black\" onClick={() => this.onClickReg()}>저장</button>\r\n            </p></div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default ChangeUserPassword;","import React, {Component} from 'react';\r\nimport { Loading,common, Msg, Confirm, SystemChecking, Modal, DeadServer, Popup, Message } from 'comp';\r\nimport { MenuCode, CookieNames, MainContent, MenuData, MainTop, Login, MainPath, CommonCode, MainService } from 'main';\r\nimport http from \"comp/http-common\";\r\n\r\n/**\r\n * 화면명 : 메인\r\n * 화면 경로 : 없음.\r\n * 화면 코드 : 없음.\r\n * 참고 : 화면 최상단\r\n */\r\nclass Main extends Component {\r\n    constructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tuserInfo:{},\r\n\t\t\tloading:false,\r\n\t\t\tcontent:null,\r\n\t\t\tmenuCode:'',\r\n\t\t\tlogin:false,\r\n\t\t\tsessionId:'',\r\n\t\t\trole:'',\r\n\t\t\tusername:'',\r\n\t\t\tpaths:[],\r\n\t\t\tcommonCode:[],\r\n\t\t\tpopup:false,\r\n\t\t\tmodal:false,\r\n\t\t\tallScreen:false,\r\n\t\t\tshowLogin:false,\r\n\t\t\tconfirm:false,\r\n\t\t\tconfirmTitle:undefined,\r\n\t\t\tconfirmMessage:undefined,\r\n\t\t\tconfirmOkfn:undefined,\r\n\t\t\tconfirmCancelFn:undefined,\r\n\t\t\tpopupIdx:[],\r\n\t\t\tpopups:{},\r\n\t\t\tpopupTitle:undefined,\r\n\t\t\tpopupContent:undefined,\r\n\t\t\tpopupOpts:undefined,\r\n\t\t\tpopupOkFn:undefined,\r\n\t\t\tpopupCancelFn:undefined,\r\n\t\t\tmessage:false,\r\n\t\t\tmessageMsg:\"\"\r\n\t\t}\r\n\t\tthis.onResultCommonCode = this.onResultCommonCode.bind(this);\r\n\t\tthis.showLoading = this.showLoading.bind(this);\r\n\t\tthis.hideLoading = this.hideLoading.bind(this);\r\n\t\tthis.onMenuChange = this.onMenuChange.bind(this);\r\n\t\tthis.getContent = this.getContent.bind(this);\r\n\t\tthis.onChkLogin = this.onChkLogin.bind(this);\r\n\t\tthis.onResultCommonCode = this.onResultCommonCode.bind(this);\r\n\t\tthis.onFail = this.onFail.bind(this);\r\n\t\tthis.hideLogin = this.hideLogin.bind(this);\r\n\r\n\t\tthis.showConfirm = this.showConfirm.bind(this);\r\n\t\tthis.hideConfirm = this.hideConfirm.bind(this);\r\n\t\tthis.showPopup = this.showPopup.bind(this);\r\n\t\tthis.hidePopup = this.hidePopup.bind(this);\r\n\t}\r\n    \r\n    componentWillMount() {\r\n\t\tcommon.main = this;\r\n        // Spring Boot내에서 웹을 돌릴경우(.env.production REACT_APP_WAS_URL 주소 현재 사용안함)\r\n        // 웹 서버를 따로 돌릴경우 빼야함.(.env.production 설정에 REACT_APP_WAS_URL 주소로 호출)\r\n        if (process.env.NODE_ENV === 'production')\r\n            http.defaults.baseURL = \"\";\r\n    }\r\n    \r\n    componentDidMount() {\r\n        window.onresize();\r\n        // 공통 코드 가져오기\r\n        MainService.commonCodeList(this.onResultCommonCode,this.onFail);\r\n    }\r\n\r\n\t/**************************************************************************/\r\n\t/* 기능 */\r\n\t/**************************************************************************/\r\n\t/**\r\n\t * 로딩 실행\r\n\t */\r\n\tshowLoading(modal) {\r\n      if (modal)\r\n          this.setState({loading:true,modal:modal});\r\n      else\r\n          this.setState({loading:true});\r\n\t}\r\n\t\r\n\t/**\r\n\t * 로딩 종료\r\n\t */\r\n\thideLoading() {\r\n\t\tthis.setState({loading:false,modal:false});\r\n\t}\r\n\t\r\n    /**\r\n     * 메뉴 변경\r\n     * @param {String} menuCode 메뉴 코드\r\n     * @param {Object} params 파라미터\r\n     * @param {boolean} unconditionality 강제실행여부(동일한 메뉴코드)\r\n     */\r\n  onMenuChange(menuCode, params, unconditionality) {\r\n    console.log(menuCode, params, unconditionality)\r\n        if (!unconditionality && menuCode === this.state.menuCode) return;\r\n\r\n\t\tif (menuCode === MenuCode.LOGIN) {\r\n\t\t\tthis.setState({showLogin:true});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst content = this.getContent(menuCode, params);\r\n\t\t// const pathData = this.makePathData(menuCode);\r\n\t\tconst pathData = MenuData.getPaths(menuCode);\r\n\t\tcommon.setCookie(CookieNames.LAST_MENU_CODE,menuCode);\r\n\t\tthis.setState({content:content,menuCode:menuCode,paths:pathData});\r\n\t}\r\n\t\r\n\t/**\r\n\t * 메뉴 화면 반환\r\n\t * @param {String} menuCode 메뉴 코드\r\n\t */\r\n\tgetContent(menuCode, params) {\r\n\t\tconst content = MainContent.getContent(menuCode,this, params);\r\n\t\treturn content;\r\n\t}\r\n\t\r\n\t/**\r\n\t * 로그인 팝업 닫기\r\n\t */\r\n\thideLogin() {\r\n\t\tthis.setState({showLogin:false});\r\n\t}\r\n\r\n\t/**\r\n     * 확인 컴퍼넌트 실행\r\n     * @param {String} title 제목\r\n     * @param {String} message 메세지\r\n     * @param {Function} okFn 확인 콜백 함수\r\n     * @param {Function} cancelFn 취소 콜백 함수\r\n     */\r\n    showConfirm(title,message,okFn,cancelFn) {\r\n        this.setState({confirm:true,confirmTitle:title,confirmMessage:message,confirmOkfn:okFn,confirmCancelFn:cancelFn});\r\n    }\r\n    \r\n    /**\r\n     * 확인 컴퍼넌트 종료\r\n     */\r\n    hideConfirm() {\r\n        this.setState({confirm:false,confirmTitle:undefined,confirmMessage:undefined,confirmOkfn:undefined,confirmCancelFn:undefined});\r\n\t}\r\n    \r\n\t/**\r\n     * 공통 팝업 열기\r\n     * @param {String} title 팝업 타이틀 (여러 팝업 띄웠을때 플래그 역할을 한다.)\r\n     * @param {JSX} cont 컨텐츠 화면\r\n     * @param {Object} opts 옵션\r\n     * @param {Function} okFn 확인 콜백 함수\r\n     * @param {Function} closeFn 닫기 콜백 함수\r\n     */\r\n    showPopup(title,cont,opts,okFn,closeFn) {\r\n        let {popupIdx,popups} = this.state;\r\n        const popupOpt = {\r\n            title:title,\r\n            content:cont,\r\n            opts:opts,\r\n            okFn:okFn,\r\n            closeFn:closeFn\r\n\t\t};\r\n        popupIdx.push(title);\r\n        popups[title] = popupOpt;\r\n        this.setState({popup:true,popupIdx:popupIdx,popups:popups});\r\n        // this.setState({popup:true, modal:true, popupTitle:title, popupContent:cont, popupOpts:opts, popupOkFn:okFn, popupCloseFn:closeFn});\r\n    }\r\n    \r\n    /**\r\n     * 해당 팝업 타이틀을 갖고있는 팝업 닫기\r\n\t * @param {String} title 팝업 타이틀\r\n     */\r\n    hidePopup(title) {\r\n        const {popups,popupIdx} = this.state;\r\n        let nPopups = {};\r\n        let nPopupIdx = [];\r\n        for (let i=0; i<popupIdx.length; i++) {\r\n            if (title !== popupIdx[i]) {\r\n                nPopups[popupIdx[i]] = popups[popupIdx[i]];\r\n                nPopupIdx.push(popupIdx[i]);\r\n            }\r\n        }\r\n        if (nPopupIdx.length < 1)\r\n            this.setState({popup:false,popups:{},popupIdx:[]});\r\n        else\r\n            this.setState({popups:nPopups,popupIdx:nPopupIdx});\r\n    }\r\n    \r\n\t/**************************************************************************/\r\n\t/* 핸들러 */\r\n\t/**************************************************************************/\r\n    /**\r\n     * 공통 코드 결과 핸들러\r\n     * @param {Object} res {result:ok|fail,list:공통코드 리스트,message:결과 메세지}\r\n     */\r\n    onResultCommonCode(res) {\r\n        if (res.result === \"ok\") {\r\n            CommonCode.setData(res.list);\r\n\r\n            // 시스템 점검중 설정 확인\r\n            if (CommonCode.getValue(\"SYSTEM_CONFIG\",\"SYS_CHECKING\") === \"Y\") {\r\n                this.setState({allScreen:true,content:<SystemChecking />});\r\n            } else {\r\n                const setSessionId = common.getCookie(CookieNames.SESSION_ID);\r\n                MainService.chkLogin(setSessionId,this.onChkLogin,(err) => Msg.error(err.message));\r\n            }\r\n        } else if (res.result === \"fail\") {\r\n            Msg.error(res.message);\r\n            this.setState({content:<DeadServer />});\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * 요청 결과 실패 이벤트 핸들러\r\n     * @param {Error} err\r\n     */\r\n    onFail(err) {\r\n        // 웹만 살아있을경우(웹을 따로 돌릴경우) 서버가 죽어 있어 요청실패시 서버 통신 안된다는 메세지 화면 출력\r\n        if (err.message === 'Network Error') {\r\n            this.setState({content:<DeadServer />});\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * 로그인중 확인 결과 핸들러\r\n     * @param {Object} res {result:ok|fail,data:{userInfo:{userPermission,userName}},message:결과 메세지}\r\n     */\r\n    onChkLogin(res) {\r\n        // console.log(res);\r\n        if (res.result === \"ok\") {\r\n            let setSessionId = res.data.sessionId;\r\n            if (setSessionId && setSessionId.replace(/ /g,'') !== '') {\r\n                // console.log(res.data);\r\n                if (res.data && res.data.userInfo) {\r\n\t\t\t\t\tconst {userPermission, userId} = res.data.userInfo;\r\n\t\t\t\t\tthis.setState({login:true,sessionId:setSessionId,role:userPermission,username:userId,userInfo:res.data.userInfo});\r\n\t\t\t\t\tlet preMenuCode = common.getCookie(CookieNames.LAST_MENU_CODE);\r\n\t\t\t\t\tthis.onMenuChange(preMenuCode && (preMenuCode !== null || preMenuCode !== undefined) ? preMenuCode : MenuCode.SERVICE);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcommon.setCookie(CookieNames.SESSION_ID,\"\");\r\n\t\t\t\t\tcommon.setCookie(CookieNames.LAST_MENU_CODE,\"\");\r\n\t\t\t\t\tthis.onMenuChange(MenuCode.DASHBOARD);\r\n\t\t\t\t}\r\n\r\n            }\r\n        } else {\r\n            common.setCookie(CookieNames.SESSION_ID,\"\");\r\n            common.setCookie(CookieNames.LAST_MENU_CODE,\"\");\r\n            this.onMenuChange(MenuCode.DASHBOARD);\r\n        }\r\n\t}\r\n    \r\n\t/**\r\n\t * Message\r\n\t * @param {String} msg message\r\n\t */\r\n\tmsg(msg) {\r\n\t\tthis.setState({message:true,messageMsg:msg,model:true});\r\n\t}\r\n\t\r\n    render() {\r\n\t\tconst {\r\n\t\t\tusername,\r\n\t\t\trole,\r\n\t\t\tpaths,\r\n\t\t\tcontent,\r\n\t\t\tloading,\r\n\t\t\tconfirm,\r\n\t\t\tconfirmTitle,\r\n\t\t\tconfirmMessage,\r\n\t\t\tconfirmOkfn,\r\n\t\t\tconfirmCancelFn,\r\n\t\t\tpopup,\r\n\t\t\tmodal,\r\n\t\t\tpopupIdx,\r\n\t\t\tpopups,\r\n\t\t\tallScreen,\r\n\t\t\tshowLogin,\r\n\t\t\tmessage,\r\n\t\t\tmessageMsg,\r\n\t\t\tmenuCode\r\n\t\t} = this.state;\r\n\r\n\t\tlet pops = [];\r\n\t\tlet popOpts;\r\n\t\tif (popup) {\r\n\t\t\tfor (let i=0; i<popupIdx.length; i++) {\r\n\t\t\t\tpopOpts = popups[popupIdx[i]];\r\n\t\t\t\tpops.push(\r\n\t\t\t\t\t<Popup onClose={() => this.hidePopup(popOpts.title)} \r\n\t\t\t\t\t\ttitle={popOpts.title}\r\n\t\t\t\t\t\tcontent={popOpts.content}\r\n\t\t\t\t\t\topts={popOpts.opts}\r\n\t\t\t\t\t\tokFn={popOpts.okFn} closeFn={popOpts.closeFn}/>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn <div className=\"page_root\">\r\n\t\t\t{/* 전체 화면을 활용하는 화면이면 기본틀을 안보이게 처리한다. */}\r\n\t\t\t{allScreen ? <div>{content}</div>\r\n\t\t\t\t: <div className=\"page_wrapper\">\r\n\t\t\t\t\t\t<MainTop main={this} username={username} role={role} onMenuChange={this.onMenuChange}/>\r\n\r\n\t\t\t\t\t\t<div className={\"page_container\" + (menuCode === MenuCode.DASHBOARD ? ' dash_wrap' : '')}>\r\n\t\t\t\t\t\t\t{/* 대시보드 화면은 메뉴 경로를 안보이게 처리한다. */}\r\n\t\t\t\t\t\t\t{menuCode !== MenuCode.DASHBOARD ? <MainPath paths={paths} onClick={this.onMenuChange} /> : null }\r\n\t\t\t\t\t\t\t{content}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t{/* 모달 */}\r\n\t\t\t\t\t\t{modal ? <Modal /> : null}\r\n\t\t\t\t\t\t{/* 공통 팝업 */}\r\n\t\t\t\t\t\t{pops}\r\n\t\t\t\t\t\t{/* 로그인 팝업 */}\r\n\t\t\t\t\t\t{showLogin ? <Login main={this} onClose={this.hideLogin} /> : null}\r\n\t\t\t\t\t\t{/* 확인 컴퍼넌트 */}\r\n\t\t\t\t\t\t{confirm ? <Confirm main={this}\r\n\t\t\t\t\t\t\tconfirmTitle={confirmTitle}\r\n\t\t\t\t\t\t\tconfirmMessage={confirmMessage}\r\n\t\t\t\t\t\t\tconfirmOkfn={confirmOkfn}\r\n\t\t\t\t\t\t\tconfirmCancelFn={confirmCancelFn}\r\n\t\t\t\t\t\t\t/> : null}\r\n\t\t\t\t\t\t{/* Msg */}\r\n\t\t\t\t\t\t{message ? <Message message={messageMsg} onClickOk={() => this.setState({message:false,modal:false})}/> : null}\r\n\t\t\t\t\t\t{/* 로딩 */}\r\n\t\t\t\t\t\t{loading ? <Loading /> : null}\r\n\t\t\t\t</div>\r\n\t\t\t}{/* allScreen */}\r\n\t\t\t<div className=\"page_footer dash_footer\">\r\n\t\t\t\t<div className=\"page_inner\">\r\n\t\t\t\t<a alt=\"logo\"></a>\r\n\t\t\t\t<ul className=\"footer_aside\">\r\n\t\t\t\t\t<li>개인정보 처리방침</li>\r\n\t\t\t\t\t<li>이용약관</li>\r\n\t\t\t\t</ul>\r\n\t\t\t\t<span className=\"float\">Copyright 2020 by SK Telecom Co., Ltd. All Rights Reserved.</span>\r\n\t\t\t\t</div>  \r\n\t\t\t</div>\r\n\t\t</div>;{/* page_root */}\r\n\t} /* render */\r\n}\r\n\t\t\t\t\t\t\r\nexport default Main;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'css/loading.css';\nimport 'tui-grid/dist/tui-grid.css';\nimport 'react-day-picker/lib/style.css';\nimport 'css/custom.css';\nimport 'css/customcust.css';\nimport Main from 'main/Main';\nimport * as serviceWorker from 'serviceWorker';\n// import {Promise} from \"bluebird\";\n\nwindow.onresize = function (evt) {\n  document.getElementById('root').style.height = (window.innerHeight-18) + 'px';\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}